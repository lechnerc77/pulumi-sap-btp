{
    "name": "btp",
    "displayName": "(Unoffical) Pulumi Provider for SAP BTP",
    "description": "A Pulumi package for creating and managing Btp resources",
    "keywords": [
        "pulumi",
        "btp",
        "category/cloud"
    ],
    "homepage": "https://github.com/lechnerc77/pulumi-btp",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`btp` Terraform Provider](https://github.com/SAP/terraform-provider-btp).",
    "repository": "https://github.com/lechnerc77/pulumi-btp",
    "logoUrl": "https://raw.githubusercontent.com/lechnerc77/pulumi-btp/main/docs/btp.png",
    "pluginDownloadURL": "github://api.github.com/lechnerc77/pulumi-btp",
    "publisher": "lechnerc77",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "PulumiBtp"
        },
        "go": {
            "importBasePath": "github.com/lechnerc77/pulumi-btp/sdk/go/btp",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "java": {
            "basePackage": "com.lechnerc77.pulumi.btp",
            "buildFiles": "",
            "gradleNexusPublishPluginVersion": "",
            "gradleTest": ""
        },
        "nodejs": {
            "packageName": "@lechnerc77/pulumi-btp",
            "packageDescription": "A Pulumi package for creating and managing Btp resources",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/SAP/terraform-provider-btp)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-btp` repo](https://github.com/lechnerc77/pulumi-btp/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-btp` repo](https://github.com/SAP/terraform-provider-btp/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "lechnerc77_pulumi_btp",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/SAP/terraform-provider-btp)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-btp` repo](https://github.com/lechnerc77/pulumi-btp/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-btp` repo](https://github.com/SAP/terraform-provider-btp/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "cliServerUrl": {
                "type": "string",
                "description": "The URL of the BTP CLI server (e.g. `https://cli.btp.cloud.sap`).\n"
            },
            "globalaccount": {
                "type": "string",
                "description": "The subdomain of the global account in which you want to manage resources. To be found in the cockpit, in the global\naccount view.\n"
            },
            "idp": {
                "type": "string",
                "description": "The identity provider to be used for authentication (default: SAP ID service with origin `sap.default`).\n"
            },
            "idtoken": {
                "type": "string",
                "description": "A valid id token. To be provided instead of 'username' and 'password'. This can also be sourced from the `BTP_IDTOKEN`\nenvironment variable. (SAP-internal usage only)\n",
                "secret": true
            },
            "password": {
                "type": "string",
                "description": "Your password. Note that two-factor authentication is not supported. This can also be sourced from the `BTP_PASSWORD`\nenvironment variable.\n",
                "secret": true
            },
            "tlsClientCertificate": {
                "type": "string",
                "description": "PEM encoded certificate (only required for x509 auth).\n"
            },
            "tlsClientKey": {
                "type": "string",
                "description": "PEM encoded private key (only required for x509 auth).\n"
            },
            "tlsIdpUrl": {
                "type": "string",
                "description": "The URL of the identity provider to be used for authentication (only required for x509 auth).\n"
            },
            "username": {
                "type": "string",
                "description": "Your user name, usually an e-mail address. This can also be sourced from the `BTP_USERNAME` environment variable.\n"
            }
        },
        "defaults": [
            "globalaccount"
        ]
    },
    "types": {
        "btp:index/DirectoryRoleCollectionRole:DirectoryRoleCollectionRole": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the referenced role.\n"
                },
                "roleTemplateAppId": {
                    "type": "string",
                    "description": "The name of the referenced template app id.\n"
                },
                "roleTemplateName": {
                    "type": "string",
                    "description": "The name of the referenced role template.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "roleTemplateAppId",
                "roleTemplateName"
            ]
        },
        "btp:index/GlobalaccountRoleCollectionRole:GlobalaccountRoleCollectionRole": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the referenced role.\n"
                },
                "roleTemplateAppId": {
                    "type": "string",
                    "description": "The name of the referenced template app id.\n"
                },
                "roleTemplateName": {
                    "type": "string",
                    "description": "The name of the referenced role template.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "roleTemplateAppId",
                "roleTemplateName"
            ]
        },
        "btp:index/SubaccountEnvironmentInstanceTimeouts:SubaccountEnvironmentInstanceTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "Timeout for creating the environment instance.\n"
                },
                "delete": {
                    "type": "string",
                    "description": "Timeout for deleting the environment instance.\n"
                },
                "update": {
                    "type": "string",
                    "description": "Timeout for updating the environment instance.\n"
                }
            },
            "type": "object"
        },
        "btp:index/SubaccountRoleCollectionRole:SubaccountRoleCollectionRole": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the referenced role.\n"
                },
                "roleTemplateAppId": {
                    "type": "string",
                    "description": "The name of the referenced template app id.\n"
                },
                "roleTemplateName": {
                    "type": "string",
                    "description": "The name of the referenced role template.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "roleTemplateAppId",
                "roleTemplateName"
            ]
        },
        "btp:index/SubaccountServiceInstanceTimeouts:SubaccountServiceInstanceTimeouts": {
            "properties": {
                "create": {
                    "type": "string",
                    "description": "Timeout for creating the service instance.\n"
                },
                "delete": {
                    "type": "string",
                    "description": "Timeout for deleting the service instance.\n"
                },
                "update": {
                    "type": "string",
                    "description": "Timeout for updating the service instance.\n"
                }
            },
            "type": "object"
        },
        "btp:index/getDirectoryEntitlementsValues:getDirectoryEntitlementsValues": {
            "properties": {
                "category": {
                    "type": "string",
                    "description": "The current state of the entitlement. Possible values are:\n"
                },
                "planDescription": {
                    "type": "string"
                },
                "planDisplayName": {
                    "type": "string"
                },
                "planName": {
                    "type": "string"
                },
                "quotaAssigned": {
                    "type": "number"
                },
                "quotaRemaining": {
                    "type": "number"
                },
                "serviceDisplayName": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "category",
                "planDescription",
                "planDisplayName",
                "planName",
                "quotaAssigned",
                "quotaRemaining",
                "serviceDisplayName",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getDirectoryRoleCollectionRole:getDirectoryRoleCollectionRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the referenced role\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the referenced role.\n"
                },
                "roleTemplateAppId": {
                    "type": "string",
                    "description": "The name of the referenced template app id\n"
                },
                "roleTemplateName": {
                    "type": "string",
                    "description": "The name of the referenced role template.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "roleTemplateAppId",
                "roleTemplateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getDirectoryRoleCollectionsValue:getDirectoryRoleCollectionsValue": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role collection.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the role collection is read-only.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/getDirectoryRoleCollectionsValueRole:getDirectoryRoleCollectionsValueRole"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "readOnly",
                "roles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getDirectoryRoleCollectionsValueRole:getDirectoryRoleCollectionsValueRole": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roleTemplateAppId": {
                    "type": "string"
                },
                "roleTemplateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "roleTemplateAppId",
                "roleTemplateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getDirectoryRoleScope:getDirectoryRoleScope": {
            "properties": {
                "customGrantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customGrantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the scope.\n"
                },
                "grantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the scope.\n"
                }
            },
            "type": "object",
            "required": [
                "customGrantAsAuthorityToApps",
                "customGrantedApps",
                "description",
                "grantAsAuthorityToApps",
                "grantedApps",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getDirectoryRolesValue:getDirectoryRolesValue": {
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The id of the application that provides the role template and the role.\n"
                },
                "appName": {
                    "type": "string",
                    "description": "The name of the application that provides the role template and the role.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the role can be modified or not.\n"
                },
                "roleTemplateName": {
                    "type": "string",
                    "description": "The name of the role template.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/getDirectoryRolesValueScope:getDirectoryRolesValueScope"
                    },
                    "description": "The scopes available with this role.\n"
                }
            },
            "type": "object",
            "required": [
                "appId",
                "appName",
                "description",
                "name",
                "readOnly",
                "roleTemplateName",
                "scopes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getDirectoryRolesValueScope:getDirectoryRolesValueScope": {
            "properties": {
                "customGrantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customGrantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "grantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "customGrantAsAuthorityToApps",
                "customGrantedApps",
                "description",
                "grantAsAuthorityToApps",
                "grantedApps",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getGlobalaccountEntitlementsValues:getGlobalaccountEntitlementsValues": {
            "properties": {
                "category": {
                    "type": "string",
                    "description": "The current state of the entitlement. Possible values are:\n"
                },
                "planDescription": {
                    "type": "string"
                },
                "planDisplayName": {
                    "type": "string"
                },
                "planName": {
                    "type": "string"
                },
                "quotaAssigned": {
                    "type": "number"
                },
                "quotaRemaining": {
                    "type": "number"
                },
                "serviceDisplayName": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "category",
                "planDescription",
                "planDisplayName",
                "planName",
                "quotaAssigned",
                "quotaRemaining",
                "serviceDisplayName",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getGlobalaccountRoleCollectionRole:getGlobalaccountRoleCollectionRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the referenced role\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the referenced role.\n"
                },
                "roleTemplateAppId": {
                    "type": "string",
                    "description": "The name of the referenced template app id\n"
                },
                "roleTemplateName": {
                    "type": "string",
                    "description": "The name of the referenced role template.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "roleTemplateAppId",
                "roleTemplateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getGlobalaccountRoleCollectionsValue:getGlobalaccountRoleCollectionsValue": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role collection.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the role collection is read-only.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/getGlobalaccountRoleCollectionsValueRole:getGlobalaccountRoleCollectionsValueRole"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "readOnly",
                "roles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getGlobalaccountRoleCollectionsValueRole:getGlobalaccountRoleCollectionsValueRole": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roleTemplateAppId": {
                    "type": "string"
                },
                "roleTemplateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "roleTemplateAppId",
                "roleTemplateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getGlobalaccountRoleScope:getGlobalaccountRoleScope": {
            "properties": {
                "customGrantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customGrantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the scope.\n"
                },
                "grantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the scope.\n"
                }
            },
            "type": "object",
            "required": [
                "customGrantAsAuthorityToApps",
                "customGrantedApps",
                "description",
                "grantAsAuthorityToApps",
                "grantedApps",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getGlobalaccountRolesValue:getGlobalaccountRolesValue": {
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The id of the application that provides the role template and the role.\n"
                },
                "appName": {
                    "type": "string",
                    "description": "The name of the application that provides the role template and the role.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the role can be modified or not.\n"
                },
                "roleTemplateName": {
                    "type": "string",
                    "description": "The name of the role template.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/getGlobalaccountRolesValueScope:getGlobalaccountRolesValueScope"
                    },
                    "description": "The scopes available with this role.\n"
                }
            },
            "type": "object",
            "required": [
                "appId",
                "appName",
                "description",
                "name",
                "readOnly",
                "roleTemplateName",
                "scopes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getGlobalaccountRolesValueScope:getGlobalaccountRolesValueScope": {
            "properties": {
                "customGrantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customGrantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "grantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "customGrantAsAuthorityToApps",
                "customGrantedApps",
                "description",
                "grantAsAuthorityToApps",
                "grantedApps",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getGlobalaccountTrustConfigurationsValue:getGlobalaccountTrustConfigurationsValue": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the trust configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The tenant's domain which should be used for user logon.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The origin of the identity provider.\n",
                    "deprecationMessage": "Use the `origin` attribute instead"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "The name of the Identity Authentication tenant the global account is connected to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the trust configuration.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The origin of the identity provider.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol used to establish trust with the identity provider.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the trust configuration can be modified.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Shows whether the identity provider is currently 'active' or 'inactive'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The trust type.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "domain",
                "id",
                "identityProvider",
                "name",
                "origin",
                "protocol",
                "readOnly",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getRegionsValue:getRegionsValue": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "The domain of the data center\n"
                },
                "environment": {
                    "type": "string",
                    "description": "The environment that the data center supports. For example: Kubernetes, Cloud Foundry.\n"
                },
                "iaasProvider": {
                    "type": "string",
                    "description": "The infrastructure provider for the data center. Possible values are:\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the global account.\n"
                },
                "name": {
                    "type": "string"
                },
                "provisioningServiceUrl": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "saasRegistryServiceUrl": {
                    "type": "string"
                },
                "supportsTrial": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "domain",
                "environment",
                "iaasProvider",
                "id",
                "name",
                "provisioningServiceUrl",
                "region",
                "saasRegistryServiceUrl",
                "supportsTrial"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountAppOauth2Configuration:getSubaccountAppOauth2Configuration": {
            "properties": {
                "allowedproviders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "autoapprove": {
                    "type": "boolean"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "integer"
                },
                "systemAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenValidity": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "allowedproviders",
                "autoapprove",
                "grantTypes",
                "redirectUris",
                "refreshTokenValidity",
                "systemAttributes",
                "tokenValidity"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountAppsValue:getSubaccountAppsValue": {
            "properties": {
                "authorities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the app.\n"
                },
                "foreignScopeReferences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.\n"
                },
                "masterAppId": {
                    "type": "string"
                },
                "oauth2Configuration": {
                    "$ref": "#/types/btp:index/getSubaccountAppsValueOauth2Configuration:getSubaccountAppsValueOauth2Configuration"
                },
                "orgId": {
                    "type": "string"
                },
                "planId": {
                    "type": "string"
                },
                "planName": {
                    "type": "string"
                },
                "serviceinstanceId": {
                    "type": "string"
                },
                "spaceId": {
                    "type": "string"
                },
                "tenantMode": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "xsappname": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorities",
                "description",
                "foreignScopeReferences",
                "id",
                "masterAppId",
                "oauth2Configuration",
                "orgId",
                "planId",
                "planName",
                "serviceinstanceId",
                "spaceId",
                "tenantMode",
                "username",
                "xsappname"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountAppsValueOauth2Configuration:getSubaccountAppsValueOauth2Configuration": {
            "properties": {
                "allowedproviders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "autoapprove": {
                    "type": "boolean"
                },
                "grantTypes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "redirectUris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refreshTokenValidity": {
                    "type": "integer"
                },
                "systemAttributes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tokenValidity": {
                    "type": "integer"
                }
            },
            "type": "object",
            "required": [
                "allowedproviders",
                "autoapprove",
                "grantTypes",
                "redirectUris",
                "refreshTokenValidity",
                "systemAttributes",
                "tokenValidity"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountEntitlementsValues:getSubaccountEntitlementsValues": {
            "properties": {
                "category": {
                    "type": "string",
                    "description": "The current state of the entitlement. Possible values are:\n"
                },
                "planDescription": {
                    "type": "string"
                },
                "planDisplayName": {
                    "type": "string"
                },
                "planName": {
                    "type": "string"
                },
                "quotaAssigned": {
                    "type": "number"
                },
                "quotaRemaining": {
                    "type": "number"
                },
                "serviceDisplayName": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "category",
                "planDescription",
                "planDisplayName",
                "planName",
                "quotaAssigned",
                "quotaRemaining",
                "serviceDisplayName",
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountEnvironmentInstancesValue:getSubaccountEnvironmentInstancesValue": {
            "properties": {
                "brokerId": {
                    "type": "string",
                    "description": "The ID of the associated environment broker.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "customLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "dashboardUrl": {
                    "type": "string",
                    "description": "The URL of the service dashboard, which is a web-based management user interface for the service instances.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the environment instance.\n"
                },
                "environmentType": {
                    "type": "string",
                    "description": "The type of the environment instance that is used.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the environment instance.\n"
                },
                "labels": {
                    "type": "string",
                    "description": "The Broker-specified key-value pairs that specify attributes of an environment instance.\n"
                },
                "landscapeLabel": {
                    "type": "string",
                    "description": "The name of the landscape within the logged-in region on which the environment instance is created.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment instance.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "An identifier that represents the last operation. This ID is returned by the environment brokers.\n"
                },
                "parameters": {
                    "type": "string",
                    "description": "The configuration parameters for the environment instance.\n"
                },
                "planId": {
                    "type": "string",
                    "description": "The ID of the service plan for the environment instance in the corresponding service broker's catalog.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The name of the service plan for the environment instance in the corresponding service broker's catalog.\n"
                },
                "platformId": {
                    "type": "string",
                    "description": "The ID of the platform for the environment instance in the corresponding service broker's catalog.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service for the environment instance in the corresponding service broker's catalog.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service for the environment instance in the corresponding service broker's catalog.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the environment instance. Possible values are:\n"
                },
                "tenantId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "brokerId",
                "createdDate",
                "customLabels",
                "dashboardUrl",
                "description",
                "environmentType",
                "id",
                "labels",
                "landscapeLabel",
                "lastModified",
                "name",
                "operation",
                "parameters",
                "planId",
                "planName",
                "platformId",
                "serviceId",
                "serviceName",
                "state",
                "tenantId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountEnvironmentsValue:getSubaccountEnvironmentsValue": {
            "properties": {
                "availabilityLevel": {
                    "type": "string",
                    "description": "The availability level of the environment broker.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the environment.\n"
                },
                "environmentType": {
                    "type": "string",
                    "description": "The type of environment that is available (for example: cloudfoundry).\n"
                },
                "landscapeLabel": {
                    "type": "string",
                    "description": "The landscape label of the environment broker.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The name of the service plan for the available environment.\n"
                },
                "planUpdateable": {
                    "type": "boolean",
                    "description": "Specifies if the consumer can change the plan of an existing instance of the environment.\n"
                },
                "schemaCreate": {
                    "type": "string",
                    "description": "The create schema of the environment broker.\n"
                },
                "schemaUpdate": {
                    "type": "string",
                    "description": "The update schema of the environment broker.\n"
                },
                "serviceDescription": {
                    "type": "string",
                    "description": "The short description of the service.\n"
                },
                "serviceDisplayName": {
                    "type": "string",
                    "description": "The display name of the service.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service offered in the catalog of the corresponding environment broker (for example: cloudfoundry).\n"
                },
                "technicalKey": {
                    "type": "string",
                    "description": "The technical key of the corresponding environment broker.\n"
                }
            },
            "type": "object",
            "required": [
                "availabilityLevel",
                "description",
                "environmentType",
                "landscapeLabel",
                "planName",
                "planUpdateable",
                "schemaCreate",
                "schemaUpdate",
                "serviceDescription",
                "serviceDisplayName",
                "serviceName",
                "technicalKey"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountRoleCollectionRole:getSubaccountRoleCollectionRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the referenced role\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the referenced role.\n"
                },
                "roleTemplateAppId": {
                    "type": "string",
                    "description": "The name of the referenced template app id\n"
                },
                "roleTemplateName": {
                    "type": "string",
                    "description": "The name of the referenced role template.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "roleTemplateAppId",
                "roleTemplateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountRoleCollectionsValue:getSubaccountRoleCollectionsValue": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role collection.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the role collection is read-only.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/getSubaccountRoleCollectionsValueRole:getSubaccountRoleCollectionsValueRole"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "readOnly",
                "roles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountRoleCollectionsValueRole:getSubaccountRoleCollectionsValueRole": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roleTemplateAppId": {
                    "type": "string"
                },
                "roleTemplateName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "roleTemplateAppId",
                "roleTemplateName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountRoleScope:getSubaccountRoleScope": {
            "properties": {
                "customGrantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customGrantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string",
                    "description": "The description of the scope.\n"
                },
                "grantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the scope.\n"
                }
            },
            "type": "object",
            "required": [
                "customGrantAsAuthorityToApps",
                "customGrantedApps",
                "description",
                "grantAsAuthorityToApps",
                "grantedApps",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountRolesValue:getSubaccountRolesValue": {
            "properties": {
                "appId": {
                    "type": "string",
                    "description": "The id of the application that provides the role template and the role.\n"
                },
                "appName": {
                    "type": "string",
                    "description": "The name of the application that provides the role template and the role.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the role can be modified or not.\n"
                },
                "roleTemplateName": {
                    "type": "string",
                    "description": "The name of the role template.\n"
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/getSubaccountRolesValueScope:getSubaccountRolesValueScope"
                    },
                    "description": "The scopes available with this role.\n"
                }
            },
            "type": "object",
            "required": [
                "appId",
                "appName",
                "description",
                "name",
                "readOnly",
                "roleTemplateName",
                "scopes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountRolesValueScope:getSubaccountRolesValueScope": {
            "properties": {
                "customGrantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customGrantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "grantAsAuthorityToApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grantedApps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "customGrantAsAuthorityToApps",
                "customGrantedApps",
                "description",
                "grantAsAuthorityToApps",
                "grantedApps",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountServiceBindingsValue:getSubaccountServiceBindingsValue": {
            "properties": {
                "bindResource": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Contains the resources associated with the binding.\n"
                },
                "context": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Contextual data for the resource.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "credentials": {
                    "type": "string",
                    "description": "The credentials to access the binding.\n",
                    "secret": true
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the service binding.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the binding.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service binding.\n"
                },
                "ready": {
                    "type": "boolean",
                    "description": "Shows whether the service binding is ready.\n"
                },
                "serviceInstanceId": {
                    "type": "string",
                    "description": "The ID of the service instance associated with the binding.\n"
                }
            },
            "type": "object",
            "required": [
                "bindResource",
                "context",
                "createdDate",
                "credentials",
                "id",
                "labels",
                "lastModified",
                "name",
                "ready",
                "serviceInstanceId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountServiceInstancesValue:getSubaccountServiceInstancesValue": {
            "properties": {
                "context": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Contextual data for the resource.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the service instance.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the service instance.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service instance.\n"
                },
                "platformId": {
                    "type": "string",
                    "description": "The platform ID.\n"
                },
                "ready": {
                    "type": "boolean"
                },
                "serviceplanId": {
                    "type": "string",
                    "description": "The ID of the service plan.\n"
                },
                "usable": {
                    "type": "boolean",
                    "description": "Shows whether the resource can be used.\n"
                }
            },
            "type": "object",
            "required": [
                "context",
                "createdDate",
                "id",
                "labels",
                "lastModified",
                "name",
                "platformId",
                "ready",
                "serviceplanId",
                "usable"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountServiceOfferingsValue:getSubaccountServiceOfferingsValue": {
            "properties": {
                "allowContextUpdates": {
                    "type": "boolean",
                    "description": "Shows whether the context for the service offering can be updated.\n"
                },
                "bindable": {
                    "type": "boolean",
                    "description": "Shows whether the service offering is bindable.\n"
                },
                "bindingsRetrievable": {
                    "type": "boolean",
                    "description": "Shows whether the bindings associated with the service offering can be retrieved.\n"
                },
                "brokerId": {
                    "type": "string",
                    "description": "The ID of the broker that provides the service plan.\n"
                },
                "catalogId": {
                    "type": "string",
                    "description": "The ID of the service offering as provided by the catalog.\n"
                },
                "catalogName": {
                    "type": "string",
                    "description": "The catalog name of the service offering.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the service offering.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the service offering.\n"
                },
                "instancesRetrievable": {
                    "type": "boolean",
                    "description": "Shows whether the service instances associated with the service offering can be retrieved.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service offering.\n"
                },
                "planUpdateable": {
                    "type": "boolean",
                    "description": "Shows whether the offered plan can be updated.\n"
                },
                "ready": {
                    "type": "boolean",
                    "description": "Shows whether the service offering is ready to be advertised.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of tags for the service offering.\n"
                }
            },
            "type": "object",
            "required": [
                "allowContextUpdates",
                "bindable",
                "bindingsRetrievable",
                "brokerId",
                "catalogId",
                "catalogName",
                "createdDate",
                "description",
                "id",
                "instancesRetrievable",
                "lastModified",
                "name",
                "planUpdateable",
                "ready",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountServicePlansValue:getSubaccountServicePlansValue": {
            "properties": {
                "bindable": {
                    "type": "boolean",
                    "description": "Shows whether the service plan is bindable.\n"
                },
                "catalogId": {
                    "type": "string",
                    "description": "The ID of the service plan in the service broker catalog.\n"
                },
                "catalogName": {
                    "type": "string",
                    "description": "The name of the associated service broker catalog.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the service plan.\n"
                },
                "free": {
                    "type": "boolean",
                    "description": "Shows whether the service plan is free.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the service plan.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service plan.\n"
                },
                "ready": {
                    "type": "boolean",
                    "description": "Shows whether the service plan is ready.\n"
                },
                "serviceofferingId": {
                    "type": "string",
                    "description": "The ID of the service offering.\n"
                }
            },
            "type": "object",
            "required": [
                "bindable",
                "catalogId",
                "catalogName",
                "createdDate",
                "description",
                "free",
                "id",
                "lastModified",
                "name",
                "ready",
                "serviceofferingId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountSubscriptionsValue:getSubaccountSubscriptionsValue": {
            "properties": {
                "additionalPlanFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of features specific to this plan.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to a XSUAA service instance.\n"
                },
                "appName": {
                    "type": "string",
                    "description": "The unique registration name of the deployed multitenant application as defined by the app developer.\n"
                },
                "authenticationProvider": {
                    "type": "string",
                    "description": "The authentication provider of the multitenant application. * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level. * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).\n"
                },
                "automationState": {
                    "type": "string",
                    "description": "The state of the automation solution.\n"
                },
                "automationStateMessage": {
                    "type": "string",
                    "description": "The message that describes the automation solution state.\n"
                },
                "category": {
                    "type": "string",
                    "description": "The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs.\n"
                },
                "categoryDisplayName": {
                    "type": "string",
                    "description": "The display name of the category for customer-facing UIs.\n"
                },
                "commercialAppName": {
                    "type": "string",
                    "description": "The commercial name of the deployed multitenant application as defined by the app developer.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "customerDeveloped": {
                    "type": "boolean",
                    "description": "Shows whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the multitenant application.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the application for customer-facing UIs.\n"
                },
                "formationSolutionName": {
                    "type": "string",
                    "description": "The name of the formations solution associated with the multitenant application.\n"
                },
                "globalaccountId": {
                    "type": "string",
                    "description": "The ID of the associated global account.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The technical ID generated by XSUAA for a multitenant application when a consumer subscribes to the application.\n"
                },
                "incidentTrackingComponent": {
                    "type": "string",
                    "description": "The application's incident-tracking component provided in metadata for customer-facing UIs.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the multitenant application subscription.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "planDescription": {
                    "type": "string",
                    "description": "The description of the plan for customer-facing UIs.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The plan name of the application to which the consumer has subscribed.\n"
                },
                "platformEntityId": {
                    "type": "string",
                    "description": "The ID of the landscape-specific environment.\n"
                },
                "quota": {
                    "type": "integer",
                    "description": "The total amount the subscribed subaccount is entitled to consume.\n"
                },
                "shortDescription": {
                    "type": "string",
                    "description": "The short description of the multitenant application for customer-facing UIs.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The subscription state of the subaccount regarding the multitenant application.\n"
                },
                "subscribedSubaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount which is subscribed to the multitenant application.\n"
                },
                "subscribedTenantId": {
                    "type": "string",
                    "description": "The ID of the tenant which is subscribed to a multitenant application.\n"
                },
                "subscriptionUrl": {
                    "type": "string",
                    "description": "The URL for app users to launch the subscribed application.\n"
                },
                "supportsParametersUpdates": {
                    "type": "boolean",
                    "description": "Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters.\n"
                },
                "supportsPlanUpdates": {
                    "type": "boolean",
                    "description": "Specifies whether a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of the application provider.\n"
                }
            },
            "type": "object",
            "required": [
                "additionalPlanFeatures",
                "appId",
                "appName",
                "authenticationProvider",
                "automationState",
                "automationStateMessage",
                "category",
                "categoryDisplayName",
                "commercialAppName",
                "createdDate",
                "customerDeveloped",
                "description",
                "displayName",
                "formationSolutionName",
                "globalaccountId",
                "id",
                "incidentTrackingComponent",
                "labels",
                "lastModified",
                "planDescription",
                "planName",
                "platformEntityId",
                "quota",
                "shortDescription",
                "state",
                "subscribedSubaccountId",
                "subscribedTenantId",
                "subscriptionUrl",
                "supportsParametersUpdates",
                "supportsPlanUpdates",
                "tenantId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountTrustConfigurationsValue:getSubaccountTrustConfigurationsValue": {
            "properties": {
                "autoCreateShadowUsers": {
                    "type": "boolean",
                    "description": "Shows whether any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.\n"
                },
                "availableForUserLogon": {
                    "type": "boolean",
                    "description": "Shows whether end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the trust configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The tenant's domain which should be used for user logon.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The origin of the identity provider.\n",
                    "deprecationMessage": "Use the `origin` attribute instead"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "The name of the Identity Authentication tenant the subaccount is connected to.\n"
                },
                "linkText": {
                    "type": "string",
                    "description": "Short string that helps users to identify the link for login.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the trust configuration.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The origin of the identity provider.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol used to establish trust with the identity provider.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the trust configuration can be modified.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Shows whether the identity provider is currently 'active' or 'inactive'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The trust type.\n"
                }
            },
            "type": "object",
            "required": [
                "autoCreateShadowUsers",
                "availableForUserLogon",
                "description",
                "domain",
                "id",
                "identityProvider",
                "linkText",
                "name",
                "origin",
                "protocol",
                "readOnly",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "btp:index/getSubaccountsValue:getSubaccountsValue": {
            "properties": {
                "betaEnabled": {
                    "type": "boolean",
                    "description": "Shows whether the subaccount can use beta services and applications.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The details of the user that created the subaccount.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the subaccount.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The unique ID of the subaccount.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the subaccount.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name of the subaccount for customer-facing UIs.\n"
                },
                "parentFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The features of parent entity of the subaccount.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the subaccount was created.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the subaccount. Possible values are:\n"
                },
                "subdomain": {
                    "type": "string"
                },
                "usage": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "betaEnabled",
                "createdBy",
                "createdDate",
                "description",
                "id",
                "labels",
                "lastModified",
                "name",
                "parentFeatures",
                "parentId",
                "region",
                "state",
                "subdomain",
                "usage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the btp package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "cliServerUrl": {
                "type": "string",
                "description": "The URL of the BTP CLI server (e.g. `https://cli.btp.cloud.sap`).\n"
            },
            "globalaccount": {
                "type": "string",
                "description": "The subdomain of the global account in which you want to manage resources. To be found in the cockpit, in the global\naccount view.\n"
            },
            "idp": {
                "type": "string",
                "description": "The identity provider to be used for authentication (default: SAP ID service with origin `sap.default`).\n"
            },
            "idtoken": {
                "type": "string",
                "description": "A valid id token. To be provided instead of 'username' and 'password'. This can also be sourced from the `BTP_IDTOKEN`\nenvironment variable. (SAP-internal usage only)\n",
                "secret": true
            },
            "password": {
                "type": "string",
                "description": "Your password. Note that two-factor authentication is not supported. This can also be sourced from the `BTP_PASSWORD`\nenvironment variable.\n",
                "secret": true
            },
            "tlsClientCertificate": {
                "type": "string",
                "description": "PEM encoded certificate (only required for x509 auth).\n"
            },
            "tlsClientKey": {
                "type": "string",
                "description": "PEM encoded private key (only required for x509 auth).\n"
            },
            "tlsIdpUrl": {
                "type": "string",
                "description": "The URL of the identity provider to be used for authentication (only required for x509 auth).\n"
            },
            "username": {
                "type": "string",
                "description": "Your user name, usually an e-mail address. This can also be sourced from the `BTP_USERNAME` environment variable.\n"
            }
        },
        "required": [
            "globalaccount"
        ],
        "inputProperties": {
            "cliServerUrl": {
                "type": "string",
                "description": "The URL of the BTP CLI server (e.g. `https://cli.btp.cloud.sap`).\n"
            },
            "globalaccount": {
                "type": "string",
                "description": "The subdomain of the global account in which you want to manage resources. To be found in the cockpit, in the global\naccount view.\n"
            },
            "idp": {
                "type": "string",
                "description": "The identity provider to be used for authentication (default: SAP ID service with origin `sap.default`).\n"
            },
            "idtoken": {
                "type": "string",
                "description": "A valid id token. To be provided instead of 'username' and 'password'. This can also be sourced from the `BTP_IDTOKEN`\nenvironment variable. (SAP-internal usage only)\n",
                "secret": true
            },
            "password": {
                "type": "string",
                "description": "Your password. Note that two-factor authentication is not supported. This can also be sourced from the `BTP_PASSWORD`\nenvironment variable.\n",
                "secret": true
            },
            "tlsClientCertificate": {
                "type": "string",
                "description": "PEM encoded certificate (only required for x509 auth).\n"
            },
            "tlsClientKey": {
                "type": "string",
                "description": "PEM encoded private key (only required for x509 auth).\n"
            },
            "tlsIdpUrl": {
                "type": "string",
                "description": "The URL of the identity provider to be used for authentication (only required for x509 auth).\n"
            },
            "username": {
                "type": "string",
                "description": "Your user name, usually an e-mail address. This can also be sourced from the `BTP_USERNAME` environment variable.\n"
            }
        },
        "requiredInputs": [
            "globalaccount"
        ]
    },
    "resources": {
        "btp:index/directory:Directory": {
            "description": "Directories allow you to organize and manage your subaccounts according to your technical and business needs. The use of directories is optional.\n\nYou can create up to five levels of directories in your account hierarchy. If you have directories, you can still create subaccounts directly under your global account.\n\n__Tips:__\n* You must be assigned to the global account admin role, or the directory admin if the directory is configured to manage its authorizations.\n* A directory path in the account hierarchy can have only one directory that is enabled with the `ENTITLEMENTS` or `AUTHORIZATIONS` features. If such a directory exists, other directories in that path can only be enabled with the `DEFAULT` features.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/account-model\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// Create a parent directory without features enabled\nconst parent = new btp.Directory(\"parent\", {description: \"This is a parent directory.\"});\n// Create a child directory underneath a parent directory without features enabled\nconst child = new btp.Directory(\"child\", {\n    parentId: parent.id,\n    description: \"This is a child directory.\",\n});\n// Create a directory with ENTITLEMENT and AUTHORIZATIONS features enabled\nconst dirWithFeatures = new btp.Directory(\"dirWithFeatures\", {\n    description: \"This is a directory with features.\",\n    features: [\n        \"DEFAULT\",\n        \"ENTITLEMENTS\",\n        \"AUTHORIZATIONS\",\n    ],\n});\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\n\n# Create a parent directory without features enabled\nparent = btp.Directory(\"parent\", description=\"This is a parent directory.\")\n# Create a child directory underneath a parent directory without features enabled\nchild = btp.Directory(\"child\",\n    parent_id=parent.id,\n    description=\"This is a child directory.\")\n# Create a directory with ENTITLEMENT and AUTHORIZATIONS features enabled\ndir_with_features = btp.Directory(\"dirWithFeatures\",\n    description=\"This is a directory with features.\",\n    features=[\n        \"DEFAULT\",\n        \"ENTITLEMENTS\",\n        \"AUTHORIZATIONS\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Create a parent directory without features enabled\n    var parent = new Btp.Directory(\"parent\", new()\n    {\n        Description = \"This is a parent directory.\",\n    });\n\n    // Create a child directory underneath a parent directory without features enabled\n    var child = new Btp.Directory(\"child\", new()\n    {\n        ParentId = parent.Id,\n        Description = \"This is a child directory.\",\n    });\n\n    // Create a directory with ENTITLEMENT and AUTHORIZATIONS features enabled\n    var dirWithFeatures = new Btp.Directory(\"dirWithFeatures\", new()\n    {\n        Description = \"This is a directory with features.\",\n        Features = new[]\n        {\n            \"DEFAULT\",\n            \"ENTITLEMENTS\",\n            \"AUTHORIZATIONS\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tparent, err := btp.NewDirectory(ctx, \"parent\", \u0026btp.DirectoryArgs{\n\t\t\tDescription: pulumi.String(\"This is a parent directory.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewDirectory(ctx, \"child\", \u0026btp.DirectoryArgs{\n\t\t\tParentId:    parent.ID(),\n\t\t\tDescription: pulumi.String(\"This is a child directory.\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewDirectory(ctx, \"dirWithFeatures\", \u0026btp.DirectoryArgs{\n\t\t\tDescription: pulumi.String(\"This is a directory with features.\"),\n\t\t\tFeatures: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"DEFAULT\"),\n\t\t\t\tpulumi.String(\"ENTITLEMENTS\"),\n\t\t\t\tpulumi.String(\"AUTHORIZATIONS\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.Directory;\nimport com.pulumi.btp.DirectoryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var parent = new Directory(\"parent\", DirectoryArgs.builder()        \n            .description(\"This is a parent directory.\")\n            .build());\n\n        var child = new Directory(\"child\", DirectoryArgs.builder()        \n            .parentId(parent.id())\n            .description(\"This is a child directory.\")\n            .build());\n\n        var dirWithFeatures = new Directory(\"dirWithFeatures\", DirectoryArgs.builder()        \n            .description(\"This is a directory with features.\")\n            .features(            \n                \"DEFAULT\",\n                \"ENTITLEMENTS\",\n                \"AUTHORIZATIONS\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Create a parent directory without features enabled\n  parent:\n    type: btp:Directory\n    properties:\n      description: This is a parent directory.\n  # Create a child directory underneath a parent directory without features enabled\n  child:\n    type: btp:Directory\n    properties:\n      parentId: ${parent.id}\n      description: This is a child directory.\n  # Create a directory with ENTITLEMENT and AUTHORIZATIONS features enabled\n  dirWithFeatures:\n    type: btp:Directory\n    properties:\n      description: This is a directory with features.\n      features:\n        - DEFAULT\n        - ENTITLEMENTS\n        - AUTHORIZATIONS\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/directory:Directory \u003cresource_name\u003e \u003cdirectory_id\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/directory:Directory parent dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n```\n\n ",
            "properties": {
                "createdBy": {
                    "type": "string",
                    "description": "The details of the user that created the directory.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the directory.\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The features that are enabled for the directory. Possible values are:\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "Contains information about the labels assigned to a specified global account. Labels are represented in a JSON array of\nkey-value pairs; each key has up to 10 corresponding values.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the directory.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "The ID of the directory's parent entity. Typically this is the global account.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the directory. Possible values are: | value | description | | --- | --- | | `OK` | The CRUD\noperation or series of operations completed successfully. | | `STARTED` | CRUD operation on an entity has started. | |\n`CREATING` | Creating entity operation is in progress. | | `UPDATING` | Updating entity operation is in progress. | |\n`MOVING` | Moving entity operation is in progress. | | `PROCESSING` | A series of operations related to the entity is in\nprogress. | | `DELETING` | Deleting entity operation is in progress. | | `PENDING REVIEW` | The processing operation has\nbeen stopped for reviewing and can be restarted by the operator. | | `CANCELLED` | The operation or processing was\ncanceled by the operator. | | `CREATION_FAILED` | The creation operation failed, and the entity was not created or was\ncreated but cannot be used. | | `UPDATE_FAILED` | The update operation failed, and the entity was not updated. | |\n`PROCESSING_FAILED` | The processing operations failed. | | `DELETION_FAILED` | The delete operation failed, and the\nentity was not deleted. | | `MOVE_FAILED` | Entity could not be moved to a different location. | | `MIGRATING` |\nMigrating entity from Neo to Cloud Foundry. |\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Applies only to directories that have the user authorization management feature enabled. The subdomain becomes part of\nthe path used to access the authorization tenant of the directory. It has to be unique within the defined region.\n"
                }
            },
            "required": [
                "createdBy",
                "createdDate",
                "description",
                "features",
                "lastModified",
                "name",
                "parentId",
                "state",
                "subdomain"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of the directory.\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The features that are enabled for the directory. Possible values are:\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "Contains information about the labels assigned to a specified global account. Labels are represented in a JSON array of\nkey-value pairs; each key has up to 10 corresponding values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the directory.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "The ID of the directory's parent entity. Typically this is the global account.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "Applies only to directories that have the user authorization management feature enabled. The subdomain becomes part of\nthe path used to access the authorization tenant of the directory. It has to be unique within the defined region.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Directory resources.\n",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "The details of the user that created the directory.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the directory.\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The features that are enabled for the directory. Possible values are:\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Contains information about the labels assigned to a specified global account. Labels are represented in a JSON array of\nkey-value pairs; each key has up to 10 corresponding values.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the directory.\n"
                    },
                    "parentId": {
                        "type": "string",
                        "description": "The ID of the directory's parent entity. Typically this is the global account.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the directory. Possible values are: | value | description | | --- | --- | | `OK` | The CRUD\noperation or series of operations completed successfully. | | `STARTED` | CRUD operation on an entity has started. | |\n`CREATING` | Creating entity operation is in progress. | | `UPDATING` | Updating entity operation is in progress. | |\n`MOVING` | Moving entity operation is in progress. | | `PROCESSING` | A series of operations related to the entity is in\nprogress. | | `DELETING` | Deleting entity operation is in progress. | | `PENDING REVIEW` | The processing operation has\nbeen stopped for reviewing and can be restarted by the operator. | | `CANCELLED` | The operation or processing was\ncanceled by the operator. | | `CREATION_FAILED` | The creation operation failed, and the entity was not created or was\ncreated but cannot be used. | | `UPDATE_FAILED` | The update operation failed, and the entity was not updated. | |\n`PROCESSING_FAILED` | The processing operations failed. | | `DELETION_FAILED` | The delete operation failed, and the\nentity was not deleted. | | `MOVE_FAILED` | Entity could not be moved to a different location. | | `MIGRATING` |\nMigrating entity from Neo to Cloud Foundry. |\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Applies only to directories that have the user authorization management feature enabled. The subdomain becomes part of\nthe path used to access the authorization tenant of the directory. It has to be unique within the defined region.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/directoryEntitlement:DirectoryEntitlement": {
            "description": "Assigns the entitlement plan of a service, multitenant application, or environment, to a directory. Note that some environments, such as Cloud Foundry, are available by default to all global accounts and their directorys, and therefore are not made available as entitlements.\n\n__Tip:__\nYou must be assigned to the global account admin or viewer role.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/entitlements-and-quotas\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// entitle service plan without quota in a directory\nconst alertNotificationService = new btp.DirectoryEntitlement(\"alertNotificationService\", {\n    directoryId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    planName: \"free\",\n    serviceName: \"alert-notification\",\n});\n// entitle service plan with distribution and auto assignment in a directory\nconst uasReporting = new btp.DirectoryEntitlement(\"uasReporting\", {\n    autoAssign: true,\n    directoryId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    distribute: true,\n    planName: \"free\",\n    serviceName: \"alert-notification\",\n});\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\n\n# entitle service plan without quota in a directory\nalert_notification_service = btp.DirectoryEntitlement(\"alertNotificationService\",\n    directory_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    plan_name=\"free\",\n    service_name=\"alert-notification\")\n# entitle service plan with distribution and auto assignment in a directory\nuas_reporting = btp.DirectoryEntitlement(\"uasReporting\",\n    auto_assign=True,\n    directory_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    distribute=True,\n    plan_name=\"free\",\n    service_name=\"alert-notification\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // entitle service plan without quota in a directory\n    var alertNotificationService = new Btp.DirectoryEntitlement(\"alertNotificationService\", new()\n    {\n        DirectoryId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        PlanName = \"free\",\n        ServiceName = \"alert-notification\",\n    });\n\n    // entitle service plan with distribution and auto assignment in a directory\n    var uasReporting = new Btp.DirectoryEntitlement(\"uasReporting\", new()\n    {\n        AutoAssign = true,\n        DirectoryId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        Distribute = true,\n        PlanName = \"free\",\n        ServiceName = \"alert-notification\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewDirectoryEntitlement(ctx, \"alertNotificationService\", \u0026btp.DirectoryEntitlementArgs{\n\t\t\tDirectoryId: pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tPlanName:    pulumi.String(\"free\"),\n\t\t\tServiceName: pulumi.String(\"alert-notification\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewDirectoryEntitlement(ctx, \"uasReporting\", \u0026btp.DirectoryEntitlementArgs{\n\t\t\tAutoAssign:  pulumi.Bool(true),\n\t\t\tDirectoryId: pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tDistribute:  pulumi.Bool(true),\n\t\t\tPlanName:    pulumi.String(\"free\"),\n\t\t\tServiceName: pulumi.String(\"alert-notification\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.DirectoryEntitlement;\nimport com.pulumi.btp.DirectoryEntitlementArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var alertNotificationService = new DirectoryEntitlement(\"alertNotificationService\", DirectoryEntitlementArgs.builder()        \n            .directoryId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .planName(\"free\")\n            .serviceName(\"alert-notification\")\n            .build());\n\n        var uasReporting = new DirectoryEntitlement(\"uasReporting\", DirectoryEntitlementArgs.builder()        \n            .autoAssign(true)\n            .directoryId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .distribute(true)\n            .planName(\"free\")\n            .serviceName(\"alert-notification\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # entitle service plan without quota in a directory\n  alertNotificationService:\n    type: btp:DirectoryEntitlement\n    properties:\n      directoryId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      planName: free\n      serviceName: alert-notification\n  # entitle service plan with distribution and auto assignment in a directory\n  uasReporting:\n    type: btp:DirectoryEntitlement\n    properties:\n      autoAssign: true\n      directoryId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      distribute: true\n      planName: free\n      serviceName: alert-notification\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/directoryEntitlement:DirectoryEntitlement \u003cresource_name\u003e \u003csubaccount_id\u003e,\u003cservice_name\u003e,\u003cplan_name\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/directoryEntitlement:DirectoryEntitlement alert_notification_service 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,alert-notification,free\n```\n\n ",
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "The quota assigned to the directory.\n"
                },
                "autoAssign": {
                    "type": "boolean",
                    "description": "Determines whether the plans of entitlements that have a numeric quota with the amount specified in `auto_distribute_amount` are automatically allocated to any new subaccount that is added to the directory in the future. For entitlements without a numeric quota, it shows if the plan are assigned to any new subaccount that is added to the directory in the future (`auto_distribute_amount` is not needed). If the `distribute` parameter is set, the same assignment is also made to all subaccounts currently in the directory. Entitlements are subject to available quota in the directory.\n"
                },
                "autoDistributeAmount": {
                    "type": "integer",
                    "description": "The quota of the specified plan automatically allocated to any new subaccount that is created in the future in the directory. When applying this option, `auto_assign` and/or `distribute` must also be set. Applies only to entitlements that have a numeric quota.\n"
                },
                "category": {
                    "type": "string",
                    "description": "The current state of the entitlement. Possible values are:\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The ID of the directory.\n"
                },
                "distribute": {
                    "type": "boolean",
                    "description": "Defines the assignment of the plan with the quota specified in `auto_distribute_amount` to subaccounts currently located in the specified directory. For entitlements without a numeric quota, the plan is assigned to the subaccounts currently located in the directory (`auto_distribute_amount` is not needed). When applying this option, `auto_assign` must also be set.\n"
                },
                "planId": {
                    "type": "string",
                    "description": "The ID of the entitled service plan.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The name of the entitled service plan.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the entitled service.\n"
                }
            },
            "required": [
                "amount",
                "autoAssign",
                "autoDistributeAmount",
                "category",
                "directoryId",
                "distribute",
                "planId",
                "planName",
                "serviceName"
            ],
            "inputProperties": {
                "amount": {
                    "type": "integer",
                    "description": "The quota assigned to the directory.\n"
                },
                "autoAssign": {
                    "type": "boolean",
                    "description": "Determines whether the plans of entitlements that have a numeric quota with the amount specified in `auto_distribute_amount` are automatically allocated to any new subaccount that is added to the directory in the future. For entitlements without a numeric quota, it shows if the plan are assigned to any new subaccount that is added to the directory in the future (`auto_distribute_amount` is not needed). If the `distribute` parameter is set, the same assignment is also made to all subaccounts currently in the directory. Entitlements are subject to available quota in the directory.\n"
                },
                "autoDistributeAmount": {
                    "type": "integer",
                    "description": "The quota of the specified plan automatically allocated to any new subaccount that is created in the future in the directory. When applying this option, `auto_assign` and/or `distribute` must also be set. Applies only to entitlements that have a numeric quota.\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The ID of the directory.\n"
                },
                "distribute": {
                    "type": "boolean",
                    "description": "Defines the assignment of the plan with the quota specified in `auto_distribute_amount` to subaccounts currently located in the specified directory. For entitlements without a numeric quota, the plan is assigned to the subaccounts currently located in the directory (`auto_distribute_amount` is not needed). When applying this option, `auto_assign` must also be set.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The name of the entitled service plan.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the entitled service.\n"
                }
            },
            "requiredInputs": [
                "directoryId",
                "planName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectoryEntitlement resources.\n",
                "properties": {
                    "amount": {
                        "type": "integer",
                        "description": "The quota assigned to the directory.\n"
                    },
                    "autoAssign": {
                        "type": "boolean",
                        "description": "Determines whether the plans of entitlements that have a numeric quota with the amount specified in `auto_distribute_amount` are automatically allocated to any new subaccount that is added to the directory in the future. For entitlements without a numeric quota, it shows if the plan are assigned to any new subaccount that is added to the directory in the future (`auto_distribute_amount` is not needed). If the `distribute` parameter is set, the same assignment is also made to all subaccounts currently in the directory. Entitlements are subject to available quota in the directory.\n"
                    },
                    "autoDistributeAmount": {
                        "type": "integer",
                        "description": "The quota of the specified plan automatically allocated to any new subaccount that is created in the future in the directory. When applying this option, `auto_assign` and/or `distribute` must also be set. Applies only to entitlements that have a numeric quota.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "The current state of the entitlement. Possible values are:\n"
                    },
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "distribute": {
                        "type": "boolean",
                        "description": "Defines the assignment of the plan with the quota specified in `auto_distribute_amount` to subaccounts currently located in the specified directory. For entitlements without a numeric quota, the plan is assigned to the subaccounts currently located in the directory (`auto_distribute_amount` is not needed). When applying this option, `auto_assign` must also be set.\n"
                    },
                    "planId": {
                        "type": "string",
                        "description": "The ID of the entitled service plan.\n"
                    },
                    "planName": {
                        "type": "string",
                        "description": "The name of the entitled service plan.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The name of the entitled service.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/directoryRoleCollection:DirectoryRoleCollection": {
            "description": "Creates a role collection in a directory.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.DirectoryRoleCollection;\nimport com.pulumi.btp.DirectoryRoleCollectionArgs;\nimport com.pulumi.btp.inputs.DirectoryRoleCollectionRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myCollection = new DirectoryRoleCollection(\"myCollection\", DirectoryRoleCollectionArgs.builder()        \n            .description(\"A description of what the role collection is supposed to do.\")\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .roles(DirectoryRoleCollectionRoleArgs.builder()\n                .name(\"Directory Admin\")\n                .role_template_app_id(\"cis-central!b13\")\n                .role_template_name(\"Directory_Admin\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myCollection:\n    type: btp:DirectoryRoleCollection\n    properties:\n      description: A description of what the role collection is supposed to do.\n      directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n      roles:\n        - name: Directory Admin\n          role_template_app_id: cis-central!b13\n          role_template_name: Directory_Admin\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/directoryRoleCollection:DirectoryRoleCollection \u003cresource_name\u003e '\u003cdirectory_id\u003e,\u003cname\u003e'\n```\n\n\n\n```sh\n $ pulumi import btp:index/directoryRoleCollection:DirectoryRoleCollection directory_viewer '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,Directory Viewer'\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role collection.\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The ID of the directory.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/DirectoryRoleCollectionRole:DirectoryRoleCollectionRole"
                    }
                }
            },
            "required": [
                "description",
                "directoryId",
                "name",
                "roles"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role collection.\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The ID of the directory.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/DirectoryRoleCollectionRole:DirectoryRoleCollectionRole"
                    }
                }
            },
            "requiredInputs": [
                "directoryId",
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectoryRoleCollection resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the role collection.\n"
                    },
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/DirectoryRoleCollectionRole:DirectoryRoleCollectionRole"
                        }
                    }
                },
                "type": "object"
            }
        },
        "btp:index/directoryRoleCollectionAssignment:DirectoryRoleCollectionAssignment": {
            "description": "Assigns a user to a role collection on a directory level.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// assign a single user to a role collection on directory level\nconst jd = new btp.DirectoryRoleCollectionAssignment(\"jd\", {\n    directoryId: \"ddfc2206-5f11-48ed-a1ec-29010af70050\",\n    roleCollectionName: \"Directory Viewer\",\n    userName: \"john.doe@mycompany.com\",\n});\n// assign a group to a role collection on directory level\nconst directoryViewerGroup = new btp.DirectoryRoleCollectionAssignment(\"directoryViewerGroup\", {\n    directoryId: \"ddfc2206-5f11-48ed-a1ec-29010af70050\",\n    groupName: \"directory-viewer-group\",\n    roleCollectionName: \"Directory Viewer\",\n});\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\n\n# assign a single user to a role collection on directory level\njd = btp.DirectoryRoleCollectionAssignment(\"jd\",\n    directory_id=\"ddfc2206-5f11-48ed-a1ec-29010af70050\",\n    role_collection_name=\"Directory Viewer\",\n    user_name=\"john.doe@mycompany.com\")\n# assign a group to a role collection on directory level\ndirectory_viewer_group = btp.DirectoryRoleCollectionAssignment(\"directoryViewerGroup\",\n    directory_id=\"ddfc2206-5f11-48ed-a1ec-29010af70050\",\n    group_name=\"directory-viewer-group\",\n    role_collection_name=\"Directory Viewer\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // assign a single user to a role collection on directory level\n    var jd = new Btp.DirectoryRoleCollectionAssignment(\"jd\", new()\n    {\n        DirectoryId = \"ddfc2206-5f11-48ed-a1ec-29010af70050\",\n        RoleCollectionName = \"Directory Viewer\",\n        UserName = \"john.doe@mycompany.com\",\n    });\n\n    // assign a group to a role collection on directory level\n    var directoryViewerGroup = new Btp.DirectoryRoleCollectionAssignment(\"directoryViewerGroup\", new()\n    {\n        DirectoryId = \"ddfc2206-5f11-48ed-a1ec-29010af70050\",\n        GroupName = \"directory-viewer-group\",\n        RoleCollectionName = \"Directory Viewer\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewDirectoryRoleCollectionAssignment(ctx, \"jd\", \u0026btp.DirectoryRoleCollectionAssignmentArgs{\n\t\t\tDirectoryId:        pulumi.String(\"ddfc2206-5f11-48ed-a1ec-29010af70050\"),\n\t\t\tRoleCollectionName: pulumi.String(\"Directory Viewer\"),\n\t\t\tUserName:           pulumi.String(\"john.doe@mycompany.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewDirectoryRoleCollectionAssignment(ctx, \"directoryViewerGroup\", \u0026btp.DirectoryRoleCollectionAssignmentArgs{\n\t\t\tDirectoryId:        pulumi.String(\"ddfc2206-5f11-48ed-a1ec-29010af70050\"),\n\t\t\tGroupName:          pulumi.String(\"directory-viewer-group\"),\n\t\t\tRoleCollectionName: pulumi.String(\"Directory Viewer\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.DirectoryRoleCollectionAssignment;\nimport com.pulumi.btp.DirectoryRoleCollectionAssignmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var jd = new DirectoryRoleCollectionAssignment(\"jd\", DirectoryRoleCollectionAssignmentArgs.builder()        \n            .directoryId(\"ddfc2206-5f11-48ed-a1ec-29010af70050\")\n            .roleCollectionName(\"Directory Viewer\")\n            .userName(\"john.doe@mycompany.com\")\n            .build());\n\n        var directoryViewerGroup = new DirectoryRoleCollectionAssignment(\"directoryViewerGroup\", DirectoryRoleCollectionAssignmentArgs.builder()        \n            .directoryId(\"ddfc2206-5f11-48ed-a1ec-29010af70050\")\n            .groupName(\"directory-viewer-group\")\n            .roleCollectionName(\"Directory Viewer\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # assign a single user to a role collection on directory level\n  jd:\n    type: btp:DirectoryRoleCollectionAssignment\n    properties:\n      directoryId: ddfc2206-5f11-48ed-a1ec-29010af70050\n      roleCollectionName: Directory Viewer\n      userName: john.doe@mycompany.com\n  # assign a group to a role collection on directory level\n  directoryViewerGroup:\n    type: btp:DirectoryRoleCollectionAssignment\n    properties:\n      directoryId: ddfc2206-5f11-48ed-a1ec-29010af70050\n      groupName: directory-viewer-group\n      roleCollectionName: Directory Viewer\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attributeName": {
                    "type": "string",
                    "description": "The name of the attribute to assign.\n"
                },
                "attributeValue": {
                    "type": "string",
                    "description": "The value of the attribute to assign.\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The ID of the directory.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of the group to assign.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The identity provider that hosts the user or a group. The default value is `ldap`.\n"
                },
                "roleCollectionName": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The username of the user to assign.\n"
                }
            },
            "required": [
                "directoryId",
                "origin",
                "roleCollectionName"
            ],
            "inputProperties": {
                "attributeName": {
                    "type": "string",
                    "description": "The name of the attribute to assign.\n"
                },
                "attributeValue": {
                    "type": "string",
                    "description": "The value of the attribute to assign.\n"
                },
                "directoryId": {
                    "type": "string",
                    "description": "The ID of the directory.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of the group to assign.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The identity provider that hosts the user or a group. The default value is `ldap`.\n"
                },
                "roleCollectionName": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The username of the user to assign.\n"
                }
            },
            "requiredInputs": [
                "directoryId",
                "roleCollectionName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectoryRoleCollectionAssignment resources.\n",
                "properties": {
                    "attributeName": {
                        "type": "string",
                        "description": "The name of the attribute to assign.\n"
                    },
                    "attributeValue": {
                        "type": "string",
                        "description": "The value of the attribute to assign.\n"
                    },
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "The name of the group to assign.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user or a group. The default value is `ldap`.\n"
                    },
                    "roleCollectionName": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The username of the user to assign.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider": {
            "description": "Creates a resource provider instance to allow your global account to connect to your provider account on a non-SAP cloud vendor. Through this channel, you can consume remote service resources that you already own and are supported by SAP BTP.\nFor example, if you are subscribed to Amazon Web Services (AWS) and have already purchased services, such as PostgreSQL, you can register the vendor as a resource provider in SAP BTP and consume this service across your subaccounts together with other services offered by SAP.\n\nThe use of this functionality is subject to the availability of the supported non-SAP cloud vendors in your country/region.\n\n__Tips:__\n* You must be assigned to the global account admin role.\n* You can create more than one instance of a given resource provider, each with its unique configuration properties. In such cases, the display name and technical name should be descriptive enough so that you and developers can easily differentiate between each instance.\n* After you configure a new resource provider instance, its supported services are added as entitlements in your global account.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/managing-resource-providers\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.GlobalaccountResourceProvider;\nimport com.pulumi.btp.GlobalaccountResourceProviderArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var azure = new GlobalaccountResourceProvider(\"azure\", GlobalaccountResourceProviderArgs.builder()        \n            .id(\"my_azure_provider\")\n            .resourceProvider(\"AZURE\")\n            .parameters(serializeJson(\n                jsonObject(\n                    jsonProperty(\"region\", \"westeurope\"),\n                    jsonProperty(\"client_id\", \"AZURECLIENTID\"),\n                    jsonProperty(\"client_secret\", \"AZURECLIENTSECRET\"),\n                    jsonProperty(\"tenant_id\", \"42x7676x-f455-423x-82x6-xx2d99791xx7\"),\n                    jsonProperty(\"subscription_id\", \"x1x9567x-8560-44xx-x4fx-741xx0x08x58\"),\n                    jsonProperty(\"resource_group_name\", \"rg-landscape-azure-example\")\n                )))\n            .build());\n\n        var aws = new GlobalaccountResourceProvider(\"aws\", GlobalaccountResourceProviderArgs.builder()        \n            .id(\"my_aws_provider\")\n            .resourceProvider(\"AWS\")\n            .parameters(serializeJson(\n                jsonObject(\n                    jsonProperty(\"access_key_id\", \"AWSACCESSKEY\"),\n                    jsonProperty(\"secret_access_key\", \"AWSSECRETKEY\"),\n                    jsonProperty(\"vpc_id\", \"vpc-test\"),\n                    jsonProperty(\"region\", \"eu-central-1\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # register a AZURE project as resource provider\n  azure:\n    type: btp:GlobalaccountResourceProvider\n    properties:\n      id: my_azure_provider\n      resourceProvider: AZURE\n      parameters:\n        fn::toJSON:\n          region: westeurope\n          client_id: AZURECLIENTID\n          client_secret: AZURECLIENTSECRET\n          tenant_id: 42x7676x-f455-423x-82x6-xx2d99791xx7\n          subscription_id: x1x9567x-8560-44xx-x4fx-741xx0x08x58\n          resource_group_name: rg-landscape-azure-example\n  # register an AWS account as resource provider\n  aws:\n    type: btp:GlobalaccountResourceProvider\n    properties:\n      id: my_aws_provider\n      resourceProvider: AWS\n      parameters:\n        fn::toJSON:\n          access_key_id: AWSACCESSKEY\n          secret_access_key: AWSSECRETKEY\n          vpc_id: vpc-test\n          region: eu-central-1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider \u003cresource_name\u003e \u003cresource_provider\u003e,\u003cunique_technical_name\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider azure AZURE,my_azure_provider\n```\n\n ",
            "properties": {
                "configuration": {
                    "type": "string",
                    "description": "The configuration properties for the resource provider as required by the vendor.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the resource provider.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The descriptive name of the resource provider.\n"
                },
                "providerType": {
                    "type": "string",
                    "description": "The cloud vendor from which to consume services through your subscribed account. Possible values are:\n"
                },
                "technicalName": {
                    "type": "string",
                    "description": "The unique technical name of the resource provider.\n"
                }
            },
            "required": [
                "configuration",
                "description",
                "displayName",
                "providerType",
                "technicalName"
            ],
            "inputProperties": {
                "configuration": {
                    "type": "string",
                    "description": "The configuration properties for the resource provider as required by the vendor.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the resource provider.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The descriptive name of the resource provider.\n"
                },
                "providerType": {
                    "type": "string",
                    "description": "The cloud vendor from which to consume services through your subscribed account. Possible values are:\n"
                },
                "technicalName": {
                    "type": "string",
                    "description": "The unique technical name of the resource provider.\n"
                }
            },
            "requiredInputs": [
                "configuration",
                "displayName",
                "providerType",
                "technicalName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GlobalaccountResourceProvider resources.\n",
                "properties": {
                    "configuration": {
                        "type": "string",
                        "description": "The configuration properties for the resource provider as required by the vendor.\n",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the resource provider.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The descriptive name of the resource provider.\n"
                    },
                    "providerType": {
                        "type": "string",
                        "description": "The cloud vendor from which to consume services through your subscribed account. Possible values are:\n"
                    },
                    "technicalName": {
                        "type": "string",
                        "description": "The unique technical name of the resource provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/globalaccountRoleCollection:GlobalaccountRoleCollection": {
            "description": "Creates a role collection in a global account.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.GlobalaccountRoleCollection;\nimport com.pulumi.btp.GlobalaccountRoleCollectionArgs;\nimport com.pulumi.btp.inputs.GlobalaccountRoleCollectionRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myCollection = new GlobalaccountRoleCollection(\"myCollection\", GlobalaccountRoleCollectionArgs.builder()        \n            .description(\"A description of what the role collection is supposed to do.\")\n            .roles(GlobalaccountRoleCollectionRoleArgs.builder()\n                .name(\"Global Account Admin\")\n                .role_template_app_id(\"cis-central!b13\")\n                .role_template_name(\"GlobalAccount_Admin\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myCollection:\n    type: btp:GlobalaccountRoleCollection\n    properties:\n      description: A description of what the role collection is supposed to do.\n      roles:\n        - name: Global Account Admin\n          role_template_app_id: cis-central!b13\n          role_template_name: GlobalAccount_Admin\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/globalaccountRoleCollection:GlobalaccountRoleCollection \u003cresource_name\u003e '\u003cname\u003e'\n```\n\n\n\n```sh\n $ pulumi import btp:index/globalaccountRoleCollection:GlobalaccountRoleCollection globalaccount_viewer 'Global Account Viewer'\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role collection.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/GlobalaccountRoleCollectionRole:GlobalaccountRoleCollectionRole"
                    }
                }
            },
            "required": [
                "description",
                "name",
                "roles"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role collection.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/GlobalaccountRoleCollectionRole:GlobalaccountRoleCollectionRole"
                    }
                }
            },
            "requiredInputs": [
                "roles"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GlobalaccountRoleCollection resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the role collection.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/GlobalaccountRoleCollectionRole:GlobalaccountRoleCollectionRole"
                        }
                    }
                },
                "type": "object"
            }
        },
        "btp:index/globalaccountRoleCollectionAssignment:GlobalaccountRoleCollectionAssignment": {
            "description": "Assigns a user or a group to a role collection on global account level.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// assign a user to a role collection on global account level\nconst jd = new btp.GlobalaccountRoleCollectionAssignment(\"jd\", {\n    roleCollectionName: \"Global Account Viewer\",\n    userName: \"john.doe@mycompany.com\",\n});\n// assign a group to a role collection on global account level\nconst globalaccountViewerGroup = new btp.GlobalaccountRoleCollectionAssignment(\"globalaccountViewerGroup\", {\n    groupName: \"globalaccount-viewer-group\",\n    roleCollectionName: \"Global Account Viewer\",\n});\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\n\n# assign a user to a role collection on global account level\njd = btp.GlobalaccountRoleCollectionAssignment(\"jd\",\n    role_collection_name=\"Global Account Viewer\",\n    user_name=\"john.doe@mycompany.com\")\n# assign a group to a role collection on global account level\nglobalaccount_viewer_group = btp.GlobalaccountRoleCollectionAssignment(\"globalaccountViewerGroup\",\n    group_name=\"globalaccount-viewer-group\",\n    role_collection_name=\"Global Account Viewer\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // assign a user to a role collection on global account level\n    var jd = new Btp.GlobalaccountRoleCollectionAssignment(\"jd\", new()\n    {\n        RoleCollectionName = \"Global Account Viewer\",\n        UserName = \"john.doe@mycompany.com\",\n    });\n\n    // assign a group to a role collection on global account level\n    var globalaccountViewerGroup = new Btp.GlobalaccountRoleCollectionAssignment(\"globalaccountViewerGroup\", new()\n    {\n        GroupName = \"globalaccount-viewer-group\",\n        RoleCollectionName = \"Global Account Viewer\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewGlobalaccountRoleCollectionAssignment(ctx, \"jd\", \u0026btp.GlobalaccountRoleCollectionAssignmentArgs{\n\t\t\tRoleCollectionName: pulumi.String(\"Global Account Viewer\"),\n\t\t\tUserName:           pulumi.String(\"john.doe@mycompany.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewGlobalaccountRoleCollectionAssignment(ctx, \"globalaccountViewerGroup\", \u0026btp.GlobalaccountRoleCollectionAssignmentArgs{\n\t\t\tGroupName:          pulumi.String(\"globalaccount-viewer-group\"),\n\t\t\tRoleCollectionName: pulumi.String(\"Global Account Viewer\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.GlobalaccountRoleCollectionAssignment;\nimport com.pulumi.btp.GlobalaccountRoleCollectionAssignmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var jd = new GlobalaccountRoleCollectionAssignment(\"jd\", GlobalaccountRoleCollectionAssignmentArgs.builder()        \n            .roleCollectionName(\"Global Account Viewer\")\n            .userName(\"john.doe@mycompany.com\")\n            .build());\n\n        var globalaccountViewerGroup = new GlobalaccountRoleCollectionAssignment(\"globalaccountViewerGroup\", GlobalaccountRoleCollectionAssignmentArgs.builder()        \n            .groupName(\"globalaccount-viewer-group\")\n            .roleCollectionName(\"Global Account Viewer\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # assign a user to a role collection on global account level\n  jd:\n    type: btp:GlobalaccountRoleCollectionAssignment\n    properties:\n      roleCollectionName: Global Account Viewer\n      userName: john.doe@mycompany.com\n  # assign a group to a role collection on global account level\n  globalaccountViewerGroup:\n    type: btp:GlobalaccountRoleCollectionAssignment\n    properties:\n      groupName: globalaccount-viewer-group\n      roleCollectionName: Global Account Viewer\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attributeName": {
                    "type": "string",
                    "description": "The name of the attribute to assign.\n"
                },
                "attributeValue": {
                    "type": "string",
                    "description": "The value of the attribute to assign.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of the group to assign.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The identity provider that hosts the user or group. The default value is `ldap`.\n"
                },
                "roleCollectionName": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The name of the user to assign.\n"
                }
            },
            "required": [
                "origin",
                "roleCollectionName"
            ],
            "inputProperties": {
                "attributeName": {
                    "type": "string",
                    "description": "The name of the attribute to assign.\n"
                },
                "attributeValue": {
                    "type": "string",
                    "description": "The value of the attribute to assign.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of the group to assign.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The identity provider that hosts the user or group. The default value is `ldap`.\n"
                },
                "roleCollectionName": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The name of the user to assign.\n"
                }
            },
            "requiredInputs": [
                "roleCollectionName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GlobalaccountRoleCollectionAssignment resources.\n",
                "properties": {
                    "attributeName": {
                        "type": "string",
                        "description": "The name of the attribute to assign.\n"
                    },
                    "attributeValue": {
                        "type": "string",
                        "description": "The value of the attribute to assign.\n"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "The name of the group to assign.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user or group. The default value is `ldap`.\n"
                    },
                    "roleCollectionName": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The name of the user to assign.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration": {
            "description": "Establishes trust from a global account to an Identity Authentication tenant.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// create a new simple trust configuration for a global account\nconst simple = new btp.GlobalaccountTrustConfiguration(\"simple\", {identityProvider: \"terraformint.accounts400.ondemand.com\"});\n// create a new fully customized trust configuration for a global account\nconst fullyCustomized = new btp.GlobalaccountTrustConfiguration(\"fullyCustomized\", {\n    description: \"my-description\",\n    identityProvider: \"terraformint.accounts400.ondemand.com\",\n    origin: \"my-own-origin-platform\",\n});\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\n\n# create a new simple trust configuration for a global account\nsimple = btp.GlobalaccountTrustConfiguration(\"simple\", identity_provider=\"terraformint.accounts400.ondemand.com\")\n# create a new fully customized trust configuration for a global account\nfully_customized = btp.GlobalaccountTrustConfiguration(\"fullyCustomized\",\n    description=\"my-description\",\n    identity_provider=\"terraformint.accounts400.ondemand.com\",\n    origin=\"my-own-origin-platform\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // create a new simple trust configuration for a global account\n    var simple = new Btp.GlobalaccountTrustConfiguration(\"simple\", new()\n    {\n        IdentityProvider = \"terraformint.accounts400.ondemand.com\",\n    });\n\n    // create a new fully customized trust configuration for a global account\n    var fullyCustomized = new Btp.GlobalaccountTrustConfiguration(\"fullyCustomized\", new()\n    {\n        Description = \"my-description\",\n        IdentityProvider = \"terraformint.accounts400.ondemand.com\",\n        Origin = \"my-own-origin-platform\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewGlobalaccountTrustConfiguration(ctx, \"simple\", \u0026btp.GlobalaccountTrustConfigurationArgs{\n\t\t\tIdentityProvider: pulumi.String(\"terraformint.accounts400.ondemand.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewGlobalaccountTrustConfiguration(ctx, \"fullyCustomized\", \u0026btp.GlobalaccountTrustConfigurationArgs{\n\t\t\tDescription:      pulumi.String(\"my-description\"),\n\t\t\tIdentityProvider: pulumi.String(\"terraformint.accounts400.ondemand.com\"),\n\t\t\tOrigin:           pulumi.String(\"my-own-origin-platform\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.GlobalaccountTrustConfiguration;\nimport com.pulumi.btp.GlobalaccountTrustConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var simple = new GlobalaccountTrustConfiguration(\"simple\", GlobalaccountTrustConfigurationArgs.builder()        \n            .identityProvider(\"terraformint.accounts400.ondemand.com\")\n            .build());\n\n        var fullyCustomized = new GlobalaccountTrustConfiguration(\"fullyCustomized\", GlobalaccountTrustConfigurationArgs.builder()        \n            .description(\"my-description\")\n            .identityProvider(\"terraformint.accounts400.ondemand.com\")\n            .origin(\"my-own-origin-platform\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # create a new simple trust configuration for a global account\n  simple:\n    type: btp:GlobalaccountTrustConfiguration\n    properties:\n      identityProvider: terraformint.accounts400.ondemand.com\n  # create a new fully customized trust configuration for a global account\n  fullyCustomized:\n    type: btp:GlobalaccountTrustConfiguration\n    properties:\n      description: my-description\n      identityProvider: terraformint.accounts400.ondemand.com\n      origin: my-own-origin-platform\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration terraform importbtp_globalaccount_trust_configuration.\u003cresource_name\u003e \u003corigin\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration trust sap.custom\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the trust configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The tenant's domain which should be used for user logon.\n"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "The name of the Identity Authentication tenant that you want to connect to the global account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the trust configuration.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The origin of the identity provider.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol used to establish trust with the identity provider.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the trust configuration can be modified.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Determines whether the identity provider is currently 'active' or 'inactive'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The trust type.\n"
                }
            },
            "required": [
                "description",
                "domain",
                "identityProvider",
                "name",
                "origin",
                "protocol",
                "readOnly",
                "status",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the trust configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The tenant's domain which should be used for user logon.\n"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "The name of the Identity Authentication tenant that you want to connect to the global account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the trust configuration.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The origin of the identity provider.\n"
                }
            },
            "requiredInputs": [
                "identityProvider"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GlobalaccountTrustConfiguration resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the trust configuration.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The tenant's domain which should be used for user logon.\n"
                    },
                    "identityProvider": {
                        "type": "string",
                        "description": "The name of the Identity Authentication tenant that you want to connect to the global account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the trust configuration.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The origin of the identity provider.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol used to establish trust with the identity provider.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the trust configuration can be modified.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Determines whether the identity provider is currently 'active' or 'inactive'.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The trust type.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/subaccount:Subaccount": {
            "description": "Creates a subaccount in a global account or directory.\n\n__Tip:__\nYou must be assigned to the global account or directory admin role.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/account-model\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\nimport * as btp from \"@pulumi/btp\";\n\nexport = async () =\u003e {\n    // create a subaccount in eu30 region (GCP)\n    const myProject = new btp.Subaccount(\"myProject\", {\n        subdomain: \"my-project\",\n        region: \"eu30\",\n    });\n    // create a subaccount in every Azure region which has support for cloud foundry\n    const all = await btp.getRegions({});\n    // create the subaccounts by iterating over the regions with the defined constraints\n    const myProjectOnAzure: btp.Subaccount[] = [];\n    for (const range of Object.entries(.filter(dc =\u003e dc.environment == \"cloudfoundry\" \u0026\u0026 dc.iaasProvider == \"AZURE\").reduce((__obj, dc) =\u003e ({ ...__obj, [dc.region]: dc }))).map(([k, v]) =\u003e ({key: k, value: v}))) {\n        myProjectOnAzure.push(new btp.Subaccount(`myProjectOnAzure-${range.key}`, {\n            subdomain: `my-project-${range.key}`,\n            region: range.key,\n        }));\n    }\n}\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\nimport pulumi_btp as btp\n\n# create a subaccount in eu30 region (GCP)\nmy_project = btp.Subaccount(\"myProject\",\n    subdomain=\"my-project\",\n    region=\"eu30\")\n# create a subaccount in every Azure region which has support for cloud foundry\nall = btp.get_regions()\n# create the subaccounts by iterating over the regions with the defined constraints\nmy_project_on_azure = []\nfor range in [{\"key\": k, \"value\": v} for [k, v] in enumerate({dc.region: dc for dc in all.values if dc.environment == cloudfoundry and dc.iaas_provider == AZURE})]:\n    my_project_on_azure.append(btp.Subaccount(f\"myProjectOnAzure-{range['key']}\",\n        subdomain=f\"my-project-{range['key']}\",\n        region=range[\"key\"]))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Threading.Tasks;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(async() =\u003e \n{\n    // create a subaccount in eu30 region (GCP)\n    var myProject = new Btp.Subaccount(\"myProject\", new()\n    {\n        Subdomain = \"my-project\",\n        Region = \"eu30\",\n    });\n\n    // create a subaccount in every Azure region which has support for cloud foundry\n    var all = await Btp.GetRegions.InvokeAsync();\n\n    // create the subaccounts by iterating over the regions with the defined constraints\n    var myProjectOnAzure = new List\u003cBtp.Subaccount\u003e();\n    foreach (var range in .Select(pair =\u003e new { pair.Key, pair.Value }))\n    {\n        myProjectOnAzure.Add(new Btp.Subaccount($\"myProjectOnAzure-{range.Key}\", new()\n        {\n            Subdomain = $\"my-project-{range.Key}\",\n            Region = range.Key,\n        }));\n    }\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewSubaccount(ctx, \"myProject\", \u0026btp.SubaccountArgs{\n\t\t\tSubdomain: pulumi.String(\"my-project\"),\n\t\t\tRegion:    pulumi.String(\"eu30\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tall, err := btp.GetRegions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvar myProjectOnAzure []*btp.Subaccount\n\t\tfor key0, _ := range \"TODO: For expression\" {\n\t\t\t__res, err := btp.NewSubaccount(ctx, fmt.Sprintf(\"myProjectOnAzure-%v\", key0), \u0026btp.SubaccountArgs{\n\t\t\t\tSubdomain: pulumi.String(fmt.Sprintf(\"my-project-%v\", key0)),\n\t\t\t\tRegion:    pulumi.String(key0),\n\t\t\t})\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tmyProjectOnAzure = append(myProjectOnAzure, __res)\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```yaml\nresources:\n  # create a subaccount in eu30 region (GCP)\n  myProject: # create a subaccount in every Azure region which has support for cloud foundry\n    type: btp:Subaccount\n    properties:\n      subdomain: my-project\n      region: eu30\n  # create the subaccounts by iterating over the regions with the defined constraints\n  myProjectOnAzure:\n    type: btp:Subaccount\n    properties:\n      subdomain: my-project-${range.key}\n      region: ${range.key}\n    options: {}\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getRegions\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/subaccount:Subaccount \u003cresource_name\u003e \u003csubaccount_id\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/subaccount:Subaccount my_project 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n\n ",
            "properties": {
                "betaEnabled": {
                    "type": "boolean",
                    "description": "Shows whether the subaccount can use beta services and applications.\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The details of the user that created the subaccount.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the subaccount for customer-facing UIs.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the subaccount.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name of the subaccount for customer-facing UIs.\n"
                },
                "parentFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The features of parent entity of the subaccount.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the subaccount was created.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the subaccount. Possible values are: | state | description | | --- | --- | | `OK` | The CRUD\noperation or series of operations completed successfully. | | `STARTED` | CRUD operation on the subaccount has started.\n| | `CANCELED` | The operation or processing was canceled by the operator. | | `PROCESSING` | A series of operations\nrelated to the subaccount are in progress. | | `PROCESSING_FAILED` | The processing operations failed. | | `CREATING` |\nCreating the subaccount is in progress. | | `CREATION_FAILED` | The creation operation failed, and the subaccount was\nnot created or was created but cannot be used. | | `UPDATING` | Updating the subaccount is in progress. | |\n`UPDATE_FAILED` | The update operation failed, and the subaccount was not updated. | | `UPDATE_DIRECTORY_TYPE_FAILED` |\nThe update of the directory type failed. | | `UPDATE_ACCOUNT_TYPE_FAILED` | The update of the account type failed. | |\n`DELETING` | Deleting the subaccount is in progress. | | `DELETION_FAILED` | The deletion of the subaccount failed, and\nthe subaccount was not deleted. | | `MOVING` | Moving the subaccount is in progress. | | `MOVE_FAILED` | The moving of\nthe subaccount failed. | | `MOVING_TO_OTHER_GA` | Moving the subaccount to another global account is in progress. | |\n`MOVE_TO_OTHER_GA_FAILED` | Moving the subaccount to another global account failed. | | `PENDING_REVIEW` | The\nprocessing operation has been stopped for reviewing and can be restarted by the operator. | | `MIGRATING` | Migrating\nthe subaccount from Neo to Cloud Foundry. | | `MIGRATED` | The migration of the subaccount completed. | |\n`MIGRATION_FAILED` | The migration of the subaccount failed and the subaccount was not migrated. | |\n`ROLLBACK_MIGRATION_PROCESSING` | The migration of the subaccount was rolled back and the subaccount is not migrated. |\n| `SUSPENSION_FAILED` | The suspension operations failed. |\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.\n"
                },
                "usage": {
                    "type": "string",
                    "description": "Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:\n"
                }
            },
            "required": [
                "betaEnabled",
                "createdBy",
                "createdDate",
                "description",
                "lastModified",
                "name",
                "parentFeatures",
                "parentId",
                "region",
                "state",
                "subdomain",
                "usage"
            ],
            "inputProperties": {
                "betaEnabled": {
                    "type": "boolean",
                    "description": "Shows whether the subaccount can use beta services and applications.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the subaccount for customer-facing UIs.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the subaccount.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A descriptive name of the subaccount for customer-facing UIs.\n"
                },
                "parentId": {
                    "type": "string",
                    "description": "The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the subaccount was created.\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.\n"
                },
                "usage": {
                    "type": "string",
                    "description": "Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:\n"
                }
            },
            "requiredInputs": [
                "region",
                "subdomain"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Subaccount resources.\n",
                "properties": {
                    "betaEnabled": {
                        "type": "boolean",
                        "description": "Shows whether the subaccount can use beta services and applications.\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The details of the user that created the subaccount.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the subaccount for customer-facing UIs.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "The set of words or phrases assigned to the subaccount.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A descriptive name of the subaccount for customer-facing UIs.\n"
                    },
                    "parentFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The features of parent entity of the subaccount.\n"
                    },
                    "parentId": {
                        "type": "string",
                        "description": "The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which the subaccount was created.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the subaccount. Possible values are: | state | description | | --- | --- | | `OK` | The CRUD\noperation or series of operations completed successfully. | | `STARTED` | CRUD operation on the subaccount has started.\n| | `CANCELED` | The operation or processing was canceled by the operator. | | `PROCESSING` | A series of operations\nrelated to the subaccount are in progress. | | `PROCESSING_FAILED` | The processing operations failed. | | `CREATING` |\nCreating the subaccount is in progress. | | `CREATION_FAILED` | The creation operation failed, and the subaccount was\nnot created or was created but cannot be used. | | `UPDATING` | Updating the subaccount is in progress. | |\n`UPDATE_FAILED` | The update operation failed, and the subaccount was not updated. | | `UPDATE_DIRECTORY_TYPE_FAILED` |\nThe update of the directory type failed. | | `UPDATE_ACCOUNT_TYPE_FAILED` | The update of the account type failed. | |\n`DELETING` | Deleting the subaccount is in progress. | | `DELETION_FAILED` | The deletion of the subaccount failed, and\nthe subaccount was not deleted. | | `MOVING` | Moving the subaccount is in progress. | | `MOVE_FAILED` | The moving of\nthe subaccount failed. | | `MOVING_TO_OTHER_GA` | Moving the subaccount to another global account is in progress. | |\n`MOVE_TO_OTHER_GA_FAILED` | Moving the subaccount to another global account failed. | | `PENDING_REVIEW` | The\nprocessing operation has been stopped for reviewing and can be restarted by the operator. | | `MIGRATING` | Migrating\nthe subaccount from Neo to Cloud Foundry. | | `MIGRATED` | The migration of the subaccount completed. | |\n`MIGRATION_FAILED` | The migration of the subaccount failed and the subaccount was not migrated. | |\n`ROLLBACK_MIGRATION_PROCESSING` | The migration of the subaccount was rolled back and the subaccount is not migrated. |\n| `SUSPENSION_FAILED` | The suspension operations failed. |\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.\n"
                    },
                    "usage": {
                        "type": "string",
                        "description": "Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/subaccountEntitlement:SubaccountEntitlement": {
            "description": "Assigns the entitlement plan of a service, multitenant application, or environment, to a subaccount. Note that some environments, such as Cloud Foundry, are available by default to all global accounts and their subaccounts, and therefore are not made available as entitlements.\n\n__Tip:__\nYou must be assigned to the global account admin or viewer role.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/entitlements-and-quotas\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// entitle service plan without quota in a subaccount\nconst alertNotificationService = new btp.SubaccountEntitlement(\"alertNotificationService\", {\n    planName: \"free\",\n    serviceName: \"alert-notification\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n// entitle service plan with quota in a subaccount\nconst uasReporting = new btp.SubaccountEntitlement(\"uasReporting\", {\n    amount: 1,\n    planName: \"reporting-directory\",\n    serviceName: \"uas\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\n\n# entitle service plan without quota in a subaccount\nalert_notification_service = btp.SubaccountEntitlement(\"alertNotificationService\",\n    plan_name=\"free\",\n    service_name=\"alert-notification\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n# entitle service plan with quota in a subaccount\nuas_reporting = btp.SubaccountEntitlement(\"uasReporting\",\n    amount=1,\n    plan_name=\"reporting-directory\",\n    service_name=\"uas\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // entitle service plan without quota in a subaccount\n    var alertNotificationService = new Btp.SubaccountEntitlement(\"alertNotificationService\", new()\n    {\n        PlanName = \"free\",\n        ServiceName = \"alert-notification\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    // entitle service plan with quota in a subaccount\n    var uasReporting = new Btp.SubaccountEntitlement(\"uasReporting\", new()\n    {\n        Amount = 1,\n        PlanName = \"reporting-directory\",\n        ServiceName = \"uas\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewSubaccountEntitlement(ctx, \"alertNotificationService\", \u0026btp.SubaccountEntitlementArgs{\n\t\t\tPlanName:     pulumi.String(\"free\"),\n\t\t\tServiceName:  pulumi.String(\"alert-notification\"),\n\t\t\tSubaccountId: pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewSubaccountEntitlement(ctx, \"uasReporting\", \u0026btp.SubaccountEntitlementArgs{\n\t\t\tAmount:       pulumi.Int(1),\n\t\t\tPlanName:     pulumi.String(\"reporting-directory\"),\n\t\t\tServiceName:  pulumi.String(\"uas\"),\n\t\t\tSubaccountId: pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.SubaccountEntitlement;\nimport com.pulumi.btp.SubaccountEntitlementArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var alertNotificationService = new SubaccountEntitlement(\"alertNotificationService\", SubaccountEntitlementArgs.builder()        \n            .planName(\"free\")\n            .serviceName(\"alert-notification\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        var uasReporting = new SubaccountEntitlement(\"uasReporting\", SubaccountEntitlementArgs.builder()        \n            .amount(1)\n            .planName(\"reporting-directory\")\n            .serviceName(\"uas\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # entitle service plan without quota in a subaccount\n  alertNotificationService:\n    type: btp:SubaccountEntitlement\n    properties:\n      planName: free\n      serviceName: alert-notification\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  # entitle service plan with quota in a subaccount\n  uasReporting:\n    type: btp:SubaccountEntitlement\n    properties:\n      amount: 1\n      planName: reporting-directory\n      serviceName: uas\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/subaccountEntitlement:SubaccountEntitlement \u003cresource_name\u003e \u003csubaccount_id\u003e,\u003cservice_name\u003e,\u003cplan_name\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/subaccountEntitlement:SubaccountEntitlement alert_notification_service 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,alert-notification,free\n```\n\n ",
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "The quota assigned to the subaccount.\n"
                },
                "category": {
                    "type": "string",
                    "description": "The current state of the entitlement. Possible values are:\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "planId": {
                    "type": "string",
                    "description": "The ID of the entitled service plan.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The name of the entitled service plan.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the entitled service.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the entitlement. Possible values are: | state | description | | --- | --- | | `OK` | The CRUD\noperation or series of operations completed successfully. | | `STARTED` | The processing operation started | |\n`PROCESSING` | The processing operation is in progress | | `PROCESSING_FAILED` | The processing operation failed |\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                }
            },
            "required": [
                "amount",
                "category",
                "createdDate",
                "lastModified",
                "planId",
                "planName",
                "serviceName",
                "state",
                "subaccountId"
            ],
            "inputProperties": {
                "amount": {
                    "type": "integer",
                    "description": "The quota assigned to the subaccount.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The name of the entitled service plan.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the entitled service.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                }
            },
            "requiredInputs": [
                "planName",
                "serviceName",
                "subaccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubaccountEntitlement resources.\n",
                "properties": {
                    "amount": {
                        "type": "integer",
                        "description": "The quota assigned to the subaccount.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "The current state of the entitlement. Possible values are:\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "planId": {
                        "type": "string",
                        "description": "The ID of the entitled service plan.\n"
                    },
                    "planName": {
                        "type": "string",
                        "description": "The name of the entitled service plan.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The name of the entitled service.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the entitlement. Possible values are: | state | description | | --- | --- | | `OK` | The CRUD\noperation or series of operations completed successfully. | | `STARTED` | The processing operation started | |\n`PROCESSING` | The processing operation is in progress | | `PROCESSING_FAILED` | The processing operation failed |\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance": {
            "description": "Creates an environment instance, such as a Cloud Foundry org, in a subaccount.\n\n__Tips:__\n* You must be assigned to the subaccount admin role.\n* Quota-based environments, such as Kyma, must first be assigned as entitlements to the subaccount.\n\n__Further documentation:__\n* Cloud Foundry: \u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/org-management-using-sap-btp-command-line-interface-btp-cli\u003e\n* Kyma: \u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environment\u003e\n* Concept: \u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/environments\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// creates a cloud foundry environment in a given account\nconst cloudfoundrySubaccountEnvironmentInstance = new btp.SubaccountEnvironmentInstance(\"cloudfoundrySubaccountEnvironmentInstance\", {\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    environmentType: \"cloudfoundry\",\n    serviceName: \"cloudfoundry\",\n    planName: \"standard\",\n    parameters: JSON.stringify({\n        instance_name: \"my-cf-org-name\",\n    }),\n});\n// creates a cloud foundry environment in a given account\n// in additon add a custom timeout for the create and delete operation\nconst cloudfoundryIndex_subaccountEnvironmentInstanceSubaccountEnvironmentInstance = new btp.SubaccountEnvironmentInstance(\"cloudfoundryIndex/subaccountEnvironmentInstanceSubaccountEnvironmentInstance\", {\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    environmentType: \"cloudfoundry\",\n    serviceName: \"cloudfoundry\",\n    planName: \"standard\",\n    parameters: JSON.stringify({\n        instance_name: \"my-cf-org-name\",\n    }),\n    timeouts: {\n        create: \"1h\",\n        update: \"35m\",\n        \"delete\": \"30m\",\n    },\n});\n// creates a kyma environment in a given account\n// NOTE: for the available parameter values, check https://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environment\nconst kyma = new btp.SubaccountEnvironmentInstance(\"kyma\", {\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    environmentType: \"kyma\",\n    serviceName: \"kymaruntime\",\n    planName: \"aws\",\n    parameters: JSON.stringify({\n        name: \"my-kyma-environment\",\n        region: \"us-east-1\",\n        machine_type: \"mx5.xlarge\",\n        auto_scaler_min: 3,\n        auto_scaler_max: 20,\n    }),\n    timeouts: {\n        create: \"1h\",\n        update: \"35m\",\n        \"delete\": \"1h\",\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport lechnerc77_pulumi_btp as btp\n\n# creates a cloud foundry environment in a given account\ncloudfoundry_subaccount_environment_instance = btp.SubaccountEnvironmentInstance(\"cloudfoundrySubaccountEnvironmentInstance\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    environment_type=\"cloudfoundry\",\n    service_name=\"cloudfoundry\",\n    plan_name=\"standard\",\n    parameters=json.dumps({\n        \"instance_name\": \"my-cf-org-name\",\n    }))\n# creates a cloud foundry environment in a given account\n# in additon add a custom timeout for the create and delete operation\ncloudfoundry_index_subaccount_environment_instance_subaccount_environment_instance = btp.SubaccountEnvironmentInstance(\"cloudfoundryIndex/subaccountEnvironmentInstanceSubaccountEnvironmentInstance\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    environment_type=\"cloudfoundry\",\n    service_name=\"cloudfoundry\",\n    plan_name=\"standard\",\n    parameters=json.dumps({\n        \"instance_name\": \"my-cf-org-name\",\n    }),\n    timeouts=btp.SubaccountEnvironmentInstanceTimeoutsArgs(\n        create=\"1h\",\n        update=\"35m\",\n        delete=\"30m\",\n    ))\n# creates a kyma environment in a given account\n# NOTE: for the available parameter values, check https://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environment\nkyma = btp.SubaccountEnvironmentInstance(\"kyma\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    environment_type=\"kyma\",\n    service_name=\"kymaruntime\",\n    plan_name=\"aws\",\n    parameters=json.dumps({\n        \"name\": \"my-kyma-environment\",\n        \"region\": \"us-east-1\",\n        \"machine_type\": \"mx5.xlarge\",\n        \"auto_scaler_min\": 3,\n        \"auto_scaler_max\": 20,\n    }),\n    timeouts=btp.SubaccountEnvironmentInstanceTimeoutsArgs(\n        create=\"1h\",\n        update=\"35m\",\n        delete=\"1h\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // creates a cloud foundry environment in a given account\n    var cloudfoundrySubaccountEnvironmentInstance = new Btp.SubaccountEnvironmentInstance(\"cloudfoundrySubaccountEnvironmentInstance\", new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        EnvironmentType = \"cloudfoundry\",\n        ServiceName = \"cloudfoundry\",\n        PlanName = \"standard\",\n        Parameters = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"instance_name\"] = \"my-cf-org-name\",\n        }),\n    });\n\n    // creates a cloud foundry environment in a given account\n    // in additon add a custom timeout for the create and delete operation\n    var cloudfoundryIndex_subaccountEnvironmentInstanceSubaccountEnvironmentInstance = new Btp.SubaccountEnvironmentInstance(\"cloudfoundryIndex/subaccountEnvironmentInstanceSubaccountEnvironmentInstance\", new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        EnvironmentType = \"cloudfoundry\",\n        ServiceName = \"cloudfoundry\",\n        PlanName = \"standard\",\n        Parameters = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"instance_name\"] = \"my-cf-org-name\",\n        }),\n        Timeouts = new Btp.Inputs.SubaccountEnvironmentInstanceTimeoutsArgs\n        {\n            Create = \"1h\",\n            Update = \"35m\",\n            Delete = \"30m\",\n        },\n    });\n\n    // creates a kyma environment in a given account\n    // NOTE: for the available parameter values, check https://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environment\n    var kyma = new Btp.SubaccountEnvironmentInstance(\"kyma\", new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        EnvironmentType = \"kyma\",\n        ServiceName = \"kymaruntime\",\n        PlanName = \"aws\",\n        Parameters = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"name\"] = \"my-kyma-environment\",\n            [\"region\"] = \"us-east-1\",\n            [\"machine_type\"] = \"mx5.xlarge\",\n            [\"auto_scaler_min\"] = 3,\n            [\"auto_scaler_max\"] = 20,\n        }),\n        Timeouts = new Btp.Inputs.SubaccountEnvironmentInstanceTimeoutsArgs\n        {\n            Create = \"1h\",\n            Update = \"35m\",\n            Delete = \"1h\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"instance_name\": \"my-cf-org-name\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = btp.NewSubaccountEnvironmentInstance(ctx, \"cloudfoundrySubaccountEnvironmentInstance\", \u0026btp.SubaccountEnvironmentInstanceArgs{\n\t\t\tSubaccountId:    pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tEnvironmentType: pulumi.String(\"cloudfoundry\"),\n\t\t\tServiceName:     pulumi.String(\"cloudfoundry\"),\n\t\t\tPlanName:        pulumi.String(\"standard\"),\n\t\t\tParameters:      pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"instance_name\": \"my-cf-org-name\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\t_, err = btp.NewSubaccountEnvironmentInstance(ctx, \"cloudfoundryIndex/subaccountEnvironmentInstanceSubaccountEnvironmentInstance\", \u0026btp.SubaccountEnvironmentInstanceArgs{\n\t\t\tSubaccountId:    pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tEnvironmentType: pulumi.String(\"cloudfoundry\"),\n\t\t\tServiceName:     pulumi.String(\"cloudfoundry\"),\n\t\t\tPlanName:        pulumi.String(\"standard\"),\n\t\t\tParameters:      pulumi.String(json1),\n\t\t\tTimeouts: \u0026btp.SubaccountEnvironmentInstanceTimeoutsArgs{\n\t\t\t\tCreate: pulumi.String(\"1h\"),\n\t\t\t\tUpdate: pulumi.String(\"35m\"),\n\t\t\t\tDelete: pulumi.String(\"30m\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON2, err := json.Marshal(map[string]interface{}{\n\t\t\t\"name\":            \"my-kyma-environment\",\n\t\t\t\"region\":          \"us-east-1\",\n\t\t\t\"machine_type\":    \"mx5.xlarge\",\n\t\t\t\"auto_scaler_min\": 3,\n\t\t\t\"auto_scaler_max\": 20,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson2 := string(tmpJSON2)\n\t\t_, err = btp.NewSubaccountEnvironmentInstance(ctx, \"kyma\", \u0026btp.SubaccountEnvironmentInstanceArgs{\n\t\t\tSubaccountId:    pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tEnvironmentType: pulumi.String(\"kyma\"),\n\t\t\tServiceName:     pulumi.String(\"kymaruntime\"),\n\t\t\tPlanName:        pulumi.String(\"aws\"),\n\t\t\tParameters:      pulumi.String(json2),\n\t\t\tTimeouts: \u0026btp.SubaccountEnvironmentInstanceTimeoutsArgs{\n\t\t\t\tCreate: pulumi.String(\"1h\"),\n\t\t\t\tUpdate: pulumi.String(\"35m\"),\n\t\t\t\tDelete: pulumi.String(\"1h\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.SubaccountEnvironmentInstance;\nimport com.pulumi.btp.SubaccountEnvironmentInstanceArgs;\nimport com.pulumi.btp.inputs.SubaccountEnvironmentInstanceTimeoutsArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cloudfoundrySubaccountEnvironmentInstance = new SubaccountEnvironmentInstance(\"cloudfoundrySubaccountEnvironmentInstance\", SubaccountEnvironmentInstanceArgs.builder()        \n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .environmentType(\"cloudfoundry\")\n            .serviceName(\"cloudfoundry\")\n            .planName(\"standard\")\n            .parameters(serializeJson(\n                jsonObject(\n                    jsonProperty(\"instance_name\", \"my-cf-org-name\")\n                )))\n            .build());\n\n        var cloudfoundryIndex_subaccountEnvironmentInstanceSubaccountEnvironmentInstance = new SubaccountEnvironmentInstance(\"cloudfoundryIndex/subaccountEnvironmentInstanceSubaccountEnvironmentInstance\", SubaccountEnvironmentInstanceArgs.builder()        \n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .environmentType(\"cloudfoundry\")\n            .serviceName(\"cloudfoundry\")\n            .planName(\"standard\")\n            .parameters(serializeJson(\n                jsonObject(\n                    jsonProperty(\"instance_name\", \"my-cf-org-name\")\n                )))\n            .timeouts(SubaccountEnvironmentInstanceTimeoutsArgs.builder()\n                .create(\"1h\")\n                .update(\"35m\")\n                .delete(\"30m\")\n                .build())\n            .build());\n\n        var kyma = new SubaccountEnvironmentInstance(\"kyma\", SubaccountEnvironmentInstanceArgs.builder()        \n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .environmentType(\"kyma\")\n            .serviceName(\"kymaruntime\")\n            .planName(\"aws\")\n            .parameters(serializeJson(\n                jsonObject(\n                    jsonProperty(\"name\", \"my-kyma-environment\"),\n                    jsonProperty(\"region\", \"us-east-1\"),\n                    jsonProperty(\"machine_type\", \"mx5.xlarge\"),\n                    jsonProperty(\"auto_scaler_min\", 3),\n                    jsonProperty(\"auto_scaler_max\", 20)\n                )))\n            .timeouts(SubaccountEnvironmentInstanceTimeoutsArgs.builder()\n                .create(\"1h\")\n                .update(\"35m\")\n                .delete(\"1h\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # creates a cloud foundry environment in a given account\n  cloudfoundrySubaccountEnvironmentInstance:\n    type: btp:SubaccountEnvironmentInstance\n    properties:\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      environmentType: cloudfoundry\n      serviceName: cloudfoundry\n      planName: standard\n      # some regions offer multiple environments of a kind and you must explicitly select the target environment in which\n      #   # the instance shall be created. \n      #   # available environments can be looked up using the btp_subaccount_environments datasource\n      parameters:\n        fn::toJSON:\n          instance_name: my-cf-org-name\n  # creates a cloud foundry environment in a given account\n  # in additon add a custom timeout for the create and delete operation\n  cloudfoundryIndex/subaccountEnvironmentInstanceSubaccountEnvironmentInstance:\n    type: btp:SubaccountEnvironmentInstance\n    properties:\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      environmentType: cloudfoundry\n      serviceName: cloudfoundry\n      planName: standard\n      # some regions offer multiple environments of a kind and you must explicitly select the target environment in which\n      #   # the instance shall be created. \n      #   # available environments can be looked up using the btp_subaccount_environments datasource\n      parameters:\n        fn::toJSON:\n          instance_name: my-cf-org-name\n      timeouts:\n        create: 1h\n        update: 35m\n        delete: 30m\n  # creates a kyma environment in a given account\n  # NOTE: for the available parameter values, check https://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environment\n  kyma:\n    type: btp:SubaccountEnvironmentInstance\n    properties:\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      environmentType: kyma\n      serviceName: kymaruntime\n      planName: aws\n      parameters:\n        fn::toJSON:\n          name: my-kyma-environment\n          region: us-east-1\n          machine_type: mx5.xlarge\n          auto_scaler_min: 3\n          auto_scaler_max: 20\n      timeouts:\n        create: 1h\n        update: 35m\n        delete: 1h\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance \u003cresource_name\u003e \u003csubaccount_id\u003e,\u003cenvironment_instance_id\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance cloudfoundry 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,FD9BB73F-F663-4284-A50B-D72EC24FC4E1\n```\n\n ",
            "properties": {
                "brokerId": {
                    "type": "string",
                    "description": "The ID of the associated environment broker.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "customLabels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the environment instance.\n"
                },
                "dashboardUrl": {
                    "type": "string",
                    "description": "The URL of the service dashboard, which is a web-based management user interface for the service instances.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the environment instance.\n"
                },
                "environmentType": {
                    "type": "string",
                    "description": "The type of the environment instance that is used.\n"
                },
                "labels": {
                    "type": "string",
                    "description": "The Broker-specified key-value pairs that specify attributes of an environment instance.\n"
                },
                "landscapeLabel": {
                    "type": "string",
                    "description": "The name of the landscape within the logged in region on which the environment instance is created.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment instance.\n"
                },
                "operation": {
                    "type": "string",
                    "description": "An identifier that represents the last operation. This ID is returned by the environment brokers.\n"
                },
                "parameters": {
                    "type": "string",
                    "description": "The configuration parameters for the environment instance.\n"
                },
                "planId": {
                    "type": "string",
                    "description": "The ID of the service plan for the environment instance in the corresponding service broker's catalog.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The name of the service plan for the environment instance in the corresponding service broker's catalog.\n"
                },
                "platformId": {
                    "type": "string",
                    "description": "The ID of the platform for the environment instance in the corresponding service broker's catalog.\n"
                },
                "serviceId": {
                    "type": "string",
                    "description": "The ID of the service for the environment instance in the corresponding service broker's catalog.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service for the environment instance in the corresponding service broker's catalog.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the environment instance. Possible values are:\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The ID of the tenant that owns the environment instance.\n"
                },
                "timeouts": {
                    "$ref": "#/types/btp:index/SubaccountEnvironmentInstanceTimeouts:SubaccountEnvironmentInstanceTimeouts"
                },
                "type": {
                    "type": "string",
                    "description": "The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |\n`Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`\n| The environment instance is deleted. |\n"
                }
            },
            "required": [
                "brokerId",
                "createdDate",
                "customLabels",
                "dashboardUrl",
                "description",
                "environmentType",
                "labels",
                "landscapeLabel",
                "lastModified",
                "name",
                "operation",
                "parameters",
                "planId",
                "planName",
                "platformId",
                "serviceId",
                "serviceName",
                "state",
                "subaccountId",
                "tenantId",
                "type"
            ],
            "inputProperties": {
                "environmentType": {
                    "type": "string",
                    "description": "The type of the environment instance that is used.\n"
                },
                "landscapeLabel": {
                    "type": "string",
                    "description": "The name of the landscape within the logged in region on which the environment instance is created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment instance.\n"
                },
                "parameters": {
                    "type": "string",
                    "description": "The configuration parameters for the environment instance.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The name of the service plan for the environment instance in the corresponding service broker's catalog.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The name of the service for the environment instance in the corresponding service broker's catalog.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                },
                "timeouts": {
                    "$ref": "#/types/btp:index/SubaccountEnvironmentInstanceTimeouts:SubaccountEnvironmentInstanceTimeouts"
                }
            },
            "requiredInputs": [
                "environmentType",
                "parameters",
                "planName",
                "serviceName",
                "subaccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubaccountEnvironmentInstance resources.\n",
                "properties": {
                    "brokerId": {
                        "type": "string",
                        "description": "The ID of the associated environment broker.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "customLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "The set of words or phrases assigned to the environment instance.\n"
                    },
                    "dashboardUrl": {
                        "type": "string",
                        "description": "The URL of the service dashboard, which is a web-based management user interface for the service instances.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the environment instance.\n"
                    },
                    "environmentType": {
                        "type": "string",
                        "description": "The type of the environment instance that is used.\n"
                    },
                    "labels": {
                        "type": "string",
                        "description": "The Broker-specified key-value pairs that specify attributes of an environment instance.\n"
                    },
                    "landscapeLabel": {
                        "type": "string",
                        "description": "The name of the landscape within the logged in region on which the environment instance is created.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the environment instance.\n"
                    },
                    "operation": {
                        "type": "string",
                        "description": "An identifier that represents the last operation. This ID is returned by the environment brokers.\n"
                    },
                    "parameters": {
                        "type": "string",
                        "description": "The configuration parameters for the environment instance.\n"
                    },
                    "planId": {
                        "type": "string",
                        "description": "The ID of the service plan for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "planName": {
                        "type": "string",
                        "description": "The name of the service plan for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "platformId": {
                        "type": "string",
                        "description": "The ID of the platform for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the service for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The name of the service for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the environment instance. Possible values are:\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The ID of the tenant that owns the environment instance.\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/btp:index/SubaccountEnvironmentInstanceTimeouts:SubaccountEnvironmentInstanceTimeouts"
                    },
                    "type": {
                        "type": "string",
                        "description": "The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |\n`Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`\n| The environment instance is deleted. |\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/subaccountRoleCollection:SubaccountRoleCollection": {
            "description": "Creates a role collection in a subaccount.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.SubaccountRoleCollection;\nimport com.pulumi.btp.SubaccountRoleCollectionArgs;\nimport com.pulumi.btp.inputs.SubaccountRoleCollectionRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myCollection = new SubaccountRoleCollection(\"myCollection\", SubaccountRoleCollectionArgs.builder()        \n            .description(\"A description of what the role collection is supposed to do.\")\n            .roles(SubaccountRoleCollectionRoleArgs.builder()\n                .name(\"Subaccount Admin\")\n                .role_template_app_id(\"cis-local!b2\")\n                .role_template_name(\"Subaccount_Admin\")\n                .build())\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myCollection:\n    type: btp:SubaccountRoleCollection\n    properties:\n      description: A description of what the role collection is supposed to do.\n      roles:\n        - name: Subaccount Admin\n          role_template_app_id: cis-local!b2\n          role_template_name: Subaccount_Admin\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/subaccountRoleCollection:SubaccountRoleCollection \u003cresource_name\u003e '\u003csubaccount_id\u003e,\u003cname\u003e'\n```\n\n\n\n```sh\n $ pulumi import btp:index/subaccountRoleCollection:SubaccountRoleCollection destination_admin '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,Destination Administrator'\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role collection.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/SubaccountRoleCollectionRole:SubaccountRoleCollectionRole"
                    }
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                }
            },
            "required": [
                "description",
                "name",
                "roles",
                "subaccountId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the role collection.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/btp:index/SubaccountRoleCollectionRole:SubaccountRoleCollectionRole"
                    }
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                }
            },
            "requiredInputs": [
                "roles",
                "subaccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubaccountRoleCollection resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the role collection.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/SubaccountRoleCollectionRole:SubaccountRoleCollectionRole"
                        }
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/subaccountRoleCollectionAssignment:SubaccountRoleCollectionAssignment": {
            "description": "Assigns a user to a role collection on a subaccount level.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// assign a single ser to a role collection on subaccount level\nconst jd = new btp.SubaccountRoleCollectionAssignment(\"jd\", {\n    roleCollectionName: \"Subaccount Viewer\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    userName: \"john.doe@mycompany.com\",\n});\n// assign a group to a role collection on subaccount level\nconst subaccountViewerGroup = new btp.SubaccountRoleCollectionAssignment(\"subaccountViewerGroup\", {\n    groupName: \"subaccount-viewer-group\",\n    roleCollectionName: \"Subaccount Viewer\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\n\n# assign a single ser to a role collection on subaccount level\njd = btp.SubaccountRoleCollectionAssignment(\"jd\",\n    role_collection_name=\"Subaccount Viewer\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    user_name=\"john.doe@mycompany.com\")\n# assign a group to a role collection on subaccount level\nsubaccount_viewer_group = btp.SubaccountRoleCollectionAssignment(\"subaccountViewerGroup\",\n    group_name=\"subaccount-viewer-group\",\n    role_collection_name=\"Subaccount Viewer\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // assign a single ser to a role collection on subaccount level\n    var jd = new Btp.SubaccountRoleCollectionAssignment(\"jd\", new()\n    {\n        RoleCollectionName = \"Subaccount Viewer\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        UserName = \"john.doe@mycompany.com\",\n    });\n\n    // assign a group to a role collection on subaccount level\n    var subaccountViewerGroup = new Btp.SubaccountRoleCollectionAssignment(\"subaccountViewerGroup\", new()\n    {\n        GroupName = \"subaccount-viewer-group\",\n        RoleCollectionName = \"Subaccount Viewer\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewSubaccountRoleCollectionAssignment(ctx, \"jd\", \u0026btp.SubaccountRoleCollectionAssignmentArgs{\n\t\t\tRoleCollectionName: pulumi.String(\"Subaccount Viewer\"),\n\t\t\tSubaccountId:       pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tUserName:           pulumi.String(\"john.doe@mycompany.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewSubaccountRoleCollectionAssignment(ctx, \"subaccountViewerGroup\", \u0026btp.SubaccountRoleCollectionAssignmentArgs{\n\t\t\tGroupName:          pulumi.String(\"subaccount-viewer-group\"),\n\t\t\tRoleCollectionName: pulumi.String(\"Subaccount Viewer\"),\n\t\t\tSubaccountId:       pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.SubaccountRoleCollectionAssignment;\nimport com.pulumi.btp.SubaccountRoleCollectionAssignmentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var jd = new SubaccountRoleCollectionAssignment(\"jd\", SubaccountRoleCollectionAssignmentArgs.builder()        \n            .roleCollectionName(\"Subaccount Viewer\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .userName(\"john.doe@mycompany.com\")\n            .build());\n\n        var subaccountViewerGroup = new SubaccountRoleCollectionAssignment(\"subaccountViewerGroup\", SubaccountRoleCollectionAssignmentArgs.builder()        \n            .groupName(\"subaccount-viewer-group\")\n            .roleCollectionName(\"Subaccount Viewer\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # assign a single ser to a role collection on subaccount level\n  jd:\n    type: btp:SubaccountRoleCollectionAssignment\n    properties:\n      roleCollectionName: Subaccount Viewer\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      userName: john.doe@mycompany.com\n  # assign a group to a role collection on subaccount level\n  subaccountViewerGroup:\n    type: btp:SubaccountRoleCollectionAssignment\n    properties:\n      groupName: subaccount-viewer-group\n      roleCollectionName: Subaccount Viewer\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "attributeName": {
                    "type": "string",
                    "description": "The name of the attribute to assign.\n"
                },
                "attributeValue": {
                    "type": "string",
                    "description": "The value of the attribute to assign.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of the group to assign.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The identity provider that hosts the user or a group. The default value is `ldap`.\n"
                },
                "roleCollectionName": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The username of the user to assign.\n"
                }
            },
            "required": [
                "origin",
                "roleCollectionName",
                "subaccountId"
            ],
            "inputProperties": {
                "attributeName": {
                    "type": "string",
                    "description": "The name of the attribute to assign.\n"
                },
                "attributeValue": {
                    "type": "string",
                    "description": "The value of the attribute to assign.\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "The name of the group to assign.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The identity provider that hosts the user or a group. The default value is `ldap`.\n"
                },
                "roleCollectionName": {
                    "type": "string",
                    "description": "The name of the role collection.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "The username of the user to assign.\n"
                }
            },
            "requiredInputs": [
                "roleCollectionName",
                "subaccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubaccountRoleCollectionAssignment resources.\n",
                "properties": {
                    "attributeName": {
                        "type": "string",
                        "description": "The name of the attribute to assign.\n"
                    },
                    "attributeValue": {
                        "type": "string",
                        "description": "The value of the attribute to assign.\n"
                    },
                    "groupName": {
                        "type": "string",
                        "description": "The name of the group to assign.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user or a group. The default value is `ldap`.\n"
                    },
                    "roleCollectionName": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The username of the user to assign.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/subaccountServiceBinding:SubaccountServiceBinding": {
            "description": "Creates a service binding, i.e. generates access details to consume a service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// create a service binding in a subaccount\nconst myBinding = new btp.SubaccountServiceBinding(\"myBinding\", {\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    serviceInstanceId: \"8911491d-0e1d-425d-a233-785512602d6f\",\n});\n// create a parameterized service binding in a subaccount\nconst myParameterizedBinding = new btp.SubaccountServiceBinding(\"myParameterizedBinding\", {\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    serviceInstanceId: \"8911491d-0e1d-425d-a233-785512602d6f\",\n    parameters: JSON.stringify({\n        param_a: \"\",\n        param_b: \"\",\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport lechnerc77_pulumi_btp as btp\n\n# create a service binding in a subaccount\nmy_binding = btp.SubaccountServiceBinding(\"myBinding\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    service_instance_id=\"8911491d-0e1d-425d-a233-785512602d6f\")\n# create a parameterized service binding in a subaccount\nmy_parameterized_binding = btp.SubaccountServiceBinding(\"myParameterizedBinding\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    service_instance_id=\"8911491d-0e1d-425d-a233-785512602d6f\",\n    parameters=json.dumps({\n        \"param_a\": \"\",\n        \"param_b\": \"\",\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // create a service binding in a subaccount\n    var myBinding = new Btp.SubaccountServiceBinding(\"myBinding\", new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        ServiceInstanceId = \"8911491d-0e1d-425d-a233-785512602d6f\",\n    });\n\n    // create a parameterized service binding in a subaccount\n    var myParameterizedBinding = new Btp.SubaccountServiceBinding(\"myParameterizedBinding\", new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        ServiceInstanceId = \"8911491d-0e1d-425d-a233-785512602d6f\",\n        Parameters = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"param_a\"] = \"\",\n            [\"param_b\"] = \"\",\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewSubaccountServiceBinding(ctx, \"myBinding\", \u0026btp.SubaccountServiceBindingArgs{\n\t\t\tSubaccountId:      pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tServiceInstanceId: pulumi.String(\"8911491d-0e1d-425d-a233-785512602d6f\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"param_a\": \"\",\n\t\t\t\"param_b\": \"\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = btp.NewSubaccountServiceBinding(ctx, \"myParameterizedBinding\", \u0026btp.SubaccountServiceBindingArgs{\n\t\t\tSubaccountId:      pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tServiceInstanceId: pulumi.String(\"8911491d-0e1d-425d-a233-785512602d6f\"),\n\t\t\tParameters:        pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.SubaccountServiceBinding;\nimport com.pulumi.btp.SubaccountServiceBindingArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myBinding = new SubaccountServiceBinding(\"myBinding\", SubaccountServiceBindingArgs.builder()        \n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .serviceInstanceId(\"8911491d-0e1d-425d-a233-785512602d6f\")\n            .build());\n\n        var myParameterizedBinding = new SubaccountServiceBinding(\"myParameterizedBinding\", SubaccountServiceBindingArgs.builder()        \n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .serviceInstanceId(\"8911491d-0e1d-425d-a233-785512602d6f\")\n            .parameters(serializeJson(\n                jsonObject(\n                    jsonProperty(\"param_a\", \"\"),\n                    jsonProperty(\"param_b\", \"\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # create a service binding in a subaccount\n  myBinding:\n    type: btp:SubaccountServiceBinding\n    properties:\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      serviceInstanceId: 8911491d-0e1d-425d-a233-785512602d6f\n  # create a parameterized service binding in a subaccount\n  myParameterizedBinding:\n    type: btp:SubaccountServiceBinding\n    properties:\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      serviceInstanceId: 8911491d-0e1d-425d-a233-785512602d6f\n      parameters:\n        fn::toJSON:\n          param_a:\n          param_b:\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/subaccountServiceBinding:SubaccountServiceBinding \u003cresource_name\u003e \u003csubaccount_id\u003e,\u003cservice_binding_id\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/subaccountServiceBinding:SubaccountServiceBinding my_binding 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,910e9a7d-0fb4-4428-a813-56550e683579\n```\n\n ",
            "properties": {
                "bindResource": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Contains the resources associated with the binding.\n"
                },
                "context": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The contextual data for the resource.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "credentials": {
                    "type": "string",
                    "description": "The credentials to access the binding.\n",
                    "secret": true
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the service binding.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service binding.\n"
                },
                "parameters": {
                    "type": "string",
                    "description": "The parameters of the service binding as a valid JSON object.\n"
                },
                "ready": {
                    "type": "boolean",
                    "description": "Shows whether the service binding is ready.\n"
                },
                "serviceInstanceId": {
                    "type": "string",
                    "description": "The ID of the service instance associated with the binding.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the service binding. Possible values are:\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                }
            },
            "required": [
                "bindResource",
                "context",
                "createdDate",
                "credentials",
                "labels",
                "lastModified",
                "name",
                "parameters",
                "ready",
                "serviceInstanceId",
                "state",
                "subaccountId"
            ],
            "inputProperties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the service binding.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service binding.\n"
                },
                "parameters": {
                    "type": "string",
                    "description": "The parameters of the service binding as a valid JSON object.\n"
                },
                "serviceInstanceId": {
                    "type": "string",
                    "description": "The ID of the service instance associated with the binding.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                }
            },
            "requiredInputs": [
                "serviceInstanceId",
                "subaccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubaccountServiceBinding resources.\n",
                "properties": {
                    "bindResource": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Contains the resources associated with the binding.\n"
                    },
                    "context": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The contextual data for the resource.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "credentials": {
                        "type": "string",
                        "description": "The credentials to access the binding.\n",
                        "secret": true
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "The set of words or phrases assigned to the service binding.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service binding.\n"
                    },
                    "parameters": {
                        "type": "string",
                        "description": "The parameters of the service binding as a valid JSON object.\n"
                    },
                    "ready": {
                        "type": "boolean",
                        "description": "Shows whether the service binding is ready.\n"
                    },
                    "serviceInstanceId": {
                        "type": "string",
                        "description": "The ID of the service instance associated with the binding.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the service binding. Possible values are:\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/subaccountServiceInstance:SubaccountServiceInstance": {
            "description": "Creates a service instance in a subaccount.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// create an instance of the alert-notification service (no configuration necessary)\nconst alertNotificationFreeSubaccountServiceInstance = new btp.SubaccountServiceInstance(\"alertNotificationFreeSubaccountServiceInstance\", {\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    serviceplanId: \"b50d1b0b-2059-4f21-a014-2ea87752eb48\",\n});\n// create an xsuaa service instance with additional configurations\nconst xsuaaApplication = new btp.SubaccountServiceInstance(\"xsuaaApplication\", {\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    serviceplanId: \"bd5e893f-81dd-4d10-8343-e02975e8ecd8\",\n    parameters: JSON.stringify({\n        xsappname: \"my-application\",\n        \"tenant-mode\": \"dedicated\",\n    }),\n});\n// create an instance of the alert-notification service (no configuration necessary)\n// in additon add a custom timeout for the create and update operation\nconst alertNotificationFreeIndex_subaccountServiceInstanceSubaccountServiceInstance = new btp.SubaccountServiceInstance(\"alertNotificationFreeIndex/subaccountServiceInstanceSubaccountServiceInstance\", {\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    serviceplanId: \"b50d1b0b-2059-4f21-a014-2ea87752eb48\",\n    timeouts: {\n        create: \"25m\",\n        update: \"15m\",\n        \"delete\": \"15m\",\n    },\n});\n```\n```python\nimport pulumi\nimport json\nimport lechnerc77_pulumi_btp as btp\n\n# create an instance of the alert-notification service (no configuration necessary)\nalert_notification_free_subaccount_service_instance = btp.SubaccountServiceInstance(\"alertNotificationFreeSubaccountServiceInstance\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    serviceplan_id=\"b50d1b0b-2059-4f21-a014-2ea87752eb48\")\n# create an xsuaa service instance with additional configurations\nxsuaa_application = btp.SubaccountServiceInstance(\"xsuaaApplication\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    serviceplan_id=\"bd5e893f-81dd-4d10-8343-e02975e8ecd8\",\n    parameters=json.dumps({\n        \"xsappname\": \"my-application\",\n        \"tenant-mode\": \"dedicated\",\n    }))\n# create an instance of the alert-notification service (no configuration necessary)\n# in additon add a custom timeout for the create and update operation\nalert_notification_free_index_subaccount_service_instance_subaccount_service_instance = btp.SubaccountServiceInstance(\"alertNotificationFreeIndex/subaccountServiceInstanceSubaccountServiceInstance\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    serviceplan_id=\"b50d1b0b-2059-4f21-a014-2ea87752eb48\",\n    timeouts=btp.SubaccountServiceInstanceTimeoutsArgs(\n        create=\"25m\",\n        update=\"15m\",\n        delete=\"15m\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // create an instance of the alert-notification service (no configuration necessary)\n    var alertNotificationFreeSubaccountServiceInstance = new Btp.SubaccountServiceInstance(\"alertNotificationFreeSubaccountServiceInstance\", new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        ServiceplanId = \"b50d1b0b-2059-4f21-a014-2ea87752eb48\",\n    });\n\n    // create an xsuaa service instance with additional configurations\n    var xsuaaApplication = new Btp.SubaccountServiceInstance(\"xsuaaApplication\", new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        ServiceplanId = \"bd5e893f-81dd-4d10-8343-e02975e8ecd8\",\n        Parameters = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"xsappname\"] = \"my-application\",\n            [\"tenant-mode\"] = \"dedicated\",\n        }),\n    });\n\n    // create an instance of the alert-notification service (no configuration necessary)\n    // in additon add a custom timeout for the create and update operation\n    var alertNotificationFreeIndex_subaccountServiceInstanceSubaccountServiceInstance = new Btp.SubaccountServiceInstance(\"alertNotificationFreeIndex/subaccountServiceInstanceSubaccountServiceInstance\", new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        ServiceplanId = \"b50d1b0b-2059-4f21-a014-2ea87752eb48\",\n        Timeouts = new Btp.Inputs.SubaccountServiceInstanceTimeoutsArgs\n        {\n            Create = \"25m\",\n            Update = \"15m\",\n            Delete = \"15m\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewSubaccountServiceInstance(ctx, \"alertNotificationFreeSubaccountServiceInstance\", \u0026btp.SubaccountServiceInstanceArgs{\n\t\t\tSubaccountId:  pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tServiceplanId: pulumi.String(\"b50d1b0b-2059-4f21-a014-2ea87752eb48\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"xsappname\":   \"my-application\",\n\t\t\t\"tenant-mode\": \"dedicated\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = btp.NewSubaccountServiceInstance(ctx, \"xsuaaApplication\", \u0026btp.SubaccountServiceInstanceArgs{\n\t\t\tSubaccountId:  pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tServiceplanId: pulumi.String(\"bd5e893f-81dd-4d10-8343-e02975e8ecd8\"),\n\t\t\tParameters:    pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewSubaccountServiceInstance(ctx, \"alertNotificationFreeIndex/subaccountServiceInstanceSubaccountServiceInstance\", \u0026btp.SubaccountServiceInstanceArgs{\n\t\t\tSubaccountId:  pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t\tServiceplanId: pulumi.String(\"b50d1b0b-2059-4f21-a014-2ea87752eb48\"),\n\t\t\tTimeouts: \u0026btp.SubaccountServiceInstanceTimeoutsArgs{\n\t\t\t\tCreate: pulumi.String(\"25m\"),\n\t\t\t\tUpdate: pulumi.String(\"15m\"),\n\t\t\t\tDelete: pulumi.String(\"15m\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.SubaccountServiceInstance;\nimport com.pulumi.btp.SubaccountServiceInstanceArgs;\nimport com.pulumi.btp.inputs.SubaccountServiceInstanceTimeoutsArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var alertNotificationFreeSubaccountServiceInstance = new SubaccountServiceInstance(\"alertNotificationFreeSubaccountServiceInstance\", SubaccountServiceInstanceArgs.builder()        \n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .serviceplanId(\"b50d1b0b-2059-4f21-a014-2ea87752eb48\")\n            .build());\n\n        var xsuaaApplication = new SubaccountServiceInstance(\"xsuaaApplication\", SubaccountServiceInstanceArgs.builder()        \n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .serviceplanId(\"bd5e893f-81dd-4d10-8343-e02975e8ecd8\")\n            .parameters(serializeJson(\n                jsonObject(\n                    jsonProperty(\"xsappname\", \"my-application\"),\n                    jsonProperty(\"tenant-mode\", \"dedicated\")\n                )))\n            .build());\n\n        var alertNotificationFreeIndex_subaccountServiceInstanceSubaccountServiceInstance = new SubaccountServiceInstance(\"alertNotificationFreeIndex/subaccountServiceInstanceSubaccountServiceInstance\", SubaccountServiceInstanceArgs.builder()        \n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .serviceplanId(\"b50d1b0b-2059-4f21-a014-2ea87752eb48\")\n            .timeouts(SubaccountServiceInstanceTimeoutsArgs.builder()\n                .create(\"25m\")\n                .update(\"15m\")\n                .delete(\"15m\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # create an instance of the alert-notification service (no configuration necessary)\n  alertNotificationFreeSubaccountServiceInstance:\n    type: btp:SubaccountServiceInstance\n    properties:\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      # The service plan ID can be looked up via the data source btp_subaccount_service_plan\n      serviceplanId: b50d1b0b-2059-4f21-a014-2ea87752eb48\n  # create an xsuaa service instance with additional configurations\n  xsuaaApplication:\n    type: btp:SubaccountServiceInstance\n    properties:\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      # The service plan ID can be looked up via the data source btp_subaccount_service_plan\n      serviceplanId: bd5e893f-81dd-4d10-8343-e02975e8ecd8\n      parameters:\n        fn::toJSON:\n          xsappname: my-application\n          tenant-mode: dedicated\n  # create an instance of the alert-notification service (no configuration necessary)\n  # in additon add a custom timeout for the create and update operation\n  alertNotificationFreeIndex/subaccountServiceInstanceSubaccountServiceInstance:\n    type: btp:SubaccountServiceInstance\n    properties:\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n      # The service plan ID can be looked up via the data source btp_subaccount_service_plan\n      serviceplanId: b50d1b0b-2059-4f21-a014-2ea87752eb48\n      timeouts:\n        create: 25m\n        update: 15m\n        delete: 15m\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/subaccountServiceInstance:SubaccountServiceInstance \u003cresource_name\u003e \u003csubaccount_id\u003e,\u003cservice_instance_id\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/subaccountServiceInstance:SubaccountServiceInstance alert_notification_free 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,6a55f158-41b5-4e63-aa77-84089fa0ab98\n```\n\n ",
            "properties": {
                "context": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Contextual data for the resource.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the service instance.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service instance.\n"
                },
                "parameters": {
                    "type": "string",
                    "description": "The configuration parameters for the service instance.\n",
                    "secret": true
                },
                "platformId": {
                    "type": "string",
                    "description": "The platform ID.\n"
                },
                "ready": {
                    "type": "boolean"
                },
                "referencedInstanceId": {
                    "type": "string",
                    "description": "The ID of the instance to which the service instance refers.\n"
                },
                "serviceplanId": {
                    "type": "string",
                    "description": "The ID of the service plan.\n"
                },
                "shared": {
                    "type": "boolean",
                    "description": "Shows whether the service instance is shared.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the service instance.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                },
                "timeouts": {
                    "$ref": "#/types/btp:index/SubaccountServiceInstanceTimeouts:SubaccountServiceInstanceTimeouts"
                },
                "usable": {
                    "type": "boolean",
                    "description": "Shows whether the resource can be used.\n"
                }
            },
            "required": [
                "context",
                "createdDate",
                "labels",
                "lastModified",
                "name",
                "platformId",
                "ready",
                "referencedInstanceId",
                "serviceplanId",
                "shared",
                "state",
                "subaccountId",
                "usable"
            ],
            "inputProperties": {
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the service instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the service instance.\n"
                },
                "parameters": {
                    "type": "string",
                    "description": "The configuration parameters for the service instance.\n",
                    "secret": true
                },
                "serviceplanId": {
                    "type": "string",
                    "description": "The ID of the service plan.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                },
                "timeouts": {
                    "$ref": "#/types/btp:index/SubaccountServiceInstanceTimeouts:SubaccountServiceInstanceTimeouts"
                }
            },
            "requiredInputs": [
                "serviceplanId",
                "subaccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubaccountServiceInstance resources.\n",
                "properties": {
                    "context": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Contextual data for the resource.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "The set of words or phrases assigned to the service instance.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service instance.\n"
                    },
                    "parameters": {
                        "type": "string",
                        "description": "The configuration parameters for the service instance.\n",
                        "secret": true
                    },
                    "platformId": {
                        "type": "string",
                        "description": "The platform ID.\n"
                    },
                    "ready": {
                        "type": "boolean"
                    },
                    "referencedInstanceId": {
                        "type": "string",
                        "description": "The ID of the instance to which the service instance refers.\n"
                    },
                    "serviceplanId": {
                        "type": "string",
                        "description": "The ID of the service plan.\n"
                    },
                    "shared": {
                        "type": "boolean",
                        "description": "Shows whether the service instance is shared.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the service instance.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "timeouts": {
                        "$ref": "#/types/btp:index/SubaccountServiceInstanceTimeouts:SubaccountServiceInstanceTimeouts"
                    },
                    "usable": {
                        "type": "boolean",
                        "description": "Shows whether the resource can be used.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/subaccountSubscription:SubaccountSubscription": {
            "description": "Subscribes a subaccount to a multitenant application.\nCustom or partner-developed applications are currently not supported.\n\n__Tip:__\nYou must be assigned to the subaccount admin role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\nconst workzone = new btp.SubaccountSubscription(\"workzone\", {\n    appName: \"SAPLaunchpad\",\n    planName: \"free\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\n\nworkzone = btp.SubaccountSubscription(\"workzone\",\n    app_name=\"SAPLaunchpad\",\n    plan_name=\"free\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var workzone = new Btp.SubaccountSubscription(\"workzone\", new()\n    {\n        AppName = \"SAPLaunchpad\",\n        PlanName = \"free\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewSubaccountSubscription(ctx, \"workzone\", \u0026btp.SubaccountSubscriptionArgs{\n\t\t\tAppName:      pulumi.String(\"SAPLaunchpad\"),\n\t\t\tPlanName:     pulumi.String(\"free\"),\n\t\t\tSubaccountId: pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.SubaccountSubscription;\nimport com.pulumi.btp.SubaccountSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var workzone = new SubaccountSubscription(\"workzone\", SubaccountSubscriptionArgs.builder()        \n            .appName(\"SAPLaunchpad\")\n            .planName(\"free\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  workzone:\n    type: btp:SubaccountSubscription\n    properties:\n      appName: SAPLaunchpad\n      planName: free\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/subaccountSubscription:SubaccountSubscription \u003cresource_name\u003e \u003csubaccount_id\u003e,\u003capp_name\u003e,\u003cplan_name\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/subaccountSubscription:SubaccountSubscription workzone 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,SAPLaunchpad,free\n```\n\n ",
            "properties": {
                "additionalPlanFeatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of features specific to this plan.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to an XSUAA service instance.\n"
                },
                "appName": {
                    "type": "string",
                    "description": "The unique registration name of the deployed multitenant application as defined by the app developer.\n"
                },
                "authenticationProvider": {
                    "type": "string",
                    "description": "The authentication provider of the multitenant application. * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level. * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).\n"
                },
                "category": {
                    "type": "string",
                    "description": "The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs.\n"
                },
                "commercialAppName": {
                    "type": "string",
                    "description": "The commercial name of the deployed multitenant application as defined by the app developer.\n"
                },
                "createdDate": {
                    "type": "string",
                    "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "customerDeveloped": {
                    "type": "boolean",
                    "description": "Shows whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the multitenant application for customer-facing UIs.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the application for customer-facing UIs.\n"
                },
                "formationSolutionName": {
                    "type": "string",
                    "description": "The name of the formations solution associated with the multitenant application.\n"
                },
                "globalaccountId": {
                    "type": "string",
                    "description": "The ID of the associated global account.\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The set of words or phrases assigned to the multitenant application subscription.\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                },
                "parameters": {
                    "type": "string",
                    "description": "The parameters of the subscription as a valid JSON object.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The plan name of the application to which the consumer has subscribed.\n"
                },
                "platformEntityId": {
                    "type": "string",
                    "description": "The ID of the landscape-specific environment.\n"
                },
                "quota": {
                    "type": "integer",
                    "description": "The total amount the subscribed subaccount is entitled to consume.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The subscription state of the subaccount regarding the multitenant application.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                },
                "subscribedSubaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount, which is subscribed to the multitenant application.\n"
                },
                "subscribedTenantId": {
                    "type": "string",
                    "description": "The ID of the tenant, which is subscribed to a multitenant application.\n"
                },
                "subscriptionUrl": {
                    "type": "string",
                    "description": "The URL for app users to launch the subscribed application.\n"
                },
                "supportsParametersUpdates": {
                    "type": "boolean",
                    "description": "Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters.\n"
                },
                "supportsPlanUpdates": {
                    "type": "boolean",
                    "description": "Specifies whether a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount.\n"
                },
                "tenantId": {
                    "type": "string",
                    "description": "The tenant ID of the application provider.\n"
                }
            },
            "required": [
                "additionalPlanFeatures",
                "appId",
                "appName",
                "authenticationProvider",
                "category",
                "commercialAppName",
                "createdDate",
                "customerDeveloped",
                "description",
                "displayName",
                "formationSolutionName",
                "globalaccountId",
                "labels",
                "lastModified",
                "parameters",
                "planName",
                "platformEntityId",
                "quota",
                "state",
                "subaccountId",
                "subscribedSubaccountId",
                "subscribedTenantId",
                "subscriptionUrl",
                "supportsParametersUpdates",
                "supportsPlanUpdates",
                "tenantId"
            ],
            "inputProperties": {
                "appName": {
                    "type": "string",
                    "description": "The unique registration name of the deployed multitenant application as defined by the app developer.\n"
                },
                "parameters": {
                    "type": "string",
                    "description": "The parameters of the subscription as a valid JSON object.\n"
                },
                "planName": {
                    "type": "string",
                    "description": "The plan name of the application to which the consumer has subscribed.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                }
            },
            "requiredInputs": [
                "appName",
                "planName",
                "subaccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubaccountSubscription resources.\n",
                "properties": {
                    "additionalPlanFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of features specific to this plan.\n"
                    },
                    "appId": {
                        "type": "string",
                        "description": "The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to an XSUAA service instance.\n"
                    },
                    "appName": {
                        "type": "string",
                        "description": "The unique registration name of the deployed multitenant application as defined by the app developer.\n"
                    },
                    "authenticationProvider": {
                        "type": "string",
                        "description": "The authentication provider of the multitenant application. * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level. * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs.\n"
                    },
                    "commercialAppName": {
                        "type": "string",
                        "description": "The commercial name of the deployed multitenant application as defined by the app developer.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "customerDeveloped": {
                        "type": "boolean",
                        "description": "Shows whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the multitenant application for customer-facing UIs.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the application for customer-facing UIs.\n"
                    },
                    "formationSolutionName": {
                        "type": "string",
                        "description": "The name of the formations solution associated with the multitenant application.\n"
                    },
                    "globalaccountId": {
                        "type": "string",
                        "description": "The ID of the associated global account.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "The set of words or phrases assigned to the multitenant application subscription.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "parameters": {
                        "type": "string",
                        "description": "The parameters of the subscription as a valid JSON object.\n"
                    },
                    "planName": {
                        "type": "string",
                        "description": "The plan name of the application to which the consumer has subscribed.\n"
                    },
                    "platformEntityId": {
                        "type": "string",
                        "description": "The ID of the landscape-specific environment.\n"
                    },
                    "quota": {
                        "type": "integer",
                        "description": "The total amount the subscribed subaccount is entitled to consume.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The subscription state of the subaccount regarding the multitenant application.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "subscribedSubaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount, which is subscribed to the multitenant application.\n"
                    },
                    "subscribedTenantId": {
                        "type": "string",
                        "description": "The ID of the tenant, which is subscribed to a multitenant application.\n"
                    },
                    "subscriptionUrl": {
                        "type": "string",
                        "description": "The URL for app users to launch the subscribed application.\n"
                    },
                    "supportsParametersUpdates": {
                        "type": "boolean",
                        "description": "Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters.\n"
                    },
                    "supportsPlanUpdates": {
                        "type": "boolean",
                        "description": "Specifies whether a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The tenant ID of the application provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "btp:index/subaccountTrustConfiguration:SubaccountTrustConfiguration": {
            "description": "Establishes trust from a subaccount to an Identity Authentication tenant.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@lechnerc77/pulumi-btp\";\n\n// create a new simple trust configuration for a subaccount\n// for a Custom Identity Provider for Applications\nconst simple = new btp.SubaccountTrustConfiguration(\"simple\", {\n    identityProvider: \"terraformint.accounts400.ondemand.com\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n// create a new fully customized trust configuration for a subaccount \n// for a Custom Identity Provider for Applications\nconst fullyCustomized = new btp.SubaccountTrustConfiguration(\"fullyCustomized\", {\n    description: \"my-description\",\n    identityProvider: \"terraformint.accounts400.ondemand.com\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport lechnerc77_pulumi_btp as btp\n\n# create a new simple trust configuration for a subaccount\n# for a Custom Identity Provider for Applications\nsimple = btp.SubaccountTrustConfiguration(\"simple\",\n    identity_provider=\"terraformint.accounts400.ondemand.com\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n# create a new fully customized trust configuration for a subaccount \n# for a Custom Identity Provider for Applications\nfully_customized = btp.SubaccountTrustConfiguration(\"fullyCustomized\",\n    description=\"my-description\",\n    identity_provider=\"terraformint.accounts400.ondemand.com\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = PulumiBtp.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // create a new simple trust configuration for a subaccount\n    // for a Custom Identity Provider for Applications\n    var simple = new Btp.SubaccountTrustConfiguration(\"simple\", new()\n    {\n        IdentityProvider = \"terraformint.accounts400.ondemand.com\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    // create a new fully customized trust configuration for a subaccount \n    // for a Custom Identity Provider for Applications\n    var fullyCustomized = new Btp.SubaccountTrustConfiguration(\"fullyCustomized\", new()\n    {\n        Description = \"my-description\",\n        IdentityProvider = \"terraformint.accounts400.ondemand.com\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.NewSubaccountTrustConfiguration(ctx, \"simple\", \u0026btp.SubaccountTrustConfigurationArgs{\n\t\t\tIdentityProvider: pulumi.String(\"terraformint.accounts400.ondemand.com\"),\n\t\t\tSubaccountId:     pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.NewSubaccountTrustConfiguration(ctx, \"fullyCustomized\", \u0026btp.SubaccountTrustConfigurationArgs{\n\t\t\tDescription:      pulumi.String(\"my-description\"),\n\t\t\tIdentityProvider: pulumi.String(\"terraformint.accounts400.ondemand.com\"),\n\t\t\tSubaccountId:     pulumi.String(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.SubaccountTrustConfiguration;\nimport com.pulumi.btp.SubaccountTrustConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var simple = new SubaccountTrustConfiguration(\"simple\", SubaccountTrustConfigurationArgs.builder()        \n            .identityProvider(\"terraformint.accounts400.ondemand.com\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        var fullyCustomized = new SubaccountTrustConfiguration(\"fullyCustomized\", SubaccountTrustConfigurationArgs.builder()        \n            .description(\"my-description\")\n            .identityProvider(\"terraformint.accounts400.ondemand.com\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # create a new simple trust configuration for a subaccount\n  # // for a Custom Identity Provider for Applications\n  simple:\n    type: btp:SubaccountTrustConfiguration\n    properties:\n      identityProvider: terraformint.accounts400.ondemand.com\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  # create a new fully customized trust configuration for a subaccount \n  # // for a Custom Identity Provider for Applications\n  fullyCustomized:\n    type: btp:SubaccountTrustConfiguration\n    properties:\n      description: my-description\n      identityProvider: terraformint.accounts400.ondemand.com\n      subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nterraform\n\n```sh\n $ pulumi import btp:index/subaccountTrustConfiguration:SubaccountTrustConfiguration terraform importbtp_subaccount_trust_configuration.\u003cresource_name\u003e \u003csubaccount_id\u003e,\u003corigin\u003e\n```\n\n\n\n```sh\n $ pulumi import btp:index/subaccountTrustConfiguration:SubaccountTrustConfiguration trust 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,sap.custom\n```\n\n ",
            "properties": {
                "autoCreateShadowUsers": {
                    "type": "boolean",
                    "description": "Determines that any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.\n"
                },
                "availableForUserLogon": {
                    "type": "boolean",
                    "description": "Determines that end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the trust configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The tenant's domain which should be used for user logon.\n"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "The name of the Identity Authentication tenant that you want to connect to the subaccount.\n"
                },
                "linkText": {
                    "type": "string",
                    "description": "Short string that helps users to identify the link for login.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the trust configuration.\n"
                },
                "origin": {
                    "type": "string",
                    "description": "The origin of the identity provider.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "The protocol used to establish trust with the identity provider.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Shows whether the trust configuration can be modified.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Determines whether the identity provider is currently 'active' or 'inactive'.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The trust type.\n"
                }
            },
            "required": [
                "autoCreateShadowUsers",
                "availableForUserLogon",
                "description",
                "identityProvider",
                "linkText",
                "name",
                "origin",
                "protocol",
                "readOnly",
                "status",
                "subaccountId",
                "type"
            ],
            "inputProperties": {
                "autoCreateShadowUsers": {
                    "type": "boolean",
                    "description": "Determines that any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.\n"
                },
                "availableForUserLogon": {
                    "type": "boolean",
                    "description": "Determines that end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the trust configuration.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The tenant's domain which should be used for user logon.\n"
                },
                "identityProvider": {
                    "type": "string",
                    "description": "The name of the Identity Authentication tenant that you want to connect to the subaccount.\n"
                },
                "linkText": {
                    "type": "string",
                    "description": "Short string that helps users to identify the link for login.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The display name of the trust configuration.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Determines whether the identity provider is currently 'active' or 'inactive'.\n"
                },
                "subaccountId": {
                    "type": "string",
                    "description": "The ID of the subaccount.\n"
                }
            },
            "requiredInputs": [
                "identityProvider",
                "subaccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SubaccountTrustConfiguration resources.\n",
                "properties": {
                    "autoCreateShadowUsers": {
                        "type": "boolean",
                        "description": "Determines that any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.\n"
                    },
                    "availableForUserLogon": {
                        "type": "boolean",
                        "description": "Determines that end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the trust configuration.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The tenant's domain which should be used for user logon.\n"
                    },
                    "identityProvider": {
                        "type": "string",
                        "description": "The name of the Identity Authentication tenant that you want to connect to the subaccount.\n"
                    },
                    "linkText": {
                        "type": "string",
                        "description": "Short string that helps users to identify the link for login.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the trust configuration.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The origin of the identity provider.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol used to establish trust with the identity provider.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the trust configuration can be modified.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Determines whether the identity provider is currently 'active' or 'inactive'.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The trust type.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "btp:index/getDirectory:getDirectory": {
            "description": "Gets the details about a directory.\n\n__Tip:__\nYou must be assigned to the global account admin role, or the directory admin if the directory is configured to manage its authorizations.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/account-model\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst byId = btp.getDirectory({\n    id: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nby_id = btp.get_directory(id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var byId = Btp.GetDirectory.Invoke(new()\n    {\n        Id = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupDirectory(ctx, \u0026btp.LookupDirectoryArgs{\n\t\t\tId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetDirectoryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var byId = BtpFunctions.getDirectory(GetDirectoryArgs.builder()\n            .id(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  byId:\n    fn::invoke:\n      Function: btp:getDirectory\n      Arguments:\n        id: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDirectory.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDirectory.\n",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "The details of the user that created the directory.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the directory.\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The features that are enabled for the directory. Possible values are:\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "lastModified": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdBy",
                    "createdDate",
                    "description",
                    "features",
                    "id",
                    "labels",
                    "lastModified",
                    "name",
                    "parentId",
                    "state",
                    "subdomain"
                ]
            }
        },
        "btp:index/getDirectoryEntitlements:getDirectoryEntitlements": {
            "description": "Gets all the entitlements and quota assignments for a directory.\n\nTo view all the resources that a directory and its subdirectories and subaccounts are entitled to use, the following condition must be met:\n* The directory must be a directory that is configured to manage its own entitlements.\n* You must be assigned to either the global account admin or global account viewers role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getDirectoryEntitlements({\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_directory_entitlements(directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetDirectoryEntitlements.Invoke(new()\n    {\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetDirectoryEntitlements(ctx, \u0026btp.GetDirectoryEntitlementsArgs{\n\t\t\tDirectoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetDirectoryEntitlementsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getDirectoryEntitlements(GetDirectoryEntitlementsArgs.builder()\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getDirectoryEntitlements\n      Arguments:\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDirectoryEntitlements.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    }
                },
                "type": "object",
                "required": [
                    "directoryId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDirectoryEntitlements.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the directory.\n",
                        "deprecationMessage": "Use the `directory_id` attribute instead"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/btp:index/getDirectoryEntitlementsValues:getDirectoryEntitlementsValues"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "directoryId",
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getDirectoryLabels:getDirectoryLabels": {
            "description": "Gets all the user-defined labels that are currently assigned to a specific directory.\n\n__Tip:__\nYou must be assigned to the global account admin or viewer role. These roles assignments are not needed for directories of which you are the directory admin.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/account-model\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getDirectoryLabels({\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_directory_labels(directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetDirectoryLabels.Invoke(new()\n    {\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetDirectoryLabels(ctx, \u0026btp.GetDirectoryLabelsArgs{\n\t\t\tDirectoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetDirectoryLabelsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getDirectoryLabels(GetDirectoryLabelsArgs.builder()\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getDirectoryLabels\n      Arguments:\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDirectoryLabels.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    }
                },
                "type": "object",
                "required": [
                    "directoryId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDirectoryLabels.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the directory.\n",
                        "deprecationMessage": "Use the `directory_id` attribute instead"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Contains the label values\n"
                    }
                },
                "type": "object",
                "required": [
                    "directoryId",
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getDirectoryRole:getDirectoryRole": {
            "description": "Gets details about a specific directory role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst userRoleAuditor = btp.getDirectoryRole({\n    appId: \"xsuaa!t1\",\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    name: \"User and Role Auditor\",\n    roleTemplateName: \"xsuaa_auditor\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nuser_role_auditor = btp.get_directory_role(app_id=\"xsuaa!t1\",\n    directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    name=\"User and Role Auditor\",\n    role_template_name=\"xsuaa_auditor\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var userRoleAuditor = Btp.GetDirectoryRole.Invoke(new()\n    {\n        AppId = \"xsuaa!t1\",\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n        Name = \"User and Role Auditor\",\n        RoleTemplateName = \"xsuaa_auditor\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetDirectoryRole(ctx, \u0026btp.GetDirectoryRoleArgs{\n\t\t\tAppId:            \"xsuaa!t1\",\n\t\t\tDirectoryId:      \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t\tName:             \"User and Role Auditor\",\n\t\t\tRoleTemplateName: \"xsuaa_auditor\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetDirectoryRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var userRoleAuditor = BtpFunctions.getDirectoryRole(GetDirectoryRoleArgs.builder()\n            .appId(\"xsuaa!t1\")\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .name(\"User and Role Auditor\")\n            .roleTemplateName(\"xsuaa_auditor\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  userRoleAuditor:\n    fn::invoke:\n      Function: btp:getDirectoryRole\n      Arguments:\n        appId: xsuaa!t1\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n        name: User and Role Auditor\n        roleTemplateName: xsuaa_auditor\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDirectoryRole.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the xsuaa application.\n"
                    },
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    },
                    "roleTemplateName": {
                        "type": "string",
                        "description": "The name of the role template.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId",
                    "directoryId",
                    "name",
                    "roleTemplateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDirectoryRole.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the xsuaa application.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the role.\n"
                    },
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the directory.\n",
                        "deprecationMessage": "Use the `directory_id` attribute instead"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the role can be modified or not.\n"
                    },
                    "roleTemplateName": {
                        "type": "string",
                        "description": "The name of the role template.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getDirectoryRoleScope:getDirectoryRoleScope"
                        },
                        "description": "The scopes available with this role.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId",
                    "description",
                    "directoryId",
                    "id",
                    "name",
                    "readOnly",
                    "roleTemplateName",
                    "scopes"
                ]
            }
        },
        "btp:index/getDirectoryRoleCollection:getDirectoryRoleCollection": {
            "description": "Gets details about a specific directory role collection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst directoryAdmin = btp.getDirectoryRoleCollection({\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    name: \"Directory Administrator\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\ndirectory_admin = btp.get_directory_role_collection(directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    name=\"Directory Administrator\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var directoryAdmin = Btp.GetDirectoryRoleCollection.Invoke(new()\n    {\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n        Name = \"Directory Administrator\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupDirectoryRoleCollection(ctx, \u0026btp.LookupDirectoryRoleCollectionArgs{\n\t\t\tDirectoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t\tName:        \"Directory Administrator\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetDirectoryRoleCollectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var directoryAdmin = BtpFunctions.getDirectoryRoleCollection(GetDirectoryRoleCollectionArgs.builder()\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .name(\"Directory Administrator\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  directoryAdmin:\n    fn::invoke:\n      Function: btp:getDirectoryRoleCollection\n      Arguments:\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n        name: Directory Administrator\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDirectoryRoleCollection.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    }
                },
                "type": "object",
                "required": [
                    "directoryId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDirectoryRoleCollection.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the role collection.\n"
                    },
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the directory.\n",
                        "deprecationMessage": "Use the `directory_id` attribute instead"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the role collection is read-only.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getDirectoryRoleCollectionRole:getDirectoryRoleCollectionRole"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "directoryId",
                    "id",
                    "name",
                    "readOnly",
                    "roles"
                ]
            }
        },
        "btp:index/getDirectoryRoleCollections:getDirectoryRoleCollections": {
            "description": "Gets all role collections.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getDirectoryRoleCollections({\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_directory_role_collections(directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetDirectoryRoleCollections.Invoke(new()\n    {\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetDirectoryRoleCollections(ctx, \u0026btp.GetDirectoryRoleCollectionsArgs{\n\t\t\tDirectoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetDirectoryRoleCollectionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getDirectoryRoleCollections(GetDirectoryRoleCollectionsArgs.builder()\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getDirectoryRoleCollections\n      Arguments:\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDirectoryRoleCollections.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    }
                },
                "type": "object",
                "required": [
                    "directoryId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDirectoryRoleCollections.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the directory.\n",
                        "deprecationMessage": "Use the `directory_id` attribute instead"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getDirectoryRoleCollectionsValue:getDirectoryRoleCollectionsValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "directoryId",
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getDirectoryRoles:getDirectoryRoles": {
            "description": "Gets all roles.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getDirectoryRoles({\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_directory_roles(directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetDirectoryRoles.Invoke(new()\n    {\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetDirectoryRoles(ctx, \u0026btp.GetDirectoryRolesArgs{\n\t\t\tDirectoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetDirectoryRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getDirectoryRoles(GetDirectoryRolesArgs.builder()\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getDirectoryRoles\n      Arguments:\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDirectoryRoles.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    }
                },
                "type": "object",
                "required": [
                    "directoryId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDirectoryRoles.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the directory.\n",
                        "deprecationMessage": "Use the `directory_id` attribute instead"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getDirectoryRolesValue:getDirectoryRolesValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "directoryId",
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getDirectoryUser:getDirectoryUser": {
            "description": "Shows registered users in a directory. Users belong to one of the identity providers (IdPs) of the global account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst someone = btp.getDirectoryUser({\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    userName: \"john.doe@mycompany.com\",\n});\nconst someoneElse = btp.getDirectoryUser({\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    origin: \"my-custom-idp\",\n    userName: \"jane.doe@mycompany.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nsomeone = btp.get_directory_user(directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    user_name=\"john.doe@mycompany.com\")\nsomeone_else = btp.get_directory_user(directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    origin=\"my-custom-idp\",\n    user_name=\"jane.doe@mycompany.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var someone = Btp.GetDirectoryUser.Invoke(new()\n    {\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n        UserName = \"john.doe@mycompany.com\",\n    });\n\n    var someoneElse = Btp.GetDirectoryUser.Invoke(new()\n    {\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n        Origin = \"my-custom-idp\",\n        UserName = \"jane.doe@mycompany.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetDirectoryUser(ctx, \u0026btp.GetDirectoryUserArgs{\n\t\t\tDirectoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t\tUserName:    \"john.doe@mycompany.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetDirectoryUser(ctx, \u0026btp.GetDirectoryUserArgs{\n\t\t\tDirectoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t\tOrigin:      pulumi.StringRef(\"my-custom-idp\"),\n\t\t\tUserName:    \"jane.doe@mycompany.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetDirectoryUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var someone = BtpFunctions.getDirectoryUser(GetDirectoryUserArgs.builder()\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .userName(\"john.doe@mycompany.com\")\n            .build());\n\n        final var someoneElse = BtpFunctions.getDirectoryUser(GetDirectoryUserArgs.builder()\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .origin(\"my-custom-idp\")\n            .userName(\"jane.doe@mycompany.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  someone:\n    fn::invoke:\n      Function: btp:getDirectoryUser\n      Arguments:\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n        userName: john.doe@mycompany.com\n  someoneElse:\n    fn::invoke:\n      Function: btp:getDirectoryUser\n      Arguments:\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n        origin: my-custom-idp\n        userName: jane.doe@mycompany.com\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDirectoryUser.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The username of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "directoryId",
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDirectoryUser.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Shows if the account is still in use.\n"
                    },
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The e-mail address of the user.\n"
                    },
                    "familyName": {
                        "type": "string",
                        "description": "The last name of the user.\n"
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The given name of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the user.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'\n"
                    },
                    "roleCollections": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The set of role collections, which are assigned to the user.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The username of the user.\n"
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "The verification status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "active",
                    "directoryId",
                    "email",
                    "familyName",
                    "givenName",
                    "id",
                    "origin",
                    "roleCollections",
                    "userName",
                    "verified"
                ]
            }
        },
        "btp:index/getDirectoryUsers:getDirectoryUsers": {
            "description": "Gets all users.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/user-and-member-management\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst defaultidp = btp.getDirectoryUsers({\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n});\nconst mycustomidp = btp.getDirectoryUsers({\n    directoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    origin: \"my-custom-idp\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\ndefaultidp = btp.get_directory_users(directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\nmycustomidp = btp.get_directory_users(directory_id=\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    origin=\"my-custom-idp\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var defaultidp = Btp.GetDirectoryUsers.Invoke(new()\n    {\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n    });\n\n    var mycustomidp = Btp.GetDirectoryUsers.Invoke(new()\n    {\n        DirectoryId = \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n        Origin = \"my-custom-idp\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetDirectoryUsers(ctx, \u0026btp.GetDirectoryUsersArgs{\n\t\t\tDirectoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetDirectoryUsers(ctx, \u0026btp.GetDirectoryUsersArgs{\n\t\t\tDirectoryId: \"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\",\n\t\t\tOrigin:      pulumi.StringRef(\"my-custom-idp\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetDirectoryUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var defaultidp = BtpFunctions.getDirectoryUsers(GetDirectoryUsersArgs.builder()\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .build());\n\n        final var mycustomidp = BtpFunctions.getDirectoryUsers(GetDirectoryUsersArgs.builder()\n            .directoryId(\"dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\")\n            .origin(\"my-custom-idp\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  defaultidp:\n    fn::invoke:\n      Function: btp:getDirectoryUsers\n      Arguments:\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n  mycustomidp:\n    fn::invoke:\n      Function: btp:getDirectoryUsers\n      Arguments:\n        directoryId: dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0\n        origin: my-custom-idp\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDirectoryUsers.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'.\n"
                    }
                },
                "type": "object",
                "required": [
                    "directoryId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDirectoryUsers.\n",
                "properties": {
                    "directoryId": {
                        "type": "string",
                        "description": "The ID of the directory.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the directory.\n",
                        "deprecationMessage": "Use the `directory_id` attribute instead"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of users assigned to the directory.\n"
                    }
                },
                "type": "object",
                "required": [
                    "directoryId",
                    "id",
                    "origin",
                    "values"
                ]
            }
        },
        "btp:index/getGlobalaccount:getGlobalaccount": {
            "description": "Gets details about a global account.\n\n__Tip:__\nYou must be assigned to the global account admin or viewer role.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/account-model\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst this = btp.getGlobalaccount({});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nthis = btp.get_globalaccount()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @this = Btp.GetGlobalaccount.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetGlobalaccount(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var this = BtpFunctions.getGlobalaccount();\n\n    }\n}\n```\n```yaml\nvariables:\n  this:\n    fn::invoke:\n      Function: btp:getGlobalaccount\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getGlobalaccount.\n",
                "properties": {
                    "commercialModel": {
                        "type": "string",
                        "description": "The type of the commercial contract that was signed.\n"
                    },
                    "consumptionBased": {
                        "type": "boolean",
                        "description": "Shows whether the customer of the global account pays only for services that they actually use (consumption-based) or pays for subscribed services at a fixed cost irrespective of consumption (subscription-based).\n"
                    },
                    "contractStatus": {
                        "type": "string",
                        "description": "The status of the customer contract and its associated root global account. Possible values are:\n"
                    },
                    "costobjectId": {
                        "type": "string"
                    },
                    "costobjectType": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string"
                    },
                    "crmCustomerId": {
                        "type": "string"
                    },
                    "crmTenantId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "expiryDate": {
                        "type": "string"
                    },
                    "geoAccess": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "lastModified": {
                        "type": "string"
                    },
                    "licenseType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "origin": {
                        "type": "string"
                    },
                    "renewalDate": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string"
                    },
                    "usage": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "commercialModel",
                    "consumptionBased",
                    "contractStatus",
                    "costobjectId",
                    "costobjectType",
                    "createdDate",
                    "crmCustomerId",
                    "crmTenantId",
                    "description",
                    "expiryDate",
                    "geoAccess",
                    "id",
                    "lastModified",
                    "licenseType",
                    "name",
                    "origin",
                    "renewalDate",
                    "serviceId",
                    "state",
                    "subdomain",
                    "usage"
                ]
            }
        },
        "btp:index/getGlobalaccountEntitlements:getGlobalaccountEntitlements": {
            "description": "Gets all the entitlements and quota assignments for a global account.\n\nTo view all the resources a global account:\n* Target only the global account in the command line.\n* You must be assigned to either the global account admin or global account viewers role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getGlobalaccountEntitlements({});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_globalaccount_entitlements()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetGlobalaccountEntitlements.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetGlobalaccountEntitlements(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getGlobalaccountEntitlements();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getGlobalaccountEntitlements\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getGlobalaccountEntitlements.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the global account.\n",
                        "deprecationMessage": "Use the `btp_globalaccount` datasource instead"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/btp:index/getGlobalaccountEntitlementsValues:getGlobalaccountEntitlementsValues"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getGlobalaccountRole:getGlobalaccountRole": {
            "description": "Gets details about a specific global account role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst userRoleAuditor = btp.getGlobalaccountRole({\n    appId: \"xsuaa!t1\",\n    name: \"User and Role Auditor\",\n    roleTemplateName: \"xsuaa_auditor\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nuser_role_auditor = btp.get_globalaccount_role(app_id=\"xsuaa!t1\",\n    name=\"User and Role Auditor\",\n    role_template_name=\"xsuaa_auditor\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var userRoleAuditor = Btp.GetGlobalaccountRole.Invoke(new()\n    {\n        AppId = \"xsuaa!t1\",\n        Name = \"User and Role Auditor\",\n        RoleTemplateName = \"xsuaa_auditor\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetGlobalaccountRole(ctx, \u0026btp.GetGlobalaccountRoleArgs{\n\t\t\tAppId:            \"xsuaa!t1\",\n\t\t\tName:             \"User and Role Auditor\",\n\t\t\tRoleTemplateName: \"xsuaa_auditor\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetGlobalaccountRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var userRoleAuditor = BtpFunctions.getGlobalaccountRole(GetGlobalaccountRoleArgs.builder()\n            .appId(\"xsuaa!t1\")\n            .name(\"User and Role Auditor\")\n            .roleTemplateName(\"xsuaa_auditor\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  userRoleAuditor:\n    fn::invoke:\n      Function: btp:getGlobalaccountRole\n      Arguments:\n        appId: xsuaa!t1\n        name: User and Role Auditor\n        roleTemplateName: xsuaa_auditor\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGlobalaccountRole.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the xsuaa application.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    },
                    "roleTemplateName": {
                        "type": "string",
                        "description": "The name of the role template.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId",
                    "name",
                    "roleTemplateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGlobalaccountRole.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the xsuaa application.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the role.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the global account\n",
                        "deprecationMessage": "Use the `btp_globalaccount` datasource instead"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the role can be modified or not.\n"
                    },
                    "roleTemplateName": {
                        "type": "string",
                        "description": "The name of the role template.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getGlobalaccountRoleScope:getGlobalaccountRoleScope"
                        },
                        "description": "The scopes available with this role.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId",
                    "description",
                    "id",
                    "name",
                    "readOnly",
                    "roleTemplateName",
                    "scopes"
                ]
            }
        },
        "btp:index/getGlobalaccountRoleCollection:getGlobalaccountRoleCollection": {
            "description": "Gets details about a specific global account role collection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst globalaccountAdmin = btp.getGlobalaccountRoleCollection({\n    name: \"Global Account Administrator\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nglobalaccount_admin = btp.get_globalaccount_role_collection(name=\"Global Account Administrator\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var globalaccountAdmin = Btp.GetGlobalaccountRoleCollection.Invoke(new()\n    {\n        Name = \"Global Account Administrator\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupGlobalaccountRoleCollection(ctx, \u0026btp.LookupGlobalaccountRoleCollectionArgs{\n\t\t\tName: \"Global Account Administrator\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetGlobalaccountRoleCollectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var globalaccountAdmin = BtpFunctions.getGlobalaccountRoleCollection(GetGlobalaccountRoleCollectionArgs.builder()\n            .name(\"Global Account Administrator\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  globalaccountAdmin:\n    fn::invoke:\n      Function: btp:getGlobalaccountRoleCollection\n      Arguments:\n        name: Global Account Administrator\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGlobalaccountRoleCollection.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGlobalaccountRoleCollection.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the role collection.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the global account.\n",
                        "deprecationMessage": "Use the `btp_globalaccount` datasource instead"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the role collection is read-only.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getGlobalaccountRoleCollectionRole:getGlobalaccountRoleCollectionRole"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "name",
                    "readOnly",
                    "roles"
                ]
            }
        },
        "btp:index/getGlobalaccountRoleCollections:getGlobalaccountRoleCollections": {
            "description": "Gets all role collections.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getGlobalaccountRoleCollections({});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_globalaccount_role_collections()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetGlobalaccountRoleCollections.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetGlobalaccountRoleCollections(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getGlobalaccountRoleCollections();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getGlobalaccountRoleCollections\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getGlobalaccountRoleCollections.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the global account\n",
                        "deprecationMessage": "Use the `btp_globalaccount` datasource instead"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getGlobalaccountRoleCollectionsValue:getGlobalaccountRoleCollectionsValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getGlobalaccountRoles:getGlobalaccountRoles": {
            "description": "Lists all roles.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getGlobalaccountRoles({});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_globalaccount_roles()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetGlobalaccountRoles.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetGlobalaccountRoles(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getGlobalaccountRoles();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getGlobalaccountRoles\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getGlobalaccountRoles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the global account.\n",
                        "deprecationMessage": "Use the `btp_globalaccount` datasource instead"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getGlobalaccountRolesValue:getGlobalaccountRolesValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getGlobalaccountTrustConfiguration:getGlobalaccountTrustConfiguration": {
            "description": "Gets details about a trust configuration.\n\n__Tip:__\nYou must be viewer or administrator of the global account.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-btp-neo-environment/platform-identity-provider\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst default = btp.getGlobalaccountTrustConfiguration({\n    origin: \"sap.default\",\n});\nconst custom = btp.getGlobalaccountTrustConfiguration({\n    origin: \"terraformint-platform\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\ndefault = btp.get_globalaccount_trust_configuration(origin=\"sap.default\")\ncustom = btp.get_globalaccount_trust_configuration(origin=\"terraformint-platform\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @default = Btp.GetGlobalaccountTrustConfiguration.Invoke(new()\n    {\n        Origin = \"sap.default\",\n    });\n\n    var custom = Btp.GetGlobalaccountTrustConfiguration.Invoke(new()\n    {\n        Origin = \"terraformint-platform\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupGlobalaccountTrustConfiguration(ctx, \u0026btp.LookupGlobalaccountTrustConfigurationArgs{\n\t\t\tOrigin: \"sap.default\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.LookupGlobalaccountTrustConfiguration(ctx, \u0026btp.LookupGlobalaccountTrustConfigurationArgs{\n\t\t\tOrigin: \"terraformint-platform\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetGlobalaccountTrustConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default = BtpFunctions.getGlobalaccountTrustConfiguration(GetGlobalaccountTrustConfigurationArgs.builder()\n            .origin(\"sap.default\")\n            .build());\n\n        final var custom = BtpFunctions.getGlobalaccountTrustConfiguration(GetGlobalaccountTrustConfigurationArgs.builder()\n            .origin(\"terraformint-platform\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  default:\n    fn::invoke:\n      Function: btp:getGlobalaccountTrustConfiguration\n      Arguments:\n        origin: sap.default\n  custom:\n    fn::invoke:\n      Function: btp:getGlobalaccountTrustConfiguration\n      Arguments:\n        origin: terraformint-platform\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGlobalaccountTrustConfiguration.\n",
                "properties": {
                    "origin": {
                        "type": "string",
                        "description": "The origin of the identity provider.\n"
                    }
                },
                "type": "object",
                "required": [
                    "origin"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGlobalaccountTrustConfiguration.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the trust configuration.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The tenant's domain which should be used for user logon.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The origin of the identity provider.\n",
                        "deprecationMessage": "Use the `origin` attribute instead"
                    },
                    "identityProvider": {
                        "type": "string",
                        "description": "The name of the Identity Authentication tenant the global account is connected to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the trust configuration.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The origin of the identity provider.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol used to establish trust with the identity provider.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the trust configuration can be modified.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Shows whether the identity provider is currently 'active' or 'inactive'.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The trust type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "domain",
                    "id",
                    "identityProvider",
                    "name",
                    "origin",
                    "protocol",
                    "readOnly",
                    "status",
                    "type"
                ]
            }
        },
        "btp:index/getGlobalaccountTrustConfigurations:getGlobalaccountTrustConfigurations": {
            "description": "List all trust configurations that are configured for your global account.\n\n__Tip:__\nYou must be viewer or administrator of the global account.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getGlobalaccountTrustConfigurations({});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_globalaccount_trust_configurations()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetGlobalaccountTrustConfigurations.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetGlobalaccountTrustConfigurations(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getGlobalaccountTrustConfigurations();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getGlobalaccountTrustConfigurations\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getGlobalaccountTrustConfigurations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the global account.\n",
                        "deprecationMessage": "Use the `btp_globalaccount` datasource instead"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getGlobalaccountTrustConfigurationsValue:getGlobalaccountTrustConfigurationsValue"
                        },
                        "description": "The trust configurations associated with the global account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getGlobalaccountUser:getGlobalaccountUser": {
            "description": "Shows registered users in a global account. Users belong to one of the identity providers (IdPs) of the global account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst someone = btp.getGlobalaccountUser({\n    userName: \"john.doe@mycompany.com\",\n});\nconst someoneElse = btp.getGlobalaccountUser({\n    origin: \"my-custom-idp\",\n    userName: \"jane.doe@mycompany.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nsomeone = btp.get_globalaccount_user(user_name=\"john.doe@mycompany.com\")\nsomeone_else = btp.get_globalaccount_user(origin=\"my-custom-idp\",\n    user_name=\"jane.doe@mycompany.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var someone = Btp.GetGlobalaccountUser.Invoke(new()\n    {\n        UserName = \"john.doe@mycompany.com\",\n    });\n\n    var someoneElse = Btp.GetGlobalaccountUser.Invoke(new()\n    {\n        Origin = \"my-custom-idp\",\n        UserName = \"jane.doe@mycompany.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetGlobalaccountUser(ctx, \u0026btp.GetGlobalaccountUserArgs{\n\t\t\tUserName: \"john.doe@mycompany.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetGlobalaccountUser(ctx, \u0026btp.GetGlobalaccountUserArgs{\n\t\t\tOrigin:   pulumi.StringRef(\"my-custom-idp\"),\n\t\t\tUserName: \"jane.doe@mycompany.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetGlobalaccountUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var someone = BtpFunctions.getGlobalaccountUser(GetGlobalaccountUserArgs.builder()\n            .userName(\"john.doe@mycompany.com\")\n            .build());\n\n        final var someoneElse = BtpFunctions.getGlobalaccountUser(GetGlobalaccountUserArgs.builder()\n            .origin(\"my-custom-idp\")\n            .userName(\"jane.doe@mycompany.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  someone:\n    fn::invoke:\n      Function: btp:getGlobalaccountUser\n      Arguments:\n        userName: john.doe@mycompany.com\n  someoneElse:\n    fn::invoke:\n      Function: btp:getGlobalaccountUser\n      Arguments:\n        origin: my-custom-idp\n        userName: jane.doe@mycompany.com\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGlobalaccountUser.\n",
                "properties": {
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The username of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGlobalaccountUser.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Shows if the account is still in use.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The e-mail address of the user.\n"
                    },
                    "familyName": {
                        "type": "string",
                        "description": "The last name of the user.\n"
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The given name of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the user.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'\n"
                    },
                    "roleCollections": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The set of role collections, which are assigned to the user.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The username of the user.\n"
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "The verification status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "active",
                    "email",
                    "familyName",
                    "givenName",
                    "id",
                    "origin",
                    "roleCollections",
                    "userName",
                    "verified"
                ]
            }
        },
        "btp:index/getGlobalaccountUsers:getGlobalaccountUsers": {
            "description": "Lists all users.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/user-and-member-management\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst defaultidp = btp.getGlobalaccountUsers({});\nconst mycustomidp = btp.getGlobalaccountUsers({\n    origin: \"my-custom-idp\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\ndefaultidp = btp.get_globalaccount_users()\nmycustomidp = btp.get_globalaccount_users(origin=\"my-custom-idp\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var defaultidp = Btp.GetGlobalaccountUsers.Invoke();\n\n    var mycustomidp = Btp.GetGlobalaccountUsers.Invoke(new()\n    {\n        Origin = \"my-custom-idp\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetGlobalaccountUsers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetGlobalaccountUsers(ctx, \u0026btp.GetGlobalaccountUsersArgs{\n\t\t\tOrigin: pulumi.StringRef(\"my-custom-idp\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetGlobalaccountUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var defaultidp = BtpFunctions.getGlobalaccountUsers();\n\n        final var mycustomidp = BtpFunctions.getGlobalaccountUsers(GetGlobalaccountUsersArgs.builder()\n            .origin(\"my-custom-idp\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  defaultidp:\n    fn::invoke:\n      Function: btp:getGlobalaccountUsers\n      Arguments: {}\n  mycustomidp:\n    fn::invoke:\n      Function: btp:getGlobalaccountUsers\n      Arguments:\n        origin: my-custom-idp\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getGlobalaccountUsers.\n",
                "properties": {
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getGlobalaccountUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the global account.\n",
                        "deprecationMessage": "Use the `btp_globalaccount` datasource instead"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of users assigned to the global account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "origin",
                    "values"
                ]
            }
        },
        "btp:index/getRegions:getRegions": {
            "description": "Gets all the available regions for a global account.\n\n__Tip:__\nYou must be assigned to the global account admin or viewer role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getRegions({});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_regions()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetRegions.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetRegions(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getRegions();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getRegions\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getRegions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the global account.\n",
                        "deprecationMessage": "Use the `btp_globalaccount` datasource instead"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getRegionsValue:getRegionsValue"
                        },
                        "description": "The regions supported by this global account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccount:getSubaccount": {
            "description": "Gets details about a subaccount.\n\n__Tip:__\nYou must be assigned to the admin or viewer role of the global account, directory, or subaccount.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst myAccount = btp.getSubaccount({\n    id: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nmy_account = btp.get_subaccount(id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAccount = Btp.GetSubaccount.Invoke(new()\n    {\n        Id = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupSubaccount(ctx, \u0026btp.LookupSubaccountArgs{\n\t\t\tId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = BtpFunctions.getSubaccount(GetSubaccountArgs.builder()\n            .id(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myAccount:\n    fn::invoke:\n      Function: btp:getSubaccount\n      Arguments:\n        id: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccount.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccount.\n",
                "properties": {
                    "betaEnabled": {
                        "type": "boolean",
                        "description": "Shows whether the subaccount can use beta services and applications.\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The details of the user that created the subaccount.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the subaccount.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Set of words or phrases assigned to the subaccount.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A descriptive name of the subaccount for customer-facing UIs.\n"
                    },
                    "parentFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The features of parent entity of the subaccount.\n"
                    },
                    "parentId": {
                        "type": "string",
                        "description": "The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which the subaccount was created.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the subaccount. Possible values are:\n"
                    },
                    "subdomain": {
                        "type": "string"
                    },
                    "usage": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "betaEnabled",
                    "createdBy",
                    "createdDate",
                    "description",
                    "id",
                    "labels",
                    "lastModified",
                    "name",
                    "parentFeatures",
                    "parentId",
                    "region",
                    "state",
                    "subdomain",
                    "usage"
                ]
            }
        },
        "btp:index/getSubaccountApp:getSubaccountApp": {
            "description": "Gets details about a specific app.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst byId = btp.getSubaccountApp({\n    id: \"xsuaa!t1\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nby_id = btp.get_subaccount_app(id=\"xsuaa!t1\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var byId = Btp.GetSubaccountApp.Invoke(new()\n    {\n        Id = \"xsuaa!t1\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountApp(ctx, \u0026btp.GetSubaccountAppArgs{\n\t\t\tId:           \"xsuaa!t1\",\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountAppArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var byId = BtpFunctions.getSubaccountApp(GetSubaccountAppArgs.builder()\n            .id(\"xsuaa!t1\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  byId:\n    fn::invoke:\n      Function: btp:getSubaccountApp\n      Arguments:\n        id: xsuaa!t1\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountApp.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountApp.\n",
                "properties": {
                    "authorities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the app.\n"
                    },
                    "foreignScopeReferences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.\n"
                    },
                    "masterAppId": {
                        "type": "string"
                    },
                    "oauth2Configuration": {
                        "$ref": "#/types/btp:index/getSubaccountAppOauth2Configuration:getSubaccountAppOauth2Configuration"
                    },
                    "orgId": {
                        "type": "string"
                    },
                    "planId": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "serviceinstanceId": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "tenantMode": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "xsappname": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authorities",
                    "description",
                    "foreignScopeReferences",
                    "id",
                    "masterAppId",
                    "oauth2Configuration",
                    "orgId",
                    "planId",
                    "planName",
                    "serviceinstanceId",
                    "spaceId",
                    "subaccountId",
                    "tenantMode",
                    "username",
                    "xsappname"
                ]
            }
        },
        "btp:index/getSubaccountApps:getSubaccountApps": {
            "description": "Lists all apps in a subaccount.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountApps({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_apps(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountApps.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountApps(ctx, \u0026btp.GetSubaccountAppsArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountAppsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountApps(GetSubaccountAppsArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountApps\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountApps.\n",
                "properties": {
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountApps.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountAppsValue:getSubaccountAppsValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountEntitlements:getSubaccountEntitlements": {
            "description": "Gets all the entitlements and quota assignments for a subaccount.\n\nTo get all entitlements and quota assigned to a specific subaccount:\n* You must be assigned to either the subaccount admin or subaccount viewer role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountEntitlements({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_entitlements(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountEntitlements.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountEntitlements(ctx, \u0026btp.GetSubaccountEntitlementsArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountEntitlementsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountEntitlements(GetSubaccountEntitlementsArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountEntitlements\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountEntitlements.\n",
                "properties": {
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountEntitlements.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/btp:index/getSubaccountEntitlementsValues:getSubaccountEntitlementsValues"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountEnvironmentInstance:getSubaccountEnvironmentInstance": {
            "description": "Gets the details of a specific environment instance in a subaccount.\n\n__Tip:__\nYou must be assigned to the subaccount admin or viewer role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst cloudfoundry = btp.getSubaccountEnvironmentInstance({\n    id: \"6D079379-6442-464A-90EB-65FAC05B176F\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\ncloudfoundry = btp.get_subaccount_environment_instance(id=\"6D079379-6442-464A-90EB-65FAC05B176F\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cloudfoundry = Btp.GetSubaccountEnvironmentInstance.Invoke(new()\n    {\n        Id = \"6D079379-6442-464A-90EB-65FAC05B176F\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupSubaccountEnvironmentInstance(ctx, \u0026btp.LookupSubaccountEnvironmentInstanceArgs{\n\t\t\tId:           \"6D079379-6442-464A-90EB-65FAC05B176F\",\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountEnvironmentInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var cloudfoundry = BtpFunctions.getSubaccountEnvironmentInstance(GetSubaccountEnvironmentInstanceArgs.builder()\n            .id(\"6D079379-6442-464A-90EB-65FAC05B176F\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  cloudfoundry:\n    fn::invoke:\n      Function: btp:getSubaccountEnvironmentInstance\n      Arguments:\n        id: 6D079379-6442-464A-90EB-65FAC05B176F\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountEnvironmentInstance.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the environment instance.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountEnvironmentInstance.\n",
                "properties": {
                    "brokerId": {
                        "type": "string",
                        "description": "The ID of the associated environment broker.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "customLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "dashboardUrl": {
                        "type": "string",
                        "description": "The URL of the service dashboard, which is a web-based management user interface for the service instances.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the environment instance.\n"
                    },
                    "environmentType": {
                        "type": "string",
                        "description": "The type of the environment instance that is used.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the environment instance.\n"
                    },
                    "labels": {
                        "type": "string",
                        "description": "The set of words or phrases assigned to the environment instance.\n"
                    },
                    "landscapeLabel": {
                        "type": "string",
                        "description": "The name of the landscape within the logged-in region on which the environment instance is created.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the environment instance.\n"
                    },
                    "operation": {
                        "type": "string",
                        "description": "An identifier that represents the last operation. This ID is returned by the environment brokers.\n"
                    },
                    "parameters": {
                        "type": "string",
                        "description": "The configuration parameters for the environment instance.\n"
                    },
                    "planId": {
                        "type": "string",
                        "description": "The ID of the service plan for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "planName": {
                        "type": "string",
                        "description": "The name of the service plan for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "platformId": {
                        "type": "string",
                        "description": "The ID of the platform for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "serviceId": {
                        "type": "string",
                        "description": "The ID of the service for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The name of the service for the environment instance in the corresponding service broker's catalog.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the environment instance. Possible values are:\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "brokerId",
                    "createdDate",
                    "customLabels",
                    "dashboardUrl",
                    "description",
                    "environmentType",
                    "id",
                    "labels",
                    "landscapeLabel",
                    "lastModified",
                    "name",
                    "operation",
                    "parameters",
                    "planId",
                    "planName",
                    "platformId",
                    "serviceId",
                    "serviceName",
                    "state",
                    "subaccountId",
                    "tenantId",
                    "type"
                ]
            }
        },
        "btp:index/getSubaccountEnvironmentInstances:getSubaccountEnvironmentInstances": {
            "description": "Gets all the environment instances in a subaccount.\n\n__Tip:__\nYou must be assigned to the subaccount admin or viewer role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountEnvironmentInstances({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_environment_instances(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountEnvironmentInstances.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountEnvironmentInstances(ctx, \u0026btp.GetSubaccountEnvironmentInstancesArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountEnvironmentInstancesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountEnvironmentInstances(GetSubaccountEnvironmentInstancesArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountEnvironmentInstances\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountEnvironmentInstances.\n",
                "properties": {
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountEnvironmentInstances.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountEnvironmentInstancesValue:getSubaccountEnvironmentInstancesValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountEnvironments:getSubaccountEnvironments": {
            "description": "Gets all the available environments for a subaccount.\n\nThis includes the environments, such as Cloud Foundry, which are available by default to all subaccounts, and those restricted environments, such as Kyma, which are offered in the product catalog as service entitlements and whose plans have already been assigned by a global account admin to the subaccount.\n\n__Tip:__\nYou must be assigned to the subaccount admin or viewer role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountEnvironments({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_environments(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountEnvironments.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountEnvironments(ctx, \u0026btp.GetSubaccountEnvironmentsArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountEnvironmentsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountEnvironments(GetSubaccountEnvironmentsArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountEnvironments\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountEnvironments.\n",
                "properties": {
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountEnvironments.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountEnvironmentsValue:getSubaccountEnvironmentsValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountLabels:getSubaccountLabels": {
            "description": "Gets all the user-defined labels that are currently assigned to a specific subaccount.\n\n__Tip:__\nYou must be assigned to the global account admin or viewer role. These roles assignments are not needed for directories you are the directory admin.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/account-model\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountLabels({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_labels(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountLabels.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountLabels(ctx, \u0026btp.GetSubaccountLabelsArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountLabelsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountLabels(GetSubaccountLabelsArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountLabels\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountLabels.\n",
                "properties": {
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountLabels.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Contains the label values\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountRole:getSubaccountRole": {
            "description": "Gets details about a specific subaccount role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst userRoleAuditor = btp.getSubaccountRole({\n    appId: \"xsuaa!t1\",\n    name: \"User and Role Auditor\",\n    roleTemplateName: \"xsuaa_auditor\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nuser_role_auditor = btp.get_subaccount_role(app_id=\"xsuaa!t1\",\n    name=\"User and Role Auditor\",\n    role_template_name=\"xsuaa_auditor\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var userRoleAuditor = Btp.GetSubaccountRole.Invoke(new()\n    {\n        AppId = \"xsuaa!t1\",\n        Name = \"User and Role Auditor\",\n        RoleTemplateName = \"xsuaa_auditor\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountRole(ctx, \u0026btp.GetSubaccountRoleArgs{\n\t\t\tAppId:            \"xsuaa!t1\",\n\t\t\tName:             \"User and Role Auditor\",\n\t\t\tRoleTemplateName: \"xsuaa_auditor\",\n\t\t\tSubaccountId:     \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var userRoleAuditor = BtpFunctions.getSubaccountRole(GetSubaccountRoleArgs.builder()\n            .appId(\"xsuaa!t1\")\n            .name(\"User and Role Auditor\")\n            .roleTemplateName(\"xsuaa_auditor\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  userRoleAuditor:\n    fn::invoke:\n      Function: btp:getSubaccountRole\n      Arguments:\n        appId: xsuaa!t1\n        name: User and Role Auditor\n        roleTemplateName: xsuaa_auditor\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountRole.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the xsuaa application.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    },
                    "roleTemplateName": {
                        "type": "string",
                        "description": "The name of the role template.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId",
                    "name",
                    "roleTemplateName",
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountRole.\n",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID of the xsuaa application.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the role.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the role can be modified or not.\n"
                    },
                    "roleTemplateName": {
                        "type": "string",
                        "description": "The name of the role template.\n"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountRoleScope:getSubaccountRoleScope"
                        },
                        "description": "The scopes available with this role.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appId",
                    "description",
                    "id",
                    "name",
                    "readOnly",
                    "roleTemplateName",
                    "scopes",
                    "subaccountId"
                ]
            }
        },
        "btp:index/getSubaccountRoleCollection:getSubaccountRoleCollection": {
            "description": "Gets details about a specific subaccount role collection.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst subaccountAdmin = btp.getSubaccountRoleCollection({\n    name: \"Subaccount Administrator\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nsubaccount_admin = btp.get_subaccount_role_collection(name=\"Subaccount Administrator\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var subaccountAdmin = Btp.GetSubaccountRoleCollection.Invoke(new()\n    {\n        Name = \"Subaccount Administrator\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupSubaccountRoleCollection(ctx, \u0026btp.LookupSubaccountRoleCollectionArgs{\n\t\t\tName:         \"Subaccount Administrator\",\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountRoleCollectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var subaccountAdmin = BtpFunctions.getSubaccountRoleCollection(GetSubaccountRoleCollectionArgs.builder()\n            .name(\"Subaccount Administrator\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  subaccountAdmin:\n    fn::invoke:\n      Function: btp:getSubaccountRoleCollection\n      Arguments:\n        name: Subaccount Administrator\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountRoleCollection.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountRoleCollection.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The description of the role collection.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the role collection.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the role collection is read-only.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountRoleCollectionRole:getSubaccountRoleCollectionRole"
                        }
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "name",
                    "readOnly",
                    "roles",
                    "subaccountId"
                ]
            }
        },
        "btp:index/getSubaccountRoleCollections:getSubaccountRoleCollections": {
            "description": "Gets all role collections.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountRoleCollections({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_role_collections(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountRoleCollections.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountRoleCollections(ctx, \u0026btp.GetSubaccountRoleCollectionsArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountRoleCollectionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountRoleCollections(GetSubaccountRoleCollectionsArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountRoleCollections\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountRoleCollections.\n",
                "properties": {
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountRoleCollections.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountRoleCollectionsValue:getSubaccountRoleCollectionsValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountRoles:getSubaccountRoles": {
            "description": "Gets all roles.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountRoles({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_roles(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountRoles.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountRoles(ctx, \u0026btp.GetSubaccountRolesArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountRolesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountRoles(GetSubaccountRolesArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountRoles\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountRoles.\n",
                "properties": {
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountRoles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountRolesValue:getSubaccountRolesValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountServiceBinding:getSubaccountServiceBinding": {
            "description": "Gets details about a specific service binding, such as its access details. They are included in its 'credentials' property, and typically include access URLs and credentials.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst byId = btp.getSubaccountServiceBinding({\n    id: \"c2d02852-1678-4c1e-b546-74d5274f1522\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst byName = btp.getSubaccountServiceBinding({\n    name: \"hyperspace-2022-10\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nby_id = btp.get_subaccount_service_binding(id=\"c2d02852-1678-4c1e-b546-74d5274f1522\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nby_name = btp.get_subaccount_service_binding(name=\"hyperspace-2022-10\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var byId = Btp.GetSubaccountServiceBinding.Invoke(new()\n    {\n        Id = \"c2d02852-1678-4c1e-b546-74d5274f1522\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var byName = Btp.GetSubaccountServiceBinding.Invoke(new()\n    {\n        Name = \"hyperspace-2022-10\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupSubaccountServiceBinding(ctx, \u0026btp.LookupSubaccountServiceBindingArgs{\n\t\t\tId:           pulumi.StringRef(\"c2d02852-1678-4c1e-b546-74d5274f1522\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.LookupSubaccountServiceBinding(ctx, \u0026btp.LookupSubaccountServiceBindingArgs{\n\t\t\tName:         pulumi.StringRef(\"hyperspace-2022-10\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountServiceBindingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var byId = BtpFunctions.getSubaccountServiceBinding(GetSubaccountServiceBindingArgs.builder()\n            .id(\"c2d02852-1678-4c1e-b546-74d5274f1522\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var byName = BtpFunctions.getSubaccountServiceBinding(GetSubaccountServiceBindingArgs.builder()\n            .name(\"hyperspace-2022-10\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  byId:\n    fn::invoke:\n      Function: btp:getSubaccountServiceBinding\n      Arguments:\n        id: c2d02852-1678-4c1e-b546-74d5274f1522\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  byName:\n    fn::invoke:\n      Function: btp:getSubaccountServiceBinding\n      Arguments:\n        name: hyperspace-2022-10\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountServiceBinding.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the service binding.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service binding.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountServiceBinding.\n",
                "properties": {
                    "bindResource": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Contains the resources associated with the binding.\n"
                    },
                    "context": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Contextual data for the resource.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "credentials": {
                        "type": "string",
                        "description": "The credentials to access the binding.\n",
                        "secret": true
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the service binding.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "The set of words or phrases assigned to the binding.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service binding.\n"
                    },
                    "parameters": {
                        "type": "string",
                        "description": "The parameters of the service binding as a valid JSON object.\n"
                    },
                    "ready": {
                        "type": "boolean",
                        "description": "Shows whether the service binding is ready.\n"
                    },
                    "serviceInstanceId": {
                        "type": "string",
                        "description": "The ID of the service instance associated with the binding.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the service binding. Possible values are:\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bindResource",
                    "context",
                    "createdDate",
                    "credentials",
                    "id",
                    "labels",
                    "lastModified",
                    "name",
                    "parameters",
                    "ready",
                    "serviceInstanceId",
                    "state",
                    "subaccountId"
                ]
            }
        },
        "btp:index/getSubaccountServiceBindings:getSubaccountServiceBindings": {
            "description": "Lists all service bindings in a subaccount, i.e. the access details to consume a service.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountServiceBindings({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst labeled = btp.getSubaccountServiceBindings({\n    labelsFilter: \"subaccount_id eq '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f'\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_service_bindings(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nlabeled = btp.get_subaccount_service_bindings(labels_filter=\"subaccount_id eq '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f'\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountServiceBindings.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var labeled = Btp.GetSubaccountServiceBindings.Invoke(new()\n    {\n        LabelsFilter = \"subaccount_id eq '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f'\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountServiceBindings(ctx, \u0026btp.GetSubaccountServiceBindingsArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServiceBindings(ctx, \u0026btp.GetSubaccountServiceBindingsArgs{\n\t\t\tLabelsFilter: pulumi.StringRef(\"subaccount_id eq '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f'\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountServiceBindingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountServiceBindings(GetSubaccountServiceBindingsArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var labeled = BtpFunctions.getSubaccountServiceBindings(GetSubaccountServiceBindingsArgs.builder()\n            .labelsFilter(\"subaccount_id eq '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f'\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountServiceBindings\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  labeled:\n    fn::invoke:\n      Function: btp:getSubaccountServiceBindings\n      Arguments:\n        labelsFilter: subaccount_id eq '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f'\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountServiceBindings.\n",
                "properties": {
                    "fieldsFilter": {
                        "type": "string",
                        "description": "Filters the service bindings based on the field query.\n"
                    },
                    "labelsFilter": {
                        "type": "string",
                        "description": "Filters the service binding based on the label query.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountServiceBindings.\n",
                "properties": {
                    "fieldsFilter": {
                        "type": "string",
                        "description": "Filters the service bindings based on the field query.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "labelsFilter": {
                        "type": "string",
                        "description": "Filters the service binding based on the label query.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountServiceBindingsValue:getSubaccountServiceBindingsValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountServiceInstance:getSubaccountServiceInstance": {
            "description": "Gets details about a specific provisioned service instance, such as its name, id,  platform to which it belongs, and the last operation performed.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst byId = btp.getSubaccountServiceInstance({\n    id: \"bc8a216f-1184-49dc-b4b4-17cfe2828965\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst byName = btp.getSubaccountServiceInstance({\n    name: \"my-xsuaa-application\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nby_id = btp.get_subaccount_service_instance(id=\"bc8a216f-1184-49dc-b4b4-17cfe2828965\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nby_name = btp.get_subaccount_service_instance(name=\"my-xsuaa-application\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var byId = Btp.GetSubaccountServiceInstance.Invoke(new()\n    {\n        Id = \"bc8a216f-1184-49dc-b4b4-17cfe2828965\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var byName = Btp.GetSubaccountServiceInstance.Invoke(new()\n    {\n        Name = \"my-xsuaa-application\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupSubaccountServiceInstance(ctx, \u0026btp.LookupSubaccountServiceInstanceArgs{\n\t\t\tId:           pulumi.StringRef(\"bc8a216f-1184-49dc-b4b4-17cfe2828965\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.LookupSubaccountServiceInstance(ctx, \u0026btp.LookupSubaccountServiceInstanceArgs{\n\t\t\tName:         pulumi.StringRef(\"my-xsuaa-application\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountServiceInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var byId = BtpFunctions.getSubaccountServiceInstance(GetSubaccountServiceInstanceArgs.builder()\n            .id(\"bc8a216f-1184-49dc-b4b4-17cfe2828965\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var byName = BtpFunctions.getSubaccountServiceInstance(GetSubaccountServiceInstanceArgs.builder()\n            .name(\"my-xsuaa-application\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  byId:\n    fn::invoke:\n      Function: btp:getSubaccountServiceInstance\n      Arguments:\n        id: bc8a216f-1184-49dc-b4b4-17cfe2828965\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  byName:\n    fn::invoke:\n      Function: btp:getSubaccountServiceInstance\n      Arguments:\n        name: my-xsuaa-application\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountServiceInstance.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the service instance.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service instance.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountServiceInstance.\n",
                "properties": {
                    "context": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Contextual data for the resource.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the service instance.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "The set of words or phrases assigned to the service instance.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service instance.\n"
                    },
                    "parameters": {
                        "type": "string",
                        "description": "The configuration parameters for the service instance.\n"
                    },
                    "platformId": {
                        "type": "string",
                        "description": "The platform ID.\n"
                    },
                    "ready": {
                        "type": "boolean"
                    },
                    "referencedInstanceId": {
                        "type": "string",
                        "description": "The ID of the instance to which the service instance refers.\n"
                    },
                    "serviceplanId": {
                        "type": "string",
                        "description": "The ID of the service plan.\n"
                    },
                    "shared": {
                        "type": "boolean",
                        "description": "Shows whether the service instance is shared.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the service instance.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "usable": {
                        "type": "boolean",
                        "description": "Shows whether the resource can be used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "context",
                    "createdDate",
                    "id",
                    "labels",
                    "lastModified",
                    "name",
                    "parameters",
                    "platformId",
                    "ready",
                    "referencedInstanceId",
                    "serviceplanId",
                    "shared",
                    "state",
                    "subaccountId",
                    "usable"
                ]
            }
        },
        "btp:index/getSubaccountServiceInstances:getSubaccountServiceInstances": {
            "description": "Lists all service instances in a subaccount.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountServiceInstances({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst ready = btp.getSubaccountServiceInstances({\n    fieldsFilter: \"ready eq 'true'\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst byLabel = btp.getSubaccountServiceInstances({\n    labelsFilter: \"labelname eq 'labelvalue'\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_service_instances(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nready = btp.get_subaccount_service_instances(fields_filter=\"ready eq 'true'\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nby_label = btp.get_subaccount_service_instances(labels_filter=\"labelname eq 'labelvalue'\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountServiceInstances.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var ready = Btp.GetSubaccountServiceInstances.Invoke(new()\n    {\n        FieldsFilter = \"ready eq 'true'\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var byLabel = Btp.GetSubaccountServiceInstances.Invoke(new()\n    {\n        LabelsFilter = \"labelname eq 'labelvalue'\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountServiceInstances(ctx, \u0026btp.GetSubaccountServiceInstancesArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServiceInstances(ctx, \u0026btp.GetSubaccountServiceInstancesArgs{\n\t\t\tFieldsFilter: pulumi.StringRef(\"ready eq 'true'\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServiceInstances(ctx, \u0026btp.GetSubaccountServiceInstancesArgs{\n\t\t\tLabelsFilter: pulumi.StringRef(\"labelname eq 'labelvalue'\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountServiceInstancesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountServiceInstances(GetSubaccountServiceInstancesArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var ready = BtpFunctions.getSubaccountServiceInstances(GetSubaccountServiceInstancesArgs.builder()\n            .fieldsFilter(\"ready eq 'true'\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var byLabel = BtpFunctions.getSubaccountServiceInstances(GetSubaccountServiceInstancesArgs.builder()\n            .labelsFilter(\"labelname eq 'labelvalue'\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountServiceInstances\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  ready:\n    fn::invoke:\n      Function: btp:getSubaccountServiceInstances\n      Arguments:\n        fieldsFilter: ready eq 'true'\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  byLabel:\n    fn::invoke:\n      Function: btp:getSubaccountServiceInstances\n      Arguments:\n        labelsFilter: labelname eq 'labelvalue'\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountServiceInstances.\n",
                "properties": {
                    "fieldsFilter": {
                        "type": "string",
                        "description": "Filters the instances based on their fields. For example, to list all instances that are usable, use \"usable eq 'true'\".\n"
                    },
                    "labelsFilter": {
                        "type": "string",
                        "description": "Filters the instances based on the label query.  For example, to list all instances that are available in a production landscape, use \"landscape eq 'production'\".\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountServiceInstances.\n",
                "properties": {
                    "fieldsFilter": {
                        "type": "string",
                        "description": "Filters the instances based on their fields. For example, to list all instances that are usable, use \"usable eq 'true'\".\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "labelsFilter": {
                        "type": "string",
                        "description": "Filters the instances based on the label query.  For example, to list all instances that are available in a production landscape, use \"landscape eq 'production'\".\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountServiceInstancesValue:getSubaccountServiceInstancesValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountServiceOffering:getSubaccountServiceOffering": {
            "description": "Gets details about a specific service offering such as its ID, name, description, metadata, and the associated service brokers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst byId = btp.getSubaccountServiceOffering({\n    id: \"4e953cf1-7eda-4ebb-a58c-02c6ebfe45fb\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst byName = btp.getSubaccountServiceOffering({\n    name: \"auditlog-management\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nby_id = btp.get_subaccount_service_offering(id=\"4e953cf1-7eda-4ebb-a58c-02c6ebfe45fb\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nby_name = btp.get_subaccount_service_offering(name=\"auditlog-management\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var byId = Btp.GetSubaccountServiceOffering.Invoke(new()\n    {\n        Id = \"4e953cf1-7eda-4ebb-a58c-02c6ebfe45fb\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var byName = Btp.GetSubaccountServiceOffering.Invoke(new()\n    {\n        Name = \"auditlog-management\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountServiceOffering(ctx, \u0026btp.GetSubaccountServiceOfferingArgs{\n\t\t\tId:           pulumi.StringRef(\"4e953cf1-7eda-4ebb-a58c-02c6ebfe45fb\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServiceOffering(ctx, \u0026btp.GetSubaccountServiceOfferingArgs{\n\t\t\tName:         pulumi.StringRef(\"auditlog-management\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountServiceOfferingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var byId = BtpFunctions.getSubaccountServiceOffering(GetSubaccountServiceOfferingArgs.builder()\n            .id(\"4e953cf1-7eda-4ebb-a58c-02c6ebfe45fb\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var byName = BtpFunctions.getSubaccountServiceOffering(GetSubaccountServiceOfferingArgs.builder()\n            .name(\"auditlog-management\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  byId:\n    fn::invoke:\n      Function: btp:getSubaccountServiceOffering\n      Arguments:\n        id: 4e953cf1-7eda-4ebb-a58c-02c6ebfe45fb\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  byName:\n    fn::invoke:\n      Function: btp:getSubaccountServiceOffering\n      Arguments:\n        name: auditlog-management\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountServiceOffering.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the service offering.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service offering.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountServiceOffering.\n",
                "properties": {
                    "allowContextUpdates": {
                        "type": "boolean",
                        "description": "Shows whether the context for the service offering can be updated.\n"
                    },
                    "bindable": {
                        "type": "boolean",
                        "description": "Shows whether the service offering is bindable.\n"
                    },
                    "bindingsRetrievable": {
                        "type": "boolean",
                        "description": "Shows whether the bindings associated with the service offering can be retrieved.\n"
                    },
                    "brokerId": {
                        "type": "string",
                        "description": "The ID of the broker that provides the service plan.\n"
                    },
                    "catalogId": {
                        "type": "string",
                        "description": "The ID of the service offering as provided by the catalog.\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "The catalog name of the service offering.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the service offering.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the service offering.\n"
                    },
                    "instancesRetrievable": {
                        "type": "boolean",
                        "description": "Shows whether the service instances associated with the service offering can be retrieved.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service offering.\n"
                    },
                    "planUpdateable": {
                        "type": "boolean",
                        "description": "Shows whether the offered plan can be updated.\n"
                    },
                    "ready": {
                        "type": "boolean",
                        "description": "Shows whether the service offering is ready to be advertised.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of tags for the service offering.\n"
                    }
                },
                "type": "object",
                "required": [
                    "allowContextUpdates",
                    "bindable",
                    "bindingsRetrievable",
                    "brokerId",
                    "catalogId",
                    "catalogName",
                    "createdDate",
                    "description",
                    "id",
                    "instancesRetrievable",
                    "lastModified",
                    "name",
                    "planUpdateable",
                    "ready",
                    "subaccountId",
                    "tags"
                ]
            }
        },
        "btp:index/getSubaccountServiceOfferings:getSubaccountServiceOfferings": {
            "description": "Lists the services your subaccount is entitled to use in your runtime environment.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountServiceOfferings({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst sapbtp = btp.getSubaccountServiceOfferings({\n    environment: \"sapbtp\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst k8s = btp.getSubaccountServiceOfferings({\n    environment: \"kubernetes\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst labeled = btp.getSubaccountServiceOfferings({\n    labelsFilter: \"a_label eq 'label-value'\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_service_offerings(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nsapbtp = btp.get_subaccount_service_offerings(environment=\"sapbtp\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nk8s = btp.get_subaccount_service_offerings(environment=\"kubernetes\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nlabeled = btp.get_subaccount_service_offerings(labels_filter=\"a_label eq 'label-value'\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountServiceOfferings.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var sapbtp = Btp.GetSubaccountServiceOfferings.Invoke(new()\n    {\n        Environment = \"sapbtp\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var k8s = Btp.GetSubaccountServiceOfferings.Invoke(new()\n    {\n        Environment = \"kubernetes\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var labeled = Btp.GetSubaccountServiceOfferings.Invoke(new()\n    {\n        LabelsFilter = \"a_label eq 'label-value'\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountServiceOfferings(ctx, \u0026btp.GetSubaccountServiceOfferingsArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServiceOfferings(ctx, \u0026btp.GetSubaccountServiceOfferingsArgs{\n\t\t\tEnvironment:  pulumi.StringRef(\"sapbtp\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServiceOfferings(ctx, \u0026btp.GetSubaccountServiceOfferingsArgs{\n\t\t\tEnvironment:  pulumi.StringRef(\"kubernetes\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServiceOfferings(ctx, \u0026btp.GetSubaccountServiceOfferingsArgs{\n\t\t\tLabelsFilter: pulumi.StringRef(\"a_label eq 'label-value'\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountServiceOfferingsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountServiceOfferings(GetSubaccountServiceOfferingsArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var sapbtp = BtpFunctions.getSubaccountServiceOfferings(GetSubaccountServiceOfferingsArgs.builder()\n            .environment(\"sapbtp\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var k8s = BtpFunctions.getSubaccountServiceOfferings(GetSubaccountServiceOfferingsArgs.builder()\n            .environment(\"kubernetes\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var labeled = BtpFunctions.getSubaccountServiceOfferings(GetSubaccountServiceOfferingsArgs.builder()\n            .labelsFilter(\"a_label eq 'label-value'\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountServiceOfferings\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  sapbtp:\n    fn::invoke:\n      Function: btp:getSubaccountServiceOfferings\n      Arguments:\n        environment: sapbtp\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  k8s:\n    fn::invoke:\n      Function: btp:getSubaccountServiceOfferings\n      Arguments:\n        environment: kubernetes\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  labeled:\n    fn::invoke:\n      Function: btp:getSubaccountServiceOfferings\n      Arguments:\n        labelsFilter: a_label eq 'label-value'\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountServiceOfferings.\n",
                "properties": {
                    "environment": {
                        "type": "string",
                        "description": "Lists services to be consumed in a Cloud Foundry or Kubernetes-native way. Valid values are:\n"
                    },
                    "fieldsFilter": {
                        "type": "string"
                    },
                    "labelsFilter": {
                        "type": "string"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountServiceOfferings.\n",
                "properties": {
                    "environment": {
                        "type": "string",
                        "description": "Lists services to be consumed in a Cloud Foundry or Kubernetes-native way. Valid values are:\n"
                    },
                    "fieldsFilter": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "labelsFilter": {
                        "type": "string"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountServiceOfferingsValue:getSubaccountServiceOfferingsValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountServicePlan:getSubaccountServicePlan": {
            "description": "Gets details about a specific service plan such as its name, description, and metadata.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst byId = btp.getSubaccountServicePlan({\n    id: \"b50d1b0b-2059-4f21-a014-2ea87752eb48\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst byName = btp.getSubaccountServicePlan({\n    name: \"free\",\n    offeringName: \"alert-notification\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nby_id = btp.get_subaccount_service_plan(id=\"b50d1b0b-2059-4f21-a014-2ea87752eb48\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nby_name = btp.get_subaccount_service_plan(name=\"free\",\n    offering_name=\"alert-notification\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var byId = Btp.GetSubaccountServicePlan.Invoke(new()\n    {\n        Id = \"b50d1b0b-2059-4f21-a014-2ea87752eb48\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var byName = Btp.GetSubaccountServicePlan.Invoke(new()\n    {\n        Name = \"free\",\n        OfferingName = \"alert-notification\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountServicePlan(ctx, \u0026btp.GetSubaccountServicePlanArgs{\n\t\t\tId:           pulumi.StringRef(\"b50d1b0b-2059-4f21-a014-2ea87752eb48\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServicePlan(ctx, \u0026btp.GetSubaccountServicePlanArgs{\n\t\t\tName:         pulumi.StringRef(\"free\"),\n\t\t\tOfferingName: pulumi.StringRef(\"alert-notification\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountServicePlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var byId = BtpFunctions.getSubaccountServicePlan(GetSubaccountServicePlanArgs.builder()\n            .id(\"b50d1b0b-2059-4f21-a014-2ea87752eb48\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var byName = BtpFunctions.getSubaccountServicePlan(GetSubaccountServicePlanArgs.builder()\n            .name(\"free\")\n            .offeringName(\"alert-notification\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  byId:\n    fn::invoke:\n      Function: btp:getSubaccountServicePlan\n      Arguments:\n        id: b50d1b0b-2059-4f21-a014-2ea87752eb48\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  byName:\n    fn::invoke:\n      Function: btp:getSubaccountServicePlan\n      Arguments:\n        name: free\n        offeringName: alert-notification\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountServicePlan.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the service plan.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service plan.\n"
                    },
                    "offeringName": {
                        "type": "string",
                        "description": "The name of the service offering of the plan.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountServicePlan.\n",
                "properties": {
                    "bindable": {
                        "type": "boolean",
                        "description": "Shows whether the service plan is bindable.\n"
                    },
                    "catalogId": {
                        "type": "string",
                        "description": "The ID of the service plan in the service broker catalog.\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "The name of the associated service broker catalog.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the service plan.\n"
                    },
                    "free": {
                        "type": "boolean",
                        "description": "Shows whether the service plan is free.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the service plan.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the service plan.\n"
                    },
                    "offeringName": {
                        "type": "string",
                        "description": "The name of the service offering of the plan.\n"
                    },
                    "ready": {
                        "type": "boolean",
                        "description": "Shows whether the service plan is ready.\n"
                    },
                    "serviceofferingId": {
                        "type": "string",
                        "description": "The ID of the service offering.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bindable",
                    "catalogId",
                    "catalogName",
                    "createdDate",
                    "description",
                    "free",
                    "id",
                    "lastModified",
                    "name",
                    "offeringName",
                    "ready",
                    "serviceofferingId",
                    "subaccountId"
                ]
            }
        },
        "btp:index/getSubaccountServicePlans:getSubaccountServicePlans": {
            "description": "Lists the plans of services that your subaccount is entitled to use in your environment.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountServicePlans({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst sapbtp = btp.getSubaccountServicePlans({\n    environment: \"sapbtp\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst k8s = btp.getSubaccountServicePlans({\n    environment: \"kubernetes\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst labeled = btp.getSubaccountServicePlans({\n    labelsFilter: \"commercial_name eq 'application'\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_service_plans(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nsapbtp = btp.get_subaccount_service_plans(environment=\"sapbtp\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nk8s = btp.get_subaccount_service_plans(environment=\"kubernetes\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nlabeled = btp.get_subaccount_service_plans(labels_filter=\"commercial_name eq 'application'\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountServicePlans.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var sapbtp = Btp.GetSubaccountServicePlans.Invoke(new()\n    {\n        Environment = \"sapbtp\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var k8s = Btp.GetSubaccountServicePlans.Invoke(new()\n    {\n        Environment = \"kubernetes\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var labeled = Btp.GetSubaccountServicePlans.Invoke(new()\n    {\n        LabelsFilter = \"commercial_name eq 'application'\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountServicePlans(ctx, \u0026btp.GetSubaccountServicePlansArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServicePlans(ctx, \u0026btp.GetSubaccountServicePlansArgs{\n\t\t\tEnvironment:  pulumi.StringRef(\"sapbtp\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServicePlans(ctx, \u0026btp.GetSubaccountServicePlansArgs{\n\t\t\tEnvironment:  pulumi.StringRef(\"kubernetes\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountServicePlans(ctx, \u0026btp.GetSubaccountServicePlansArgs{\n\t\t\tLabelsFilter: pulumi.StringRef(\"commercial_name eq 'application'\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountServicePlansArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountServicePlans(GetSubaccountServicePlansArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var sapbtp = BtpFunctions.getSubaccountServicePlans(GetSubaccountServicePlansArgs.builder()\n            .environment(\"sapbtp\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var k8s = BtpFunctions.getSubaccountServicePlans(GetSubaccountServicePlansArgs.builder()\n            .environment(\"kubernetes\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var labeled = BtpFunctions.getSubaccountServicePlans(GetSubaccountServicePlansArgs.builder()\n            .labelsFilter(\"commercial_name eq 'application'\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountServicePlans\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  sapbtp:\n    fn::invoke:\n      Function: btp:getSubaccountServicePlans\n      Arguments:\n        environment: sapbtp\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  k8s:\n    fn::invoke:\n      Function: btp:getSubaccountServicePlans\n      Arguments:\n        environment: kubernetes\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  labeled:\n    fn::invoke:\n      Function: btp:getSubaccountServicePlans\n      Arguments:\n        labelsFilter: commercial_name eq 'application'\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountServicePlans.\n",
                "properties": {
                    "environment": {
                        "type": "string",
                        "description": "Filter the response on the environment (sapbtp, kubernetes, cloudfoundry).\n"
                    },
                    "fieldsFilter": {
                        "type": "string",
                        "description": "Filters the response based on the field query.\n"
                    },
                    "labelsFilter": {
                        "type": "string",
                        "description": "Filters the response based on the labels query.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountServicePlans.\n",
                "properties": {
                    "environment": {
                        "type": "string",
                        "description": "Filter the response on the environment (sapbtp, kubernetes, cloudfoundry).\n"
                    },
                    "fieldsFilter": {
                        "type": "string",
                        "description": "Filters the response based on the field query.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "labelsFilter": {
                        "type": "string",
                        "description": "Filters the response based on the labels query.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountServicePlansValue:getSubaccountServicePlansValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountSubscription:getSubaccountSubscription": {
            "description": "Gets details of a specific multitenant application to which a subaccount is entitled to subscribe. If this application is in a different global account than the current one, you need to specify its plan with '--plan'.\n\n__Tip:__\nYou must be assigned to the subaccount admin or viewer role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst contentAgentUiFree = btp.getSubaccountSubscription({\n    appName: \"content-agent-ui\",\n    planName: \"free\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\ncontent_agent_ui_free = btp.get_subaccount_subscription(app_name=\"content-agent-ui\",\n    plan_name=\"free\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var contentAgentUiFree = Btp.GetSubaccountSubscription.Invoke(new()\n    {\n        AppName = \"content-agent-ui\",\n        PlanName = \"free\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupSubaccountSubscription(ctx, \u0026btp.LookupSubaccountSubscriptionArgs{\n\t\t\tAppName:      \"content-agent-ui\",\n\t\t\tPlanName:     \"free\",\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var contentAgentUiFree = BtpFunctions.getSubaccountSubscription(GetSubaccountSubscriptionArgs.builder()\n            .appName(\"content-agent-ui\")\n            .planName(\"free\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  contentAgentUiFree:\n    fn::invoke:\n      Function: btp:getSubaccountSubscription\n      Arguments:\n        appName: content-agent-ui\n        planName: free\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountSubscription.\n",
                "properties": {
                    "appName": {
                        "type": "string",
                        "description": "The unique registration name of the deployed multitenant application as defined by the app developer.\n"
                    },
                    "planName": {
                        "type": "string",
                        "description": "The plan name of the application to which the consumer has subscribed.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appName",
                    "planName",
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountSubscription.\n",
                "properties": {
                    "additionalPlanFeatures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of features specific to this plan.\n"
                    },
                    "appId": {
                        "type": "string",
                        "description": "The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to a XSUAA service instance.\n"
                    },
                    "appName": {
                        "type": "string",
                        "description": "The unique registration name of the deployed multitenant application as defined by the app developer.\n"
                    },
                    "authenticationProvider": {
                        "type": "string",
                        "description": "The authentication provider of the multitenant application. * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level. * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs.\n"
                    },
                    "commercialAppName": {
                        "type": "string",
                        "description": "The commercial name of the deployed multitenant application as defined by the app developer.\n"
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "customerDeveloped": {
                        "type": "boolean",
                        "description": "Shows whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the multitenant application.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the application for customer-facing UIs.\n"
                    },
                    "formationSolutionName": {
                        "type": "string",
                        "description": "The name of the formations solution associated with the multitenant application.\n"
                    },
                    "globalaccountId": {
                        "type": "string",
                        "description": "The ID of the associated global account.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The technical ID generated by XSUAA for a multitenant application when a consumer subscribes to the application.\n"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "The set of words or phrases assigned to the multitenant application subscription.\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.\n"
                    },
                    "parameters": {
                        "type": "string",
                        "description": "The parameters of the subscription as a valid JSON object.\n"
                    },
                    "planName": {
                        "type": "string",
                        "description": "The plan name of the application to which the consumer has subscribed.\n"
                    },
                    "platformEntityId": {
                        "type": "string",
                        "description": "The ID of the landscape-specific environment.\n"
                    },
                    "quota": {
                        "type": "integer",
                        "description": "The total amount the subscribed subaccount is entitled to consume.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The subscription state of the subaccount regarding the multitenant application.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "subscribedSubaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount which is subscribed to the multitenant application.\n"
                    },
                    "subscribedTenantId": {
                        "type": "string",
                        "description": "The ID of the tenant which is subscribed to a multitenant application.\n"
                    },
                    "subscriptionUrl": {
                        "type": "string",
                        "description": "The URL for app users to launch the subscribed application.\n"
                    },
                    "supportsParametersUpdates": {
                        "type": "boolean",
                        "description": "Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters.\n"
                    },
                    "supportsPlanUpdates": {
                        "type": "boolean",
                        "description": "Specifies whether a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount.\n"
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "The tenant ID of the application provider.\n"
                    }
                },
                "type": "object",
                "required": [
                    "additionalPlanFeatures",
                    "appId",
                    "appName",
                    "authenticationProvider",
                    "category",
                    "commercialAppName",
                    "createdDate",
                    "customerDeveloped",
                    "description",
                    "displayName",
                    "formationSolutionName",
                    "globalaccountId",
                    "id",
                    "labels",
                    "lastModified",
                    "parameters",
                    "planName",
                    "platformEntityId",
                    "quota",
                    "state",
                    "subaccountId",
                    "subscribedSubaccountId",
                    "subscribedTenantId",
                    "subscriptionUrl",
                    "supportsParametersUpdates",
                    "supportsPlanUpdates",
                    "tenantId"
                ]
            }
        },
        "btp:index/getSubaccountSubscriptions:getSubaccountSubscriptions": {
            "description": "Lists all multitenant applications to which the subaccount is entitled to subscribe, including their subscription details.\n\n__Tip:__\nYou must be assigned to the subaccount admin or viewer role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountSubscriptions({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_subscriptions(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountSubscriptions.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountSubscriptions(ctx, \u0026btp.GetSubaccountSubscriptionsArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountSubscriptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountSubscriptions(GetSubaccountSubscriptionsArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountSubscriptions\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountSubscriptions.\n",
                "properties": {
                    "subaccountId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountSubscriptions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "subaccountId": {
                        "type": "string"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountSubscriptionsValue:getSubaccountSubscriptionsValue"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountTrustConfiguration:getSubaccountTrustConfiguration": {
            "description": "Gets details about a trust configuration.\n\n__Tip:__\nYou must be viewer or administrator of the subaccount.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-btp-neo-environment/platform-identity-provider\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst default = btp.getSubaccountTrustConfiguration({\n    origin: \"sap.default\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst custom = btp.getSubaccountTrustConfiguration({\n    origin: \"terraformint-platform\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\ndefault = btp.get_subaccount_trust_configuration(origin=\"sap.default\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\ncustom = btp.get_subaccount_trust_configuration(origin=\"terraformint-platform\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @default = Btp.GetSubaccountTrustConfiguration.Invoke(new()\n    {\n        Origin = \"sap.default\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var custom = Btp.GetSubaccountTrustConfiguration.Invoke(new()\n    {\n        Origin = \"terraformint-platform\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.LookupSubaccountTrustConfiguration(ctx, \u0026btp.LookupSubaccountTrustConfigurationArgs{\n\t\t\tOrigin:       \"sap.default\",\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.LookupSubaccountTrustConfiguration(ctx, \u0026btp.LookupSubaccountTrustConfigurationArgs{\n\t\t\tOrigin:       \"terraformint-platform\",\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountTrustConfigurationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var default = BtpFunctions.getSubaccountTrustConfiguration(GetSubaccountTrustConfigurationArgs.builder()\n            .origin(\"sap.default\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var custom = BtpFunctions.getSubaccountTrustConfiguration(GetSubaccountTrustConfigurationArgs.builder()\n            .origin(\"terraformint-platform\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  default:\n    fn::invoke:\n      Function: btp:getSubaccountTrustConfiguration\n      Arguments:\n        origin: sap.default\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  custom:\n    fn::invoke:\n      Function: btp:getSubaccountTrustConfiguration\n      Arguments:\n        origin: terraformint-platform\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountTrustConfiguration.\n",
                "properties": {
                    "origin": {
                        "type": "string",
                        "description": "The origin of the identity provider.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "origin",
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountTrustConfiguration.\n",
                "properties": {
                    "autoCreateShadowUsers": {
                        "type": "boolean",
                        "description": "Shows whether any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.\n"
                    },
                    "availableForUserLogon": {
                        "type": "boolean",
                        "description": "Shows whether end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the trust configuration.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The tenant's domain which should be used for user logon.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The origin of the identity provider.\n",
                        "deprecationMessage": "Use the `origin` attribute instead"
                    },
                    "identityProvider": {
                        "type": "string",
                        "description": "The name of the Identity Authentication tenant the subaccount is connected to.\n"
                    },
                    "linkText": {
                        "type": "string",
                        "description": "Short string that helps users to identify the link for login.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The display name of the trust configuration.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The origin of the identity provider.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "The protocol used to establish trust with the identity provider.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Shows whether the trust configuration can be modified.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Shows whether the identity provider is currently 'active' or 'inactive'.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The trust type.\n"
                    }
                },
                "type": "object",
                "required": [
                    "autoCreateShadowUsers",
                    "availableForUserLogon",
                    "description",
                    "domain",
                    "id",
                    "identityProvider",
                    "linkText",
                    "name",
                    "origin",
                    "protocol",
                    "readOnly",
                    "status",
                    "subaccountId",
                    "type"
                ]
            }
        },
        "btp:index/getSubaccountTrustConfigurations:getSubaccountTrustConfigurations": {
            "description": "Gets all trust configurations that are configured for your subaccount.\n\n__Tip:__\nYou must be viewer or administrator of the subaccount.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccountTrustConfigurations({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccount_trust_configurations(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccountTrustConfigurations.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountTrustConfigurations(ctx, \u0026btp.GetSubaccountTrustConfigurationsArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountTrustConfigurationsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccountTrustConfigurations(GetSubaccountTrustConfigurationsArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccountTrustConfigurations\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountTrustConfigurations.\n",
                "properties": {
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountTrustConfigurations.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountTrustConfigurationsValue:getSubaccountTrustConfigurationsValue"
                        },
                        "description": "The trust configurations associated with the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccountUser:getSubaccountUser": {
            "description": "Shows registered users in a subaccount. Users belong to one of the identity providers (IdPs) of the subaccount.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst someone = btp.getSubaccountUser({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    userName: \"john.doe@mycompany.com\",\n});\nconst someoneElse = btp.getSubaccountUser({\n    origin: \"my-custom-idp\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    userName: \"jane.doe@mycompany.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nsomeone = btp.get_subaccount_user(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    user_name=\"john.doe@mycompany.com\")\nsomeone_else = btp.get_subaccount_user(origin=\"my-custom-idp\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    user_name=\"jane.doe@mycompany.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var someone = Btp.GetSubaccountUser.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        UserName = \"john.doe@mycompany.com\",\n    });\n\n    var someoneElse = Btp.GetSubaccountUser.Invoke(new()\n    {\n        Origin = \"my-custom-idp\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n        UserName = \"jane.doe@mycompany.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountUser(ctx, \u0026btp.GetSubaccountUserArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t\tUserName:     \"john.doe@mycompany.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountUser(ctx, \u0026btp.GetSubaccountUserArgs{\n\t\t\tOrigin:       pulumi.StringRef(\"my-custom-idp\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t\tUserName:     \"jane.doe@mycompany.com\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var someone = BtpFunctions.getSubaccountUser(GetSubaccountUserArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .userName(\"john.doe@mycompany.com\")\n            .build());\n\n        final var someoneElse = BtpFunctions.getSubaccountUser(GetSubaccountUserArgs.builder()\n            .origin(\"my-custom-idp\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .userName(\"jane.doe@mycompany.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  someone:\n    fn::invoke:\n      Function: btp:getSubaccountUser\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n        userName: john.doe@mycompany.com\n  someoneElse:\n    fn::invoke:\n      Function: btp:getSubaccountUser\n      Arguments:\n        origin: my-custom-idp\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n        userName: jane.doe@mycompany.com\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountUser.\n",
                "properties": {
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The username of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId",
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountUser.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Shows if the account is still in use.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "The e-mail address of the user.\n"
                    },
                    "familyName": {
                        "type": "string",
                        "description": "The last name of the user.\n"
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The given name of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the user.\n"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'\n"
                    },
                    "roleCollections": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The set of role collections, which are assigned to the user.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The username of the user.\n"
                    },
                    "verified": {
                        "type": "boolean",
                        "description": "The verification status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "active",
                    "email",
                    "familyName",
                    "givenName",
                    "id",
                    "origin",
                    "roleCollections",
                    "subaccountId",
                    "userName",
                    "verified"
                ]
            }
        },
        "btp:index/getSubaccountUsers:getSubaccountUsers": {
            "description": "Gets all users.\n\n__Further documentation:__\n\u003chttps://help.sap.com/docs/btp/sap-business-technology-platform/user-and-member-management\u003e\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst defaultidp = btp.getSubaccountUsers({\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\nconst mycustomidp = btp.getSubaccountUsers({\n    origin: \"my-custom-idp\",\n    subaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\ndefaultidp = btp.get_subaccount_users(subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\nmycustomidp = btp.get_subaccount_users(origin=\"my-custom-idp\",\n    subaccount_id=\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var defaultidp = Btp.GetSubaccountUsers.Invoke(new()\n    {\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n    var mycustomidp = Btp.GetSubaccountUsers.Invoke(new()\n    {\n        Origin = \"my-custom-idp\",\n        SubaccountId = \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccountUsers(ctx, \u0026btp.GetSubaccountUsersArgs{\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccountUsers(ctx, \u0026btp.GetSubaccountUsersArgs{\n\t\t\tOrigin:       pulumi.StringRef(\"my-custom-idp\"),\n\t\t\tSubaccountId: \"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var defaultidp = BtpFunctions.getSubaccountUsers(GetSubaccountUsersArgs.builder()\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n        final var mycustomidp = BtpFunctions.getSubaccountUsers(GetSubaccountUsersArgs.builder()\n            .origin(\"my-custom-idp\")\n            .subaccountId(\"6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  defaultidp:\n    fn::invoke:\n      Function: btp:getSubaccountUsers\n      Arguments:\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n  mycustomidp:\n    fn::invoke:\n      Function: btp:getSubaccountUsers\n      Arguments:\n        origin: my-custom-idp\n        subaccountId: 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccountUsers.\n",
                "properties": {
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "subaccountId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccountUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n",
                        "deprecationMessage": "Use the `subaccount_id` attribute instead"
                    },
                    "origin": {
                        "type": "string",
                        "description": "The identity provider that hosts the user. The default value is 'ldap'.\n"
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of users assigned to the subaccount.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "origin",
                    "subaccountId",
                    "values"
                ]
            }
        },
        "btp:index/getSubaccounts:getSubaccounts": {
            "description": "Gets all the subaccounts in a global account, including the subaccounts in directories.\n\n__Tip:__\nYou must be assigned to the admin or viewer role of the global account, directory.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst all = btp.getSubaccounts({});\nconst filtered = btp.getSubaccounts({\n    labelsFilter: \"my-label=my-value\",\n});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nall = btp.get_subaccounts()\nfiltered = btp.get_subaccounts(labels_filter=\"my-label=my-value\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Btp.GetSubaccounts.Invoke();\n\n    var filtered = Btp.GetSubaccounts.Invoke(new()\n    {\n        LabelsFilter = \"my-label=my-value\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetSubaccounts(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = btp.GetSubaccounts(ctx, \u0026btp.GetSubaccountsArgs{\n\t\t\tLabelsFilter: pulumi.StringRef(\"my-label=my-value\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport com.pulumi.btp.inputs.GetSubaccountsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = BtpFunctions.getSubaccounts();\n\n        final var filtered = BtpFunctions.getSubaccounts(GetSubaccountsArgs.builder()\n            .labelsFilter(\"my-label=my-value\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: btp:getSubaccounts\n      Arguments: {}\n  filtered:\n    fn::invoke:\n      Function: btp:getSubaccounts\n      Arguments:\n        labelsFilter: my-label=my-value\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSubaccounts.\n",
                "properties": {
                    "labelsFilter": {
                        "type": "string",
                        "description": "Filters the response based on the labels query.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSubaccounts.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the global account.\n",
                        "deprecationMessage": "Use the `btp_globalaccount` datasource instead"
                    },
                    "labelsFilter": {
                        "type": "string",
                        "description": "Filters the response based on the labels query.\n"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/btp:index/getSubaccountsValue:getSubaccountsValue"
                        },
                        "description": "The subaccounts contained in the global account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "values"
                ]
            }
        },
        "btp:index/getWhoami:getWhoami": {
            "description": "Returns information about the logged-in user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as btp from \"@pulumi/btp\";\n\nconst me = btp.getWhoami({});\n```\n```python\nimport pulumi\nimport pulumi_btp as btp\n\nme = btp.get_whoami()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Btp = Pulumi.Btp;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var me = Btp.GetWhoami.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/lechnerc77/pulumi-btp/sdk/go/btp\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := btp.GetWhoami(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.btp.BtpFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var me = BtpFunctions.getWhoami();\n\n    }\n}\n```\n```yaml\nvariables:\n  me:\n    fn::invoke:\n      Function: btp:getWhoami\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getWhoami.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The e-mail address of the logged-in user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the logged-in user.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The name of the token issuer.\n"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "id",
                    "issuer"
                ]
            }
        }
    }
}