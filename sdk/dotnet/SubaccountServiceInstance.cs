// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    /// <summary>
    /// Creates a service instance in a subaccount.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Btp = PulumiBtp.Btp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // create an instance of the alert-notification service (no configuration necessary)
    ///     var alertNotificationFreeSubaccountServiceInstance = new Btp.SubaccountServiceInstance("alertNotificationFreeSubaccountServiceInstance", new()
    ///     {
    ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
    ///         ServiceplanId = "b50d1b0b-2059-4f21-a014-2ea87752eb48",
    ///     });
    /// 
    ///     // create an xsuaa service instance with additional configurations
    ///     var xsuaaApplication = new Btp.SubaccountServiceInstance("xsuaaApplication", new()
    ///     {
    ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
    ///         ServiceplanId = "bd5e893f-81dd-4d10-8343-e02975e8ecd8",
    ///         Parameters = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["xsappname"] = "my-application",
    ///             ["tenant-mode"] = "dedicated",
    ///         }),
    ///     });
    /// 
    ///     // create an instance of the alert-notification service (no configuration necessary)
    ///     // in additon add a custom timeout for the create and update operation
    ///     var alertNotificationFreeIndex_subaccountServiceInstanceSubaccountServiceInstance = new Btp.SubaccountServiceInstance("alertNotificationFreeIndex/subaccountServiceInstanceSubaccountServiceInstance", new()
    ///     {
    ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
    ///         ServiceplanId = "b50d1b0b-2059-4f21-a014-2ea87752eb48",
    ///         Timeouts = new Btp.Inputs.SubaccountServiceInstanceTimeoutsArgs
    ///         {
    ///             Create = "25m",
    ///             Update = "15m",
    ///             Delete = "15m",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/subaccountServiceInstance:SubaccountServiceInstance &lt;resource_name&gt; &lt;subaccount_id&gt;,&lt;service_instance_id&gt;
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/subaccountServiceInstance:SubaccountServiceInstance alert_notification_free 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,6a55f158-41b5-4e63-aa77-84089fa0ab98
    /// ```
    /// </summary>
    [BtpResourceType("btp:index/subaccountServiceInstance:SubaccountServiceInstance")]
    public partial class SubaccountServiceInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Contextual data for the resource.
        /// </summary>
        [Output("context")]
        public Output<ImmutableDictionary<string, string>> Context { get; private set; } = null!;

        /// <summary>
        /// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Output("createdDate")]
        public Output<string> CreatedDate { get; private set; } = null!;

        /// <summary>
        /// The set of words or phrases assigned to the service instance.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, ImmutableArray<string>>> Labels { get; private set; } = null!;

        /// <summary>
        /// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Output("lastModified")]
        public Output<string> LastModified { get; private set; } = null!;

        /// <summary>
        /// The name of the service instance.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The configuration parameters for the service instance.
        /// </summary>
        [Output("parameters")]
        public Output<string?> Parameters { get; private set; } = null!;

        /// <summary>
        /// The platform ID.
        /// </summary>
        [Output("platformId")]
        public Output<string> PlatformId { get; private set; } = null!;

        [Output("ready")]
        public Output<bool> Ready { get; private set; } = null!;

        /// <summary>
        /// The ID of the instance to which the service instance refers.
        /// </summary>
        [Output("referencedInstanceId")]
        public Output<string> ReferencedInstanceId { get; private set; } = null!;

        /// <summary>
        /// The ID of the service plan.
        /// </summary>
        [Output("serviceplanId")]
        public Output<string> ServiceplanId { get; private set; } = null!;

        /// <summary>
        /// Shows whether the service instance is shared.
        /// </summary>
        [Output("shared")]
        public Output<bool> Shared { get; private set; } = null!;

        /// <summary>
        /// The current state of the service instance.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Output("subaccountId")]
        public Output<string> SubaccountId { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.SubaccountServiceInstanceTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// Shows whether the resource can be used.
        /// </summary>
        [Output("usable")]
        public Output<bool> Usable { get; private set; } = null!;


        /// <summary>
        /// Create a SubaccountServiceInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SubaccountServiceInstance(string name, SubaccountServiceInstanceArgs args, CustomResourceOptions? options = null)
            : base("btp:index/subaccountServiceInstance:SubaccountServiceInstance", name, args ?? new SubaccountServiceInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SubaccountServiceInstance(string name, Input<string> id, SubaccountServiceInstanceState? state = null, CustomResourceOptions? options = null)
            : base("btp:index/subaccountServiceInstance:SubaccountServiceInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lechnerc77/pulumi-btp",
                AdditionalSecretOutputs =
                {
                    "parameters",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SubaccountServiceInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SubaccountServiceInstance Get(string name, Input<string> id, SubaccountServiceInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new SubaccountServiceInstance(name, id, state, options);
        }
    }

    public sealed class SubaccountServiceInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("labels")]
        private InputMap<ImmutableArray<string>>? _labels;

        /// <summary>
        /// The set of words or phrases assigned to the service instance.
        /// </summary>
        public InputMap<ImmutableArray<string>> Labels
        {
            get => _labels ?? (_labels = new InputMap<ImmutableArray<string>>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of the service instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private Input<string>? _parameters;

        /// <summary>
        /// The configuration parameters for the service instance.
        /// </summary>
        public Input<string>? Parameters
        {
            get => _parameters;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _parameters = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The ID of the service plan.
        /// </summary>
        [Input("serviceplanId", required: true)]
        public Input<string> ServiceplanId { get; set; } = null!;

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public Input<string> SubaccountId { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.SubaccountServiceInstanceTimeoutsArgs>? Timeouts { get; set; }

        public SubaccountServiceInstanceArgs()
        {
        }
        public static new SubaccountServiceInstanceArgs Empty => new SubaccountServiceInstanceArgs();
    }

    public sealed class SubaccountServiceInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("context")]
        private InputMap<string>? _context;

        /// <summary>
        /// Contextual data for the resource.
        /// </summary>
        public InputMap<string> Context
        {
            get => _context ?? (_context = new InputMap<string>());
            set => _context = value;
        }

        /// <summary>
        /// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Input("createdDate")]
        public Input<string>? CreatedDate { get; set; }

        [Input("labels")]
        private InputMap<ImmutableArray<string>>? _labels;

        /// <summary>
        /// The set of words or phrases assigned to the service instance.
        /// </summary>
        public InputMap<ImmutableArray<string>> Labels
        {
            get => _labels ?? (_labels = new InputMap<ImmutableArray<string>>());
            set => _labels = value;
        }

        /// <summary>
        /// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Input("lastModified")]
        public Input<string>? LastModified { get; set; }

        /// <summary>
        /// The name of the service instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameters")]
        private Input<string>? _parameters;

        /// <summary>
        /// The configuration parameters for the service instance.
        /// </summary>
        public Input<string>? Parameters
        {
            get => _parameters;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _parameters = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The platform ID.
        /// </summary>
        [Input("platformId")]
        public Input<string>? PlatformId { get; set; }

        [Input("ready")]
        public Input<bool>? Ready { get; set; }

        /// <summary>
        /// The ID of the instance to which the service instance refers.
        /// </summary>
        [Input("referencedInstanceId")]
        public Input<string>? ReferencedInstanceId { get; set; }

        /// <summary>
        /// The ID of the service plan.
        /// </summary>
        [Input("serviceplanId")]
        public Input<string>? ServiceplanId { get; set; }

        /// <summary>
        /// Shows whether the service instance is shared.
        /// </summary>
        [Input("shared")]
        public Input<bool>? Shared { get; set; }

        /// <summary>
        /// The current state of the service instance.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId")]
        public Input<string>? SubaccountId { get; set; }

        [Input("timeouts")]
        public Input<Inputs.SubaccountServiceInstanceTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// Shows whether the resource can be used.
        /// </summary>
        [Input("usable")]
        public Input<bool>? Usable { get; set; }

        public SubaccountServiceInstanceState()
        {
        }
        public static new SubaccountServiceInstanceState Empty => new SubaccountServiceInstanceState();
    }
}
