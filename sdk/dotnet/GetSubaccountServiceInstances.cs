// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    public static class GetSubaccountServiceInstances
    {
        /// <summary>
        /// Lists all service instances in a subaccount.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Btp.GetSubaccountServiceInstances.Invoke(new()
        ///     {
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        ///     var ready = Btp.GetSubaccountServiceInstances.Invoke(new()
        ///     {
        ///         FieldsFilter = "ready eq 'true'",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        ///     var byLabel = Btp.GetSubaccountServiceInstances.Invoke(new()
        ///     {
        ///         LabelsFilter = "labelname eq 'labelvalue'",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubaccountServiceInstancesResult> InvokeAsync(GetSubaccountServiceInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubaccountServiceInstancesResult>("btp:index/getSubaccountServiceInstances:getSubaccountServiceInstances", args ?? new GetSubaccountServiceInstancesArgs(), options.WithDefaults());

        /// <summary>
        /// Lists all service instances in a subaccount.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Btp.GetSubaccountServiceInstances.Invoke(new()
        ///     {
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        ///     var ready = Btp.GetSubaccountServiceInstances.Invoke(new()
        ///     {
        ///         FieldsFilter = "ready eq 'true'",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        ///     var byLabel = Btp.GetSubaccountServiceInstances.Invoke(new()
        ///     {
        ///         LabelsFilter = "labelname eq 'labelvalue'",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubaccountServiceInstancesResult> Invoke(GetSubaccountServiceInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubaccountServiceInstancesResult>("btp:index/getSubaccountServiceInstances:getSubaccountServiceInstances", args ?? new GetSubaccountServiceInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubaccountServiceInstancesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the instances based on their fields. For example, to list all instances that are usable, use "usable eq 'true'".
        /// </summary>
        [Input("fieldsFilter")]
        public string? FieldsFilter { get; set; }

        /// <summary>
        /// Filters the instances based on the label query.  For example, to list all instances that are available in a production landscape, use "landscape eq 'production'".
        /// </summary>
        [Input("labelsFilter")]
        public string? LabelsFilter { get; set; }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public string SubaccountId { get; set; } = null!;

        public GetSubaccountServiceInstancesArgs()
        {
        }
        public static new GetSubaccountServiceInstancesArgs Empty => new GetSubaccountServiceInstancesArgs();
    }

    public sealed class GetSubaccountServiceInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filters the instances based on their fields. For example, to list all instances that are usable, use "usable eq 'true'".
        /// </summary>
        [Input("fieldsFilter")]
        public Input<string>? FieldsFilter { get; set; }

        /// <summary>
        /// Filters the instances based on the label query.  For example, to list all instances that are available in a production landscape, use "landscape eq 'production'".
        /// </summary>
        [Input("labelsFilter")]
        public Input<string>? LabelsFilter { get; set; }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public Input<string> SubaccountId { get; set; } = null!;

        public GetSubaccountServiceInstancesInvokeArgs()
        {
        }
        public static new GetSubaccountServiceInstancesInvokeArgs Empty => new GetSubaccountServiceInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubaccountServiceInstancesResult
    {
        /// <summary>
        /// Filters the instances based on their fields. For example, to list all instances that are usable, use "usable eq 'true'".
        /// </summary>
        public readonly string? FieldsFilter;
        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Filters the instances based on the label query.  For example, to list all instances that are available in a production landscape, use "landscape eq 'production'".
        /// </summary>
        public readonly string? LabelsFilter;
        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        public readonly string SubaccountId;
        public readonly ImmutableArray<Outputs.GetSubaccountServiceInstancesValueResult> Values;

        [OutputConstructor]
        private GetSubaccountServiceInstancesResult(
            string? fieldsFilter,

            string id,

            string? labelsFilter,

            string subaccountId,

            ImmutableArray<Outputs.GetSubaccountServiceInstancesValueResult> values)
        {
            FieldsFilter = fieldsFilter;
            Id = id;
            LabelsFilter = labelsFilter;
            SubaccountId = subaccountId;
            Values = values;
        }
    }
}
