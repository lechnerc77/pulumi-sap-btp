// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp.Outputs
{

    [OutputType]
    public sealed class GetSubaccountsValueResult
    {
        /// <summary>
        /// Shows whether the subaccount can use beta services and applications.
        /// </summary>
        public readonly bool BetaEnabled;
        /// <summary>
        /// The details of the user that created the subaccount.
        /// </summary>
        public readonly string CreatedBy;
        /// <summary>
        /// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// The description of the subaccount.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The unique ID of the subaccount.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The set of words or phrases assigned to the subaccount.
        /// </summary>
        public readonly ImmutableDictionary<string, ImmutableArray<string>> Labels;
        /// <summary>
        /// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// A descriptive name of the subaccount for customer-facing UIs.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The features of parent entity of the subaccount.
        /// </summary>
        public readonly ImmutableArray<string> ParentFeatures;
        /// <summary>
        /// The ID of the subaccountâ€™s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
        /// </summary>
        public readonly string ParentId;
        /// <summary>
        /// The region in which the subaccount was created.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The current state of the subaccount. Possible values are:
        /// </summary>
        public readonly string State;
        public readonly string Subdomain;
        public readonly string Usage;

        [OutputConstructor]
        private GetSubaccountsValueResult(
            bool betaEnabled,

            string createdBy,

            string createdDate,

            string description,

            string id,

            ImmutableDictionary<string, ImmutableArray<string>> labels,

            string lastModified,

            string name,

            ImmutableArray<string> parentFeatures,

            string parentId,

            string region,

            string state,

            string subdomain,

            string usage)
        {
            BetaEnabled = betaEnabled;
            CreatedBy = createdBy;
            CreatedDate = createdDate;
            Description = description;
            Id = id;
            Labels = labels;
            LastModified = lastModified;
            Name = name;
            ParentFeatures = parentFeatures;
            ParentId = parentId;
            Region = region;
            State = state;
            Subdomain = subdomain;
            Usage = usage;
        }
    }
}
