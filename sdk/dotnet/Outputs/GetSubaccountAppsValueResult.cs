// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp.Outputs
{

    [OutputType]
    public sealed class GetSubaccountAppsValueResult
    {
        public readonly ImmutableArray<string> Authorities;
        /// <summary>
        /// The description of the app.
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<string> ForeignScopeReferences;
        /// <summary>
        /// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
        /// </summary>
        public readonly string Id;
        public readonly string MasterAppId;
        public readonly Outputs.GetSubaccountAppsValueOauth2ConfigurationResult Oauth2Configuration;
        public readonly string OrgId;
        public readonly string PlanId;
        public readonly string PlanName;
        public readonly string ServiceinstanceId;
        public readonly string SpaceId;
        public readonly string TenantMode;
        public readonly string Username;
        public readonly string Xsappname;

        [OutputConstructor]
        private GetSubaccountAppsValueResult(
            ImmutableArray<string> authorities,

            string description,

            ImmutableArray<string> foreignScopeReferences,

            string id,

            string masterAppId,

            Outputs.GetSubaccountAppsValueOauth2ConfigurationResult oauth2Configuration,

            string orgId,

            string planId,

            string planName,

            string serviceinstanceId,

            string spaceId,

            string tenantMode,

            string username,

            string xsappname)
        {
            Authorities = authorities;
            Description = description;
            ForeignScopeReferences = foreignScopeReferences;
            Id = id;
            MasterAppId = masterAppId;
            Oauth2Configuration = oauth2Configuration;
            OrgId = orgId;
            PlanId = planId;
            PlanName = planName;
            ServiceinstanceId = serviceinstanceId;
            SpaceId = spaceId;
            TenantMode = tenantMode;
            Username = username;
            Xsappname = xsappname;
        }
    }
}
