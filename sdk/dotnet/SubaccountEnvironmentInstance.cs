// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    /// <summary>
    /// Creates an environment instance, such as a Cloud Foundry org, in a subaccount.
    /// 
    /// __Tips:__
    /// * You must be assigned to the subaccount admin role.
    /// * Quota-based environments, such as Kyma, must first be assigned as entitlements to the subaccount.
    /// 
    /// __Further documentation:__
    /// * Cloud Foundry: &lt;https://help.sap.com/docs/btp/sap-business-technology-platform/org-management-using-sap-btp-command-line-interface-btp-cli&gt;
    /// * Kyma: &lt;https://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environment&gt;
    /// * Concept: &lt;https://help.sap.com/docs/btp/sap-business-technology-platform/environments&gt;
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Btp = PulumiBtp.Btp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // creates a cloud foundry environment in a given account
    ///     var cloudfoundrySubaccountEnvironmentInstance = new Btp.SubaccountEnvironmentInstance("cloudfoundrySubaccountEnvironmentInstance", new()
    ///     {
    ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
    ///         EnvironmentType = "cloudfoundry",
    ///         ServiceName = "cloudfoundry",
    ///         PlanName = "standard",
    ///         Parameters = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["instance_name"] = "my-cf-org-name",
    ///         }),
    ///     });
    /// 
    ///     // creates a cloud foundry environment in a given account
    ///     // in additon add a custom timeout for the create and delete operation
    ///     var cloudfoundryIndex_subaccountEnvironmentInstanceSubaccountEnvironmentInstance = new Btp.SubaccountEnvironmentInstance("cloudfoundryIndex/subaccountEnvironmentInstanceSubaccountEnvironmentInstance", new()
    ///     {
    ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
    ///         EnvironmentType = "cloudfoundry",
    ///         ServiceName = "cloudfoundry",
    ///         PlanName = "standard",
    ///         Parameters = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["instance_name"] = "my-cf-org-name",
    ///         }),
    ///         Timeouts = new Btp.Inputs.SubaccountEnvironmentInstanceTimeoutsArgs
    ///         {
    ///             Create = "1h",
    ///             Update = "35m",
    ///             Delete = "30m",
    ///         },
    ///     });
    /// 
    ///     // creates a kyma environment in a given account
    ///     // NOTE: for the available parameter values, check https://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environment
    ///     var kyma = new Btp.SubaccountEnvironmentInstance("kyma", new()
    ///     {
    ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
    ///         EnvironmentType = "kyma",
    ///         ServiceName = "kymaruntime",
    ///         PlanName = "aws",
    ///         Parameters = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///         {
    ///             ["name"] = "my-kyma-environment",
    ///             ["region"] = "us-east-1",
    ///             ["machine_type"] = "mx5.xlarge",
    ///             ["auto_scaler_min"] = 3,
    ///             ["auto_scaler_max"] = 20,
    ///         }),
    ///         Timeouts = new Btp.Inputs.SubaccountEnvironmentInstanceTimeoutsArgs
    ///         {
    ///             Create = "1h",
    ///             Update = "35m",
    ///             Delete = "1h",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance &lt;resource_name&gt; &lt;subaccount_id&gt;,&lt;environment_instance_id&gt;
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance cloudfoundry 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,FD9BB73F-F663-4284-A50B-D72EC24FC4E1
    /// ```
    /// </summary>
    [BtpResourceType("btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance")]
    public partial class SubaccountEnvironmentInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the associated environment broker.
        /// </summary>
        [Output("brokerId")]
        public Output<string> BrokerId { get; private set; } = null!;

        /// <summary>
        /// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Output("createdDate")]
        public Output<string> CreatedDate { get; private set; } = null!;

        /// <summary>
        /// The set of words or phrases assigned to the environment instance.
        /// </summary>
        [Output("customLabels")]
        public Output<ImmutableDictionary<string, ImmutableArray<string>>> CustomLabels { get; private set; } = null!;

        /// <summary>
        /// The URL of the service dashboard, which is a web-based management user interface for the service instances.
        /// </summary>
        [Output("dashboardUrl")]
        public Output<string> DashboardUrl { get; private set; } = null!;

        /// <summary>
        /// The description of the environment instance.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The type of the environment instance that is used.
        /// </summary>
        [Output("environmentType")]
        public Output<string> EnvironmentType { get; private set; } = null!;

        /// <summary>
        /// The Broker-specified key-value pairs that specify attributes of an environment instance.
        /// </summary>
        [Output("labels")]
        public Output<string> Labels { get; private set; } = null!;

        /// <summary>
        /// The name of the landscape within the logged in region on which the environment instance is created.
        /// </summary>
        [Output("landscapeLabel")]
        public Output<string> LandscapeLabel { get; private set; } = null!;

        /// <summary>
        /// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Output("lastModified")]
        public Output<string> LastModified { get; private set; } = null!;

        /// <summary>
        /// The name of the environment instance.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An identifier that represents the last operation. This ID is returned by the environment brokers.
        /// </summary>
        [Output("operation")]
        public Output<string> Operation { get; private set; } = null!;

        /// <summary>
        /// The configuration parameters for the environment instance.
        /// </summary>
        [Output("parameters")]
        public Output<string> Parameters { get; private set; } = null!;

        /// <summary>
        /// The ID of the service plan for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Output("planId")]
        public Output<string> PlanId { get; private set; } = null!;

        /// <summary>
        /// The name of the service plan for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Output("planName")]
        public Output<string> PlanName { get; private set; } = null!;

        /// <summary>
        /// The ID of the platform for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Output("platformId")]
        public Output<string> PlatformId { get; private set; } = null!;

        /// <summary>
        /// The ID of the service for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;

        /// <summary>
        /// The name of the service for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The current state of the environment instance. Possible values are:
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Output("subaccountId")]
        public Output<string> SubaccountId { get; private set; } = null!;

        /// <summary>
        /// The ID of the tenant that owns the environment instance.
        /// </summary>
        [Output("tenantId")]
        public Output<string> TenantId { get; private set; } = null!;

        [Output("timeouts")]
        public Output<Outputs.SubaccountEnvironmentInstanceTimeouts?> Timeouts { get; private set; } = null!;

        /// <summary>
        /// The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |
        /// `Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`
        /// | The environment instance is deleted. |
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a SubaccountEnvironmentInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SubaccountEnvironmentInstance(string name, SubaccountEnvironmentInstanceArgs args, CustomResourceOptions? options = null)
            : base("btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance", name, args ?? new SubaccountEnvironmentInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SubaccountEnvironmentInstance(string name, Input<string> id, SubaccountEnvironmentInstanceState? state = null, CustomResourceOptions? options = null)
            : base("btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lechnerc77/pulumi-btp",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SubaccountEnvironmentInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SubaccountEnvironmentInstance Get(string name, Input<string> id, SubaccountEnvironmentInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new SubaccountEnvironmentInstance(name, id, state, options);
        }
    }

    public sealed class SubaccountEnvironmentInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of the environment instance that is used.
        /// </summary>
        [Input("environmentType", required: true)]
        public Input<string> EnvironmentType { get; set; } = null!;

        /// <summary>
        /// The name of the landscape within the logged in region on which the environment instance is created.
        /// </summary>
        [Input("landscapeLabel")]
        public Input<string>? LandscapeLabel { get; set; }

        /// <summary>
        /// The name of the environment instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The configuration parameters for the environment instance.
        /// </summary>
        [Input("parameters", required: true)]
        public Input<string> Parameters { get; set; } = null!;

        /// <summary>
        /// The name of the service plan for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Input("planName", required: true)]
        public Input<string> PlanName { get; set; } = null!;

        /// <summary>
        /// The name of the service for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public Input<string> SubaccountId { get; set; } = null!;

        [Input("timeouts")]
        public Input<Inputs.SubaccountEnvironmentInstanceTimeoutsArgs>? Timeouts { get; set; }

        public SubaccountEnvironmentInstanceArgs()
        {
        }
        public static new SubaccountEnvironmentInstanceArgs Empty => new SubaccountEnvironmentInstanceArgs();
    }

    public sealed class SubaccountEnvironmentInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the associated environment broker.
        /// </summary>
        [Input("brokerId")]
        public Input<string>? BrokerId { get; set; }

        /// <summary>
        /// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Input("createdDate")]
        public Input<string>? CreatedDate { get; set; }

        [Input("customLabels")]
        private InputMap<ImmutableArray<string>>? _customLabels;

        /// <summary>
        /// The set of words or phrases assigned to the environment instance.
        /// </summary>
        public InputMap<ImmutableArray<string>> CustomLabels
        {
            get => _customLabels ?? (_customLabels = new InputMap<ImmutableArray<string>>());
            set => _customLabels = value;
        }

        /// <summary>
        /// The URL of the service dashboard, which is a web-based management user interface for the service instances.
        /// </summary>
        [Input("dashboardUrl")]
        public Input<string>? DashboardUrl { get; set; }

        /// <summary>
        /// The description of the environment instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The type of the environment instance that is used.
        /// </summary>
        [Input("environmentType")]
        public Input<string>? EnvironmentType { get; set; }

        /// <summary>
        /// The Broker-specified key-value pairs that specify attributes of an environment instance.
        /// </summary>
        [Input("labels")]
        public Input<string>? Labels { get; set; }

        /// <summary>
        /// The name of the landscape within the logged in region on which the environment instance is created.
        /// </summary>
        [Input("landscapeLabel")]
        public Input<string>? LandscapeLabel { get; set; }

        /// <summary>
        /// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Input("lastModified")]
        public Input<string>? LastModified { get; set; }

        /// <summary>
        /// The name of the environment instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An identifier that represents the last operation. This ID is returned by the environment brokers.
        /// </summary>
        [Input("operation")]
        public Input<string>? Operation { get; set; }

        /// <summary>
        /// The configuration parameters for the environment instance.
        /// </summary>
        [Input("parameters")]
        public Input<string>? Parameters { get; set; }

        /// <summary>
        /// The ID of the service plan for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Input("planId")]
        public Input<string>? PlanId { get; set; }

        /// <summary>
        /// The name of the service plan for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Input("planName")]
        public Input<string>? PlanName { get; set; }

        /// <summary>
        /// The ID of the platform for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Input("platformId")]
        public Input<string>? PlatformId { get; set; }

        /// <summary>
        /// The ID of the service for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        /// <summary>
        /// The name of the service for the environment instance in the corresponding service broker's catalog.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The current state of the environment instance. Possible values are:
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId")]
        public Input<string>? SubaccountId { get; set; }

        /// <summary>
        /// The ID of the tenant that owns the environment instance.
        /// </summary>
        [Input("tenantId")]
        public Input<string>? TenantId { get; set; }

        [Input("timeouts")]
        public Input<Inputs.SubaccountEnvironmentInstanceTimeoutsGetArgs>? Timeouts { get; set; }

        /// <summary>
        /// The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |
        /// `Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`
        /// | The environment instance is deleted. |
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public SubaccountEnvironmentInstanceState()
        {
        }
        public static new SubaccountEnvironmentInstanceState Empty => new SubaccountEnvironmentInstanceState();
    }
}
