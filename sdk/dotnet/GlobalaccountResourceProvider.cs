// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    /// <summary>
    /// Creates a resource provider instance to allow your global account to connect to your provider account on a non-SAP cloud vendor. Through this channel, you can consume remote service resources that you already own and are supported by SAP BTP.
    /// For example, if you are subscribed to Amazon Web Services (AWS) and have already purchased services, such as PostgreSQL, you can register the vendor as a resource provider in SAP BTP and consume this service across your subaccounts together with other services offered by SAP.
    /// 
    /// The use of this functionality is subject to the availability of the supported non-SAP cloud vendors in your country/region.
    /// 
    /// __Tips:__
    /// * You must be assigned to the global account admin role.
    /// * You can create more than one instance of a given resource provider, each with its unique configuration properties. In such cases, the display name and technical name should be descriptive enough so that you and developers can easily differentiate between each instance.
    /// * After you configure a new resource provider instance, its supported services are added as entitlements in your global account.
    /// 
    /// __Further documentation:__
    /// &lt;https://help.sap.com/docs/btp/sap-business-technology-platform/managing-resource-providers&gt;
    /// 
    /// ## Import
    /// 
    /// terraform
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider &lt;resource_name&gt; &lt;resource_provider&gt;,&lt;unique_technical_name&gt;
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider azure AZURE,my_azure_provider
    /// ```
    /// </summary>
    [BtpResourceType("btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider")]
    public partial class GlobalaccountResourceProvider : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The configuration properties for the resource provider as required by the vendor.
        /// </summary>
        [Output("configuration")]
        public Output<string> Configuration { get; private set; } = null!;

        /// <summary>
        /// The description of the resource provider.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The descriptive name of the resource provider.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The cloud vendor from which to consume services through your subscribed account. Possible values are:
        /// </summary>
        [Output("providerType")]
        public Output<string> ProviderType { get; private set; } = null!;

        /// <summary>
        /// The unique technical name of the resource provider.
        /// </summary>
        [Output("technicalName")]
        public Output<string> TechnicalName { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalaccountResourceProvider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalaccountResourceProvider(string name, GlobalaccountResourceProviderArgs args, CustomResourceOptions? options = null)
            : base("btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider", name, args ?? new GlobalaccountResourceProviderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalaccountResourceProvider(string name, Input<string> id, GlobalaccountResourceProviderState? state = null, CustomResourceOptions? options = null)
            : base("btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lechnerc77/pulumi-btp",
                AdditionalSecretOutputs =
                {
                    "configuration",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalaccountResourceProvider resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalaccountResourceProvider Get(string name, Input<string> id, GlobalaccountResourceProviderState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalaccountResourceProvider(name, id, state, options);
        }
    }

    public sealed class GlobalaccountResourceProviderArgs : global::Pulumi.ResourceArgs
    {
        [Input("configuration", required: true)]
        private Input<string>? _configuration;

        /// <summary>
        /// The configuration properties for the resource provider as required by the vendor.
        /// </summary>
        public Input<string>? Configuration
        {
            get => _configuration;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _configuration = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The description of the resource provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The descriptive name of the resource provider.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The cloud vendor from which to consume services through your subscribed account. Possible values are:
        /// </summary>
        [Input("providerType", required: true)]
        public Input<string> ProviderType { get; set; } = null!;

        /// <summary>
        /// The unique technical name of the resource provider.
        /// </summary>
        [Input("technicalName", required: true)]
        public Input<string> TechnicalName { get; set; } = null!;

        public GlobalaccountResourceProviderArgs()
        {
        }
        public static new GlobalaccountResourceProviderArgs Empty => new GlobalaccountResourceProviderArgs();
    }

    public sealed class GlobalaccountResourceProviderState : global::Pulumi.ResourceArgs
    {
        [Input("configuration")]
        private Input<string>? _configuration;

        /// <summary>
        /// The configuration properties for the resource provider as required by the vendor.
        /// </summary>
        public Input<string>? Configuration
        {
            get => _configuration;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _configuration = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The description of the resource provider.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The descriptive name of the resource provider.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The cloud vendor from which to consume services through your subscribed account. Possible values are:
        /// </summary>
        [Input("providerType")]
        public Input<string>? ProviderType { get; set; }

        /// <summary>
        /// The unique technical name of the resource provider.
        /// </summary>
        [Input("technicalName")]
        public Input<string>? TechnicalName { get; set; }

        public GlobalaccountResourceProviderState()
        {
        }
        public static new GlobalaccountResourceProviderState Empty => new GlobalaccountResourceProviderState();
    }
}
