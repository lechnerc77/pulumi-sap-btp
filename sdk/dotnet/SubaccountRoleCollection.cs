// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    /// <summary>
    /// Creates a role collection in a subaccount.
    /// 
    /// __Further documentation:__
    /// &lt;https://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts&gt;
    /// 
    /// ## Import
    /// 
    /// terraform
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/subaccountRoleCollection:SubaccountRoleCollection &lt;resource_name&gt; '&lt;subaccount_id&gt;,&lt;name&gt;'
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/subaccountRoleCollection:SubaccountRoleCollection destination_admin '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,Destination Administrator'
    /// ```
    /// </summary>
    [BtpResourceType("btp:index/subaccountRoleCollection:SubaccountRoleCollection")]
    public partial class SubaccountRoleCollection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the role collection.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the role collection.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("roles")]
        public Output<ImmutableArray<Outputs.SubaccountRoleCollectionRole>> Roles { get; private set; } = null!;

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Output("subaccountId")]
        public Output<string> SubaccountId { get; private set; } = null!;


        /// <summary>
        /// Create a SubaccountRoleCollection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SubaccountRoleCollection(string name, SubaccountRoleCollectionArgs args, CustomResourceOptions? options = null)
            : base("btp:index/subaccountRoleCollection:SubaccountRoleCollection", name, args ?? new SubaccountRoleCollectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SubaccountRoleCollection(string name, Input<string> id, SubaccountRoleCollectionState? state = null, CustomResourceOptions? options = null)
            : base("btp:index/subaccountRoleCollection:SubaccountRoleCollection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lechnerc77/pulumi-btp",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SubaccountRoleCollection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SubaccountRoleCollection Get(string name, Input<string> id, SubaccountRoleCollectionState? state = null, CustomResourceOptions? options = null)
        {
            return new SubaccountRoleCollection(name, id, state, options);
        }
    }

    public sealed class SubaccountRoleCollectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the role collection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the role collection.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("roles", required: true)]
        private InputList<Inputs.SubaccountRoleCollectionRoleArgs>? _roles;
        public InputList<Inputs.SubaccountRoleCollectionRoleArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.SubaccountRoleCollectionRoleArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public Input<string> SubaccountId { get; set; } = null!;

        public SubaccountRoleCollectionArgs()
        {
        }
        public static new SubaccountRoleCollectionArgs Empty => new SubaccountRoleCollectionArgs();
    }

    public sealed class SubaccountRoleCollectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the role collection.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the role collection.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("roles")]
        private InputList<Inputs.SubaccountRoleCollectionRoleGetArgs>? _roles;
        public InputList<Inputs.SubaccountRoleCollectionRoleGetArgs> Roles
        {
            get => _roles ?? (_roles = new InputList<Inputs.SubaccountRoleCollectionRoleGetArgs>());
            set => _roles = value;
        }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId")]
        public Input<string>? SubaccountId { get; set; }

        public SubaccountRoleCollectionState()
        {
        }
        public static new SubaccountRoleCollectionState Empty => new SubaccountRoleCollectionState();
    }
}
