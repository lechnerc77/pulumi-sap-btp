// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    public static class GetSubaccountServicePlan
    {
        /// <summary>
        /// Gets details about a specific service plan such as its name, description, and metadata.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byId = Btp.GetSubaccountServicePlan.Invoke(new()
        ///     {
        ///         Id = "b50d1b0b-2059-4f21-a014-2ea87752eb48",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        ///     var byName = Btp.GetSubaccountServicePlan.Invoke(new()
        ///     {
        ///         Name = "free",
        ///         OfferingName = "alert-notification",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubaccountServicePlanResult> InvokeAsync(GetSubaccountServicePlanArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubaccountServicePlanResult>("btp:index/getSubaccountServicePlan:getSubaccountServicePlan", args ?? new GetSubaccountServicePlanArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details about a specific service plan such as its name, description, and metadata.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byId = Btp.GetSubaccountServicePlan.Invoke(new()
        ///     {
        ///         Id = "b50d1b0b-2059-4f21-a014-2ea87752eb48",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        ///     var byName = Btp.GetSubaccountServicePlan.Invoke(new()
        ///     {
        ///         Name = "free",
        ///         OfferingName = "alert-notification",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubaccountServicePlanResult> Invoke(GetSubaccountServicePlanInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubaccountServicePlanResult>("btp:index/getSubaccountServicePlan:getSubaccountServicePlan", args ?? new GetSubaccountServicePlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubaccountServicePlanArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service plan.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the service plan.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The name of the service offering of the plan.
        /// </summary>
        [Input("offeringName")]
        public string? OfferingName { get; set; }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public string SubaccountId { get; set; } = null!;

        public GetSubaccountServicePlanArgs()
        {
        }
        public static new GetSubaccountServicePlanArgs Empty => new GetSubaccountServicePlanArgs();
    }

    public sealed class GetSubaccountServicePlanInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service plan.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the service plan.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the service offering of the plan.
        /// </summary>
        [Input("offeringName")]
        public Input<string>? OfferingName { get; set; }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public Input<string> SubaccountId { get; set; } = null!;

        public GetSubaccountServicePlanInvokeArgs()
        {
        }
        public static new GetSubaccountServicePlanInvokeArgs Empty => new GetSubaccountServicePlanInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubaccountServicePlanResult
    {
        /// <summary>
        /// Shows whether the service plan is bindable.
        /// </summary>
        public readonly bool Bindable;
        /// <summary>
        /// The ID of the service plan in the service broker catalog.
        /// </summary>
        public readonly string CatalogId;
        /// <summary>
        /// The name of the associated service broker catalog.
        /// </summary>
        public readonly string CatalogName;
        /// <summary>
        /// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// The description of the service plan.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Shows whether the service plan is free.
        /// </summary>
        public readonly bool Free;
        /// <summary>
        /// The ID of the service plan.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// The name of the service plan.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name of the service offering of the plan.
        /// </summary>
        public readonly string OfferingName;
        /// <summary>
        /// Shows whether the service plan is ready.
        /// </summary>
        public readonly bool Ready;
        /// <summary>
        /// The ID of the service offering.
        /// </summary>
        public readonly string ServiceofferingId;
        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        public readonly string SubaccountId;

        [OutputConstructor]
        private GetSubaccountServicePlanResult(
            bool bindable,

            string catalogId,

            string catalogName,

            string createdDate,

            string description,

            bool free,

            string id,

            string lastModified,

            string name,

            string offeringName,

            bool ready,

            string serviceofferingId,

            string subaccountId)
        {
            Bindable = bindable;
            CatalogId = catalogId;
            CatalogName = catalogName;
            CreatedDate = createdDate;
            Description = description;
            Free = free;
            Id = id;
            LastModified = lastModified;
            Name = name;
            OfferingName = offeringName;
            Ready = ready;
            ServiceofferingId = serviceofferingId;
            SubaccountId = subaccountId;
        }
    }
}
