// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    public static class GetSubaccountServiceInstance
    {
        /// <summary>
        /// Gets details about a specific provisioned service instance, such as its name, id,  platform to which it belongs, and the last operation performed.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byId = Btp.GetSubaccountServiceInstance.Invoke(new()
        ///     {
        ///         Id = "bc8a216f-1184-49dc-b4b4-17cfe2828965",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        ///     var byName = Btp.GetSubaccountServiceInstance.Invoke(new()
        ///     {
        ///         Name = "my-xsuaa-application",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubaccountServiceInstanceResult> InvokeAsync(GetSubaccountServiceInstanceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubaccountServiceInstanceResult>("btp:index/getSubaccountServiceInstance:getSubaccountServiceInstance", args ?? new GetSubaccountServiceInstanceArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details about a specific provisioned service instance, such as its name, id,  platform to which it belongs, and the last operation performed.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byId = Btp.GetSubaccountServiceInstance.Invoke(new()
        ///     {
        ///         Id = "bc8a216f-1184-49dc-b4b4-17cfe2828965",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        ///     var byName = Btp.GetSubaccountServiceInstance.Invoke(new()
        ///     {
        ///         Name = "my-xsuaa-application",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubaccountServiceInstanceResult> Invoke(GetSubaccountServiceInstanceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubaccountServiceInstanceResult>("btp:index/getSubaccountServiceInstance:getSubaccountServiceInstance", args ?? new GetSubaccountServiceInstanceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubaccountServiceInstanceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service instance.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The name of the service instance.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public string SubaccountId { get; set; } = null!;

        public GetSubaccountServiceInstanceArgs()
        {
        }
        public static new GetSubaccountServiceInstanceArgs Empty => new GetSubaccountServiceInstanceArgs();
    }

    public sealed class GetSubaccountServiceInstanceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service instance.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The name of the service instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public Input<string> SubaccountId { get; set; } = null!;

        public GetSubaccountServiceInstanceInvokeArgs()
        {
        }
        public static new GetSubaccountServiceInstanceInvokeArgs Empty => new GetSubaccountServiceInstanceInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubaccountServiceInstanceResult
    {
        /// <summary>
        /// Contextual data for the resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Context;
        /// <summary>
        /// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        public readonly string CreatedDate;
        /// <summary>
        /// The ID of the service instance.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The set of words or phrases assigned to the service instance.
        /// </summary>
        public readonly ImmutableDictionary<string, ImmutableArray<string>> Labels;
        /// <summary>
        /// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        public readonly string LastModified;
        /// <summary>
        /// The name of the service instance.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The configuration parameters for the service instance.
        /// </summary>
        public readonly string Parameters;
        /// <summary>
        /// The platform ID.
        /// </summary>
        public readonly string PlatformId;
        public readonly bool Ready;
        /// <summary>
        /// The ID of the instance to which the service instance refers.
        /// </summary>
        public readonly string ReferencedInstanceId;
        /// <summary>
        /// The ID of the service plan.
        /// </summary>
        public readonly string ServiceplanId;
        /// <summary>
        /// Shows whether the service instance is shared.
        /// </summary>
        public readonly bool Shared;
        /// <summary>
        /// The current state of the service instance.
        /// </summary>
        public readonly string State;
        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        public readonly string SubaccountId;
        /// <summary>
        /// Shows whether the resource can be used.
        /// </summary>
        public readonly bool Usable;

        [OutputConstructor]
        private GetSubaccountServiceInstanceResult(
            ImmutableDictionary<string, string> context,

            string createdDate,

            string id,

            ImmutableDictionary<string, ImmutableArray<string>> labels,

            string lastModified,

            string name,

            string parameters,

            string platformId,

            bool ready,

            string referencedInstanceId,

            string serviceplanId,

            bool shared,

            string state,

            string subaccountId,

            bool usable)
        {
            Context = context;
            CreatedDate = createdDate;
            Id = id;
            Labels = labels;
            LastModified = lastModified;
            Name = name;
            Parameters = parameters;
            PlatformId = platformId;
            Ready = ready;
            ReferencedInstanceId = referencedInstanceId;
            ServiceplanId = serviceplanId;
            Shared = shared;
            State = state;
            SubaccountId = subaccountId;
            Usable = usable;
        }
    }
}
