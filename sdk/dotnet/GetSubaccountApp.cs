// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    public static class GetSubaccountApp
    {
        /// <summary>
        /// Gets details about a specific app.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byId = Btp.GetSubaccountApp.Invoke(new()
        ///     {
        ///         Id = "xsuaa!t1",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubaccountAppResult> InvokeAsync(GetSubaccountAppArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubaccountAppResult>("btp:index/getSubaccountApp:getSubaccountApp", args ?? new GetSubaccountAppArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details about a specific app.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var byId = Btp.GetSubaccountApp.Invoke(new()
        ///     {
        ///         Id = "xsuaa!t1",
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubaccountAppResult> Invoke(GetSubaccountAppInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubaccountAppResult>("btp:index/getSubaccountApp:getSubaccountApp", args ?? new GetSubaccountAppInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubaccountAppArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public string SubaccountId { get; set; } = null!;

        public GetSubaccountAppArgs()
        {
        }
        public static new GetSubaccountAppArgs Empty => new GetSubaccountAppArgs();
    }

    public sealed class GetSubaccountAppInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public Input<string> SubaccountId { get; set; } = null!;

        public GetSubaccountAppInvokeArgs()
        {
        }
        public static new GetSubaccountAppInvokeArgs Empty => new GetSubaccountAppInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubaccountAppResult
    {
        public readonly ImmutableArray<string> Authorities;
        /// <summary>
        /// The description of the app.
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<string> ForeignScopeReferences;
        /// <summary>
        /// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
        /// </summary>
        public readonly string Id;
        public readonly string MasterAppId;
        public readonly Outputs.GetSubaccountAppOauth2ConfigurationResult Oauth2Configuration;
        public readonly string OrgId;
        public readonly string PlanId;
        public readonly string PlanName;
        public readonly string ServiceinstanceId;
        public readonly string SpaceId;
        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        public readonly string SubaccountId;
        public readonly string TenantMode;
        public readonly string Username;
        public readonly string Xsappname;

        [OutputConstructor]
        private GetSubaccountAppResult(
            ImmutableArray<string> authorities,

            string description,

            ImmutableArray<string> foreignScopeReferences,

            string id,

            string masterAppId,

            Outputs.GetSubaccountAppOauth2ConfigurationResult oauth2Configuration,

            string orgId,

            string planId,

            string planName,

            string serviceinstanceId,

            string spaceId,

            string subaccountId,

            string tenantMode,

            string username,

            string xsappname)
        {
            Authorities = authorities;
            Description = description;
            ForeignScopeReferences = foreignScopeReferences;
            Id = id;
            MasterAppId = masterAppId;
            Oauth2Configuration = oauth2Configuration;
            OrgId = orgId;
            PlanId = planId;
            PlanName = planName;
            ServiceinstanceId = serviceinstanceId;
            SpaceId = spaceId;
            SubaccountId = subaccountId;
            TenantMode = tenantMode;
            Username = username;
            Xsappname = xsappname;
        }
    }
}
