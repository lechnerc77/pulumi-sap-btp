// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    public static class GetSubaccountEnvironments
    {
        /// <summary>
        /// Gets all the available environments for a subaccount.
        /// 
        /// This includes the environments, such as Cloud Foundry, which are available by default to all subaccounts, and those restricted environments, such as Kyma, which are offered in the product catalog as service entitlements and whose plans have already been assigned by a global account admin to the subaccount.
        /// 
        /// __Tip:__
        /// You must be assigned to the subaccount admin or viewer role.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Btp.GetSubaccountEnvironments.Invoke(new()
        ///     {
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSubaccountEnvironmentsResult> InvokeAsync(GetSubaccountEnvironmentsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubaccountEnvironmentsResult>("btp:index/getSubaccountEnvironments:getSubaccountEnvironments", args ?? new GetSubaccountEnvironmentsArgs(), options.WithDefaults());

        /// <summary>
        /// Gets all the available environments for a subaccount.
        /// 
        /// This includes the environments, such as Cloud Foundry, which are available by default to all subaccounts, and those restricted environments, such as Kyma, which are offered in the product catalog as service entitlements and whose plans have already been assigned by a global account admin to the subaccount.
        /// 
        /// __Tip:__
        /// You must be assigned to the subaccount admin or viewer role.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Btp.GetSubaccountEnvironments.Invoke(new()
        ///     {
        ///         SubaccountId = "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSubaccountEnvironmentsResult> Invoke(GetSubaccountEnvironmentsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubaccountEnvironmentsResult>("btp:index/getSubaccountEnvironments:getSubaccountEnvironments", args ?? new GetSubaccountEnvironmentsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubaccountEnvironmentsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public string SubaccountId { get; set; } = null!;

        public GetSubaccountEnvironmentsArgs()
        {
        }
        public static new GetSubaccountEnvironmentsArgs Empty => new GetSubaccountEnvironmentsArgs();
    }

    public sealed class GetSubaccountEnvironmentsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        [Input("subaccountId", required: true)]
        public Input<string> SubaccountId { get; set; } = null!;

        public GetSubaccountEnvironmentsInvokeArgs()
        {
        }
        public static new GetSubaccountEnvironmentsInvokeArgs Empty => new GetSubaccountEnvironmentsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubaccountEnvironmentsResult
    {
        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the subaccount.
        /// </summary>
        public readonly string SubaccountId;
        public readonly ImmutableArray<Outputs.GetSubaccountEnvironmentsValueResult> Values;

        [OutputConstructor]
        private GetSubaccountEnvironmentsResult(
            string id,

            string subaccountId,

            ImmutableArray<Outputs.GetSubaccountEnvironmentsValueResult> values)
        {
            Id = id;
            SubaccountId = subaccountId;
            Values = values;
        }
    }
}
