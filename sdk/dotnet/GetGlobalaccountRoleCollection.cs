// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    public static class GetGlobalaccountRoleCollection
    {
        /// <summary>
        /// Gets details about a specific global account role collection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var globalaccountAdmin = Btp.GetGlobalaccountRoleCollection.Invoke(new()
        ///     {
        ///         Name = "Global Account Administrator",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGlobalaccountRoleCollectionResult> InvokeAsync(GetGlobalaccountRoleCollectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGlobalaccountRoleCollectionResult>("btp:index/getGlobalaccountRoleCollection:getGlobalaccountRoleCollection", args ?? new GetGlobalaccountRoleCollectionArgs(), options.WithDefaults());

        /// <summary>
        /// Gets details about a specific global account role collection.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Btp = Pulumi.Btp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var globalaccountAdmin = Btp.GetGlobalaccountRoleCollection.Invoke(new()
        ///     {
        ///         Name = "Global Account Administrator",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetGlobalaccountRoleCollectionResult> Invoke(GetGlobalaccountRoleCollectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGlobalaccountRoleCollectionResult>("btp:index/getGlobalaccountRoleCollection:getGlobalaccountRoleCollection", args ?? new GetGlobalaccountRoleCollectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGlobalaccountRoleCollectionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the role collection.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetGlobalaccountRoleCollectionArgs()
        {
        }
        public static new GetGlobalaccountRoleCollectionArgs Empty => new GetGlobalaccountRoleCollectionArgs();
    }

    public sealed class GetGlobalaccountRoleCollectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the role collection.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetGlobalaccountRoleCollectionInvokeArgs()
        {
        }
        public static new GetGlobalaccountRoleCollectionInvokeArgs Empty => new GetGlobalaccountRoleCollectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetGlobalaccountRoleCollectionResult
    {
        /// <summary>
        /// The description of the role collection.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the global account.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the role collection.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Shows whether the role collection is read-only.
        /// </summary>
        public readonly bool ReadOnly;
        public readonly ImmutableArray<Outputs.GetGlobalaccountRoleCollectionRoleResult> Roles;

        [OutputConstructor]
        private GetGlobalaccountRoleCollectionResult(
            string description,

            string id,

            string name,

            bool readOnly,

            ImmutableArray<Outputs.GetGlobalaccountRoleCollectionRoleResult> roles)
        {
            Description = description;
            Id = id;
            Name = name;
            ReadOnly = readOnly;
            Roles = roles;
        }
    }
}
