// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace PulumiBtp.Btp
{
    /// <summary>
    /// Directories allow you to organize and manage your subaccounts according to your technical and business needs. The use of directories is optional.
    /// 
    /// You can create up to five levels of directories in your account hierarchy. If you have directories, you can still create subaccounts directly under your global account.
    /// 
    /// __Tips:__
    /// * You must be assigned to the global account admin role, or the directory admin if the directory is configured to manage its authorizations.
    /// * A directory path in the account hierarchy can have only one directory that is enabled with the `ENTITLEMENTS` or `AUTHORIZATIONS` features. If such a directory exists, other directories in that path can only be enabled with the `DEFAULT` features.
    /// 
    /// __Further documentation:__
    /// &lt;https://help.sap.com/docs/btp/sap-business-technology-platform/account-model&gt;
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Btp = PulumiBtp.Btp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Create a parent directory without features enabled
    ///     var parent = new Btp.Directory("parent", new()
    ///     {
    ///         Description = "This is a parent directory.",
    ///     });
    /// 
    ///     // Create a child directory underneath a parent directory without features enabled
    ///     var child = new Btp.Directory("child", new()
    ///     {
    ///         ParentId = parent.Id,
    ///         Description = "This is a child directory.",
    ///     });
    /// 
    ///     // Create a directory with ENTITLEMENT and AUTHORIZATIONS features enabled
    ///     var dirWithFeatures = new Btp.Directory("dirWithFeatures", new()
    ///     {
    ///         Description = "This is a directory with features.",
    ///         Features = new[]
    ///         {
    ///             "DEFAULT",
    ///             "ENTITLEMENTS",
    ///             "AUTHORIZATIONS",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// terraform
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/directory:Directory &lt;resource_name&gt; &lt;directory_id&gt;
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import btp:index/directory:Directory parent dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0
    /// ```
    /// </summary>
    [BtpResourceType("btp:index/directory:Directory")]
    public partial class Directory : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The details of the user that created the directory.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Output("createdDate")]
        public Output<string> CreatedDate { get; private set; } = null!;

        /// <summary>
        /// A description of the directory.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The features that are enabled for the directory. Possible values are:
        /// </summary>
        [Output("features")]
        public Output<ImmutableArray<string>> Features { get; private set; } = null!;

        /// <summary>
        /// Contains information about the labels assigned to a specified global account. Labels are represented in a JSON array of
        /// key-value pairs; each key has up to 10 corresponding values.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, ImmutableArray<string>>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Output("lastModified")]
        public Output<string> LastModified { get; private set; } = null!;

        /// <summary>
        /// The display name of the directory.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the directory's parent entity. Typically this is the global account.
        /// </summary>
        [Output("parentId")]
        public Output<string> ParentId { get; private set; } = null!;

        /// <summary>
        /// The current state of the directory. Possible values are: | value | description | | --- | --- | | `OK` | The CRUD
        /// operation or series of operations completed successfully. | | `STARTED` | CRUD operation on an entity has started. | |
        /// `CREATING` | Creating entity operation is in progress. | | `UPDATING` | Updating entity operation is in progress. | |
        /// `MOVING` | Moving entity operation is in progress. | | `PROCESSING` | A series of operations related to the entity is in
        /// progress. | | `DELETING` | Deleting entity operation is in progress. | | `PENDING REVIEW` | The processing operation has
        /// been stopped for reviewing and can be restarted by the operator. | | `CANCELLED` | The operation or processing was
        /// canceled by the operator. | | `CREATION_FAILED` | The creation operation failed, and the entity was not created or was
        /// created but cannot be used. | | `UPDATE_FAILED` | The update operation failed, and the entity was not updated. | |
        /// `PROCESSING_FAILED` | The processing operations failed. | | `DELETION_FAILED` | The delete operation failed, and the
        /// entity was not deleted. | | `MOVE_FAILED` | Entity could not be moved to a different location. | | `MIGRATING` |
        /// Migrating entity from Neo to Cloud Foundry. |
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Applies only to directories that have the user authorization management feature enabled. The subdomain becomes part of
        /// the path used to access the authorization tenant of the directory. It has to be unique within the defined region.
        /// </summary>
        [Output("subdomain")]
        public Output<string> Subdomain { get; private set; } = null!;


        /// <summary>
        /// Create a Directory resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Directory(string name, DirectoryArgs? args = null, CustomResourceOptions? options = null)
            : base("btp:index/directory:Directory", name, args ?? new DirectoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Directory(string name, Input<string> id, DirectoryState? state = null, CustomResourceOptions? options = null)
            : base("btp:index/directory:Directory", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/lechnerc77/pulumi-btp",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Directory resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Directory Get(string name, Input<string> id, DirectoryState? state = null, CustomResourceOptions? options = null)
        {
            return new Directory(name, id, state, options);
        }
    }

    public sealed class DirectoryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the directory.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("features")]
        private InputList<string>? _features;

        /// <summary>
        /// The features that are enabled for the directory. Possible values are:
        /// </summary>
        public InputList<string> Features
        {
            get => _features ?? (_features = new InputList<string>());
            set => _features = value;
        }

        [Input("labels")]
        private InputMap<ImmutableArray<string>>? _labels;

        /// <summary>
        /// Contains information about the labels assigned to a specified global account. Labels are represented in a JSON array of
        /// key-value pairs; each key has up to 10 corresponding values.
        /// </summary>
        public InputMap<ImmutableArray<string>> Labels
        {
            get => _labels ?? (_labels = new InputMap<ImmutableArray<string>>());
            set => _labels = value;
        }

        /// <summary>
        /// The display name of the directory.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the directory's parent entity. Typically this is the global account.
        /// </summary>
        [Input("parentId")]
        public Input<string>? ParentId { get; set; }

        /// <summary>
        /// Applies only to directories that have the user authorization management feature enabled. The subdomain becomes part of
        /// the path used to access the authorization tenant of the directory. It has to be unique within the defined region.
        /// </summary>
        [Input("subdomain")]
        public Input<string>? Subdomain { get; set; }

        public DirectoryArgs()
        {
        }
        public static new DirectoryArgs Empty => new DirectoryArgs();
    }

    public sealed class DirectoryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The details of the user that created the directory.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Input("createdDate")]
        public Input<string>? CreatedDate { get; set; }

        /// <summary>
        /// A description of the directory.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("features")]
        private InputList<string>? _features;

        /// <summary>
        /// The features that are enabled for the directory. Possible values are:
        /// </summary>
        public InputList<string> Features
        {
            get => _features ?? (_features = new InputList<string>());
            set => _features = value;
        }

        [Input("labels")]
        private InputMap<ImmutableArray<string>>? _labels;

        /// <summary>
        /// Contains information about the labels assigned to a specified global account. Labels are represented in a JSON array of
        /// key-value pairs; each key has up to 10 corresponding values.
        /// </summary>
        public InputMap<ImmutableArray<string>> Labels
        {
            get => _labels ?? (_labels = new InputMap<ImmutableArray<string>>());
            set => _labels = value;
        }

        /// <summary>
        /// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
        /// </summary>
        [Input("lastModified")]
        public Input<string>? LastModified { get; set; }

        /// <summary>
        /// The display name of the directory.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the directory's parent entity. Typically this is the global account.
        /// </summary>
        [Input("parentId")]
        public Input<string>? ParentId { get; set; }

        /// <summary>
        /// The current state of the directory. Possible values are: | value | description | | --- | --- | | `OK` | The CRUD
        /// operation or series of operations completed successfully. | | `STARTED` | CRUD operation on an entity has started. | |
        /// `CREATING` | Creating entity operation is in progress. | | `UPDATING` | Updating entity operation is in progress. | |
        /// `MOVING` | Moving entity operation is in progress. | | `PROCESSING` | A series of operations related to the entity is in
        /// progress. | | `DELETING` | Deleting entity operation is in progress. | | `PENDING REVIEW` | The processing operation has
        /// been stopped for reviewing and can be restarted by the operator. | | `CANCELLED` | The operation or processing was
        /// canceled by the operator. | | `CREATION_FAILED` | The creation operation failed, and the entity was not created or was
        /// created but cannot be used. | | `UPDATE_FAILED` | The update operation failed, and the entity was not updated. | |
        /// `PROCESSING_FAILED` | The processing operations failed. | | `DELETION_FAILED` | The delete operation failed, and the
        /// entity was not deleted. | | `MOVE_FAILED` | Entity could not be moved to a different location. | | `MIGRATING` |
        /// Migrating entity from Neo to Cloud Foundry. |
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Applies only to directories that have the user authorization management feature enabled. The subdomain becomes part of
        /// the path used to access the authorization tenant of the directory. It has to be unique within the defined region.
        /// </summary>
        [Input("subdomain")]
        public Input<string>? Subdomain { get; set; }

        public DirectoryState()
        {
        }
        public static new DirectoryState Empty => new DirectoryState();
    }
}
