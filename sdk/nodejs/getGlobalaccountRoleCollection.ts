// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Gets details about a specific global account role collection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const globalaccountAdmin = btp.getGlobalaccountRoleCollection({
 *     name: "Global Account Administrator",
 * });
 * ```
 */
export function getGlobalaccountRoleCollection(args: GetGlobalaccountRoleCollectionArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalaccountRoleCollectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("btp:index/getGlobalaccountRoleCollection:getGlobalaccountRoleCollection", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getGlobalaccountRoleCollection.
 */
export interface GetGlobalaccountRoleCollectionArgs {
    /**
     * The name of the role collection.
     */
    name: string;
}

/**
 * A collection of values returned by getGlobalaccountRoleCollection.
 */
export interface GetGlobalaccountRoleCollectionResult {
    /**
     * The description of the role collection.
     */
    readonly description: string;
    /**
     * The ID of the global account.
     *
     * @deprecated Use the `btp_globalaccount` datasource instead
     */
    readonly id: string;
    /**
     * The name of the role collection.
     */
    readonly name: string;
    /**
     * Shows whether the role collection is read-only.
     */
    readonly readOnly: boolean;
    readonly roles: outputs.GetGlobalaccountRoleCollectionRole[];
}
/**
 * Gets details about a specific global account role collection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const globalaccountAdmin = btp.getGlobalaccountRoleCollection({
 *     name: "Global Account Administrator",
 * });
 * ```
 */
export function getGlobalaccountRoleCollectionOutput(args: GetGlobalaccountRoleCollectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalaccountRoleCollectionResult> {
    return pulumi.output(args).apply((a: any) => getGlobalaccountRoleCollection(a, opts))
}

/**
 * A collection of arguments for invoking getGlobalaccountRoleCollection.
 */
export interface GetGlobalaccountRoleCollectionOutputArgs {
    /**
     * The name of the role collection.
     */
    name: pulumi.Input<string>;
}
