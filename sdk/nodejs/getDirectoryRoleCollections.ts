// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Gets all role collections.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const all = btp.getDirectoryRoleCollections({
 *     directoryId: "dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0",
 * });
 * ```
 */
export function getDirectoryRoleCollections(args: GetDirectoryRoleCollectionsArgs, opts?: pulumi.InvokeOptions): Promise<GetDirectoryRoleCollectionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("btp:index/getDirectoryRoleCollections:getDirectoryRoleCollections", {
        "directoryId": args.directoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDirectoryRoleCollections.
 */
export interface GetDirectoryRoleCollectionsArgs {
    /**
     * The ID of the directory.
     */
    directoryId: string;
}

/**
 * A collection of values returned by getDirectoryRoleCollections.
 */
export interface GetDirectoryRoleCollectionsResult {
    /**
     * The ID of the directory.
     */
    readonly directoryId: string;
    /**
     * The ID of the directory.
     *
     * @deprecated Use the `directory_id` attribute instead
     */
    readonly id: string;
    readonly values: outputs.GetDirectoryRoleCollectionsValue[];
}
/**
 * Gets all role collections.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const all = btp.getDirectoryRoleCollections({
 *     directoryId: "dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0",
 * });
 * ```
 */
export function getDirectoryRoleCollectionsOutput(args: GetDirectoryRoleCollectionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDirectoryRoleCollectionsResult> {
    return pulumi.output(args).apply((a: any) => getDirectoryRoleCollections(a, opts))
}

/**
 * A collection of arguments for invoking getDirectoryRoleCollections.
 */
export interface GetDirectoryRoleCollectionsOutputArgs {
    /**
     * The ID of the directory.
     */
    directoryId: pulumi.Input<string>;
}
