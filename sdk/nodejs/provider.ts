// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the btp package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'btp';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * The URL of the BTP CLI server (e.g. `https://cli.btp.cloud.sap`).
     */
    public readonly cliServerUrl!: pulumi.Output<string | undefined>;
    /**
     * The subdomain of the global account in which you want to manage resources. To be found in the cockpit, in the global
     * account view.
     */
    public readonly globalaccount!: pulumi.Output<string>;
    /**
     * The identity provider to be used for authentication (only required for custom idp).
     */
    public readonly idp!: pulumi.Output<string | undefined>;
    /**
     * A valid id token. To be provided instead of 'username' and 'password'. This can also be sourced from the `BTP_IDTOKEN`
     * environment variable. (SAP-internal usage only)
     */
    public readonly idtoken!: pulumi.Output<string | undefined>;
    /**
     * Your password. Note that two-factor authentication is not supported. This can also be sourced from the `BTP_PASSWORD`
     * environment variable.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * PEM encoded certificate (only required for x509 auth).
     */
    public readonly tlsClientCertificate!: pulumi.Output<string | undefined>;
    /**
     * PEM encoded private key (only required for x509 auth).
     */
    public readonly tlsClientKey!: pulumi.Output<string | undefined>;
    /**
     * The URL of the identity provider to be used for authentication (only required for x509 auth).
     */
    public readonly tlsIdpUrl!: pulumi.Output<string | undefined>;
    /**
     * Your user name, usually an e-mail address. This can also be sourced from the `BTP_USERNAME` environment variable.
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            if ((!args || args.globalaccount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'globalaccount'");
            }
            resourceInputs["cliServerUrl"] = args ? args.cliServerUrl : undefined;
            resourceInputs["globalaccount"] = args ? args.globalaccount : undefined;
            resourceInputs["idp"] = args ? args.idp : undefined;
            resourceInputs["idtoken"] = args?.idtoken ? pulumi.secret(args.idtoken) : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["tlsClientCertificate"] = args ? args.tlsClientCertificate : undefined;
            resourceInputs["tlsClientKey"] = args ? args.tlsClientKey : undefined;
            resourceInputs["tlsIdpUrl"] = args ? args.tlsIdpUrl : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["idtoken", "password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * The URL of the BTP CLI server (e.g. `https://cli.btp.cloud.sap`).
     */
    cliServerUrl?: pulumi.Input<string>;
    /**
     * The subdomain of the global account in which you want to manage resources. To be found in the cockpit, in the global
     * account view.
     */
    globalaccount: pulumi.Input<string>;
    /**
     * The identity provider to be used for authentication (only required for custom idp).
     */
    idp?: pulumi.Input<string>;
    /**
     * A valid id token. To be provided instead of 'username' and 'password'. This can also be sourced from the `BTP_IDTOKEN`
     * environment variable. (SAP-internal usage only)
     */
    idtoken?: pulumi.Input<string>;
    /**
     * Your password. Note that two-factor authentication is not supported. This can also be sourced from the `BTP_PASSWORD`
     * environment variable.
     */
    password?: pulumi.Input<string>;
    /**
     * PEM encoded certificate (only required for x509 auth).
     */
    tlsClientCertificate?: pulumi.Input<string>;
    /**
     * PEM encoded private key (only required for x509 auth).
     */
    tlsClientKey?: pulumi.Input<string>;
    /**
     * The URL of the identity provider to be used for authentication (only required for x509 auth).
     */
    tlsIdpUrl?: pulumi.Input<string>;
    /**
     * Your user name, usually an e-mail address. This can also be sourced from the `BTP_USERNAME` environment variable.
     */
    username?: pulumi.Input<string>;
}
