// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export { DirectoryArgs, DirectoryState } from "./directory";
export type Directory = import("./directory").Directory;
export const Directory: typeof import("./directory").Directory = null as any;
utilities.lazyLoad(exports, ["Directory"], () => require("./directory"));

export { DirectoryEntitlementArgs, DirectoryEntitlementState } from "./directoryEntitlement";
export type DirectoryEntitlement = import("./directoryEntitlement").DirectoryEntitlement;
export const DirectoryEntitlement: typeof import("./directoryEntitlement").DirectoryEntitlement = null as any;
utilities.lazyLoad(exports, ["DirectoryEntitlement"], () => require("./directoryEntitlement"));

export { DirectoryRoleCollectionArgs, DirectoryRoleCollectionState } from "./directoryRoleCollection";
export type DirectoryRoleCollection = import("./directoryRoleCollection").DirectoryRoleCollection;
export const DirectoryRoleCollection: typeof import("./directoryRoleCollection").DirectoryRoleCollection = null as any;
utilities.lazyLoad(exports, ["DirectoryRoleCollection"], () => require("./directoryRoleCollection"));

export { DirectoryRoleCollectionAssignmentArgs, DirectoryRoleCollectionAssignmentState } from "./directoryRoleCollectionAssignment";
export type DirectoryRoleCollectionAssignment = import("./directoryRoleCollectionAssignment").DirectoryRoleCollectionAssignment;
export const DirectoryRoleCollectionAssignment: typeof import("./directoryRoleCollectionAssignment").DirectoryRoleCollectionAssignment = null as any;
utilities.lazyLoad(exports, ["DirectoryRoleCollectionAssignment"], () => require("./directoryRoleCollectionAssignment"));

export { GetDirectoryArgs, GetDirectoryResult, GetDirectoryOutputArgs } from "./getDirectory";
export const getDirectory: typeof import("./getDirectory").getDirectory = null as any;
export const getDirectoryOutput: typeof import("./getDirectory").getDirectoryOutput = null as any;
utilities.lazyLoad(exports, ["getDirectory","getDirectoryOutput"], () => require("./getDirectory"));

export { GetDirectoryEntitlementsArgs, GetDirectoryEntitlementsResult, GetDirectoryEntitlementsOutputArgs } from "./getDirectoryEntitlements";
export const getDirectoryEntitlements: typeof import("./getDirectoryEntitlements").getDirectoryEntitlements = null as any;
export const getDirectoryEntitlementsOutput: typeof import("./getDirectoryEntitlements").getDirectoryEntitlementsOutput = null as any;
utilities.lazyLoad(exports, ["getDirectoryEntitlements","getDirectoryEntitlementsOutput"], () => require("./getDirectoryEntitlements"));

export { GetDirectoryLabelsArgs, GetDirectoryLabelsResult, GetDirectoryLabelsOutputArgs } from "./getDirectoryLabels";
export const getDirectoryLabels: typeof import("./getDirectoryLabels").getDirectoryLabels = null as any;
export const getDirectoryLabelsOutput: typeof import("./getDirectoryLabels").getDirectoryLabelsOutput = null as any;
utilities.lazyLoad(exports, ["getDirectoryLabels","getDirectoryLabelsOutput"], () => require("./getDirectoryLabels"));

export { GetDirectoryRoleArgs, GetDirectoryRoleResult, GetDirectoryRoleOutputArgs } from "./getDirectoryRole";
export const getDirectoryRole: typeof import("./getDirectoryRole").getDirectoryRole = null as any;
export const getDirectoryRoleOutput: typeof import("./getDirectoryRole").getDirectoryRoleOutput = null as any;
utilities.lazyLoad(exports, ["getDirectoryRole","getDirectoryRoleOutput"], () => require("./getDirectoryRole"));

export { GetDirectoryRoleCollectionArgs, GetDirectoryRoleCollectionResult, GetDirectoryRoleCollectionOutputArgs } from "./getDirectoryRoleCollection";
export const getDirectoryRoleCollection: typeof import("./getDirectoryRoleCollection").getDirectoryRoleCollection = null as any;
export const getDirectoryRoleCollectionOutput: typeof import("./getDirectoryRoleCollection").getDirectoryRoleCollectionOutput = null as any;
utilities.lazyLoad(exports, ["getDirectoryRoleCollection","getDirectoryRoleCollectionOutput"], () => require("./getDirectoryRoleCollection"));

export { GetDirectoryRoleCollectionsArgs, GetDirectoryRoleCollectionsResult, GetDirectoryRoleCollectionsOutputArgs } from "./getDirectoryRoleCollections";
export const getDirectoryRoleCollections: typeof import("./getDirectoryRoleCollections").getDirectoryRoleCollections = null as any;
export const getDirectoryRoleCollectionsOutput: typeof import("./getDirectoryRoleCollections").getDirectoryRoleCollectionsOutput = null as any;
utilities.lazyLoad(exports, ["getDirectoryRoleCollections","getDirectoryRoleCollectionsOutput"], () => require("./getDirectoryRoleCollections"));

export { GetDirectoryRolesArgs, GetDirectoryRolesResult, GetDirectoryRolesOutputArgs } from "./getDirectoryRoles";
export const getDirectoryRoles: typeof import("./getDirectoryRoles").getDirectoryRoles = null as any;
export const getDirectoryRolesOutput: typeof import("./getDirectoryRoles").getDirectoryRolesOutput = null as any;
utilities.lazyLoad(exports, ["getDirectoryRoles","getDirectoryRolesOutput"], () => require("./getDirectoryRoles"));

export { GetDirectoryUserArgs, GetDirectoryUserResult, GetDirectoryUserOutputArgs } from "./getDirectoryUser";
export const getDirectoryUser: typeof import("./getDirectoryUser").getDirectoryUser = null as any;
export const getDirectoryUserOutput: typeof import("./getDirectoryUser").getDirectoryUserOutput = null as any;
utilities.lazyLoad(exports, ["getDirectoryUser","getDirectoryUserOutput"], () => require("./getDirectoryUser"));

export { GetDirectoryUsersArgs, GetDirectoryUsersResult, GetDirectoryUsersOutputArgs } from "./getDirectoryUsers";
export const getDirectoryUsers: typeof import("./getDirectoryUsers").getDirectoryUsers = null as any;
export const getDirectoryUsersOutput: typeof import("./getDirectoryUsers").getDirectoryUsersOutput = null as any;
utilities.lazyLoad(exports, ["getDirectoryUsers","getDirectoryUsersOutput"], () => require("./getDirectoryUsers"));

export { GetGlobalaccountResult } from "./getGlobalaccount";
export const getGlobalaccount: typeof import("./getGlobalaccount").getGlobalaccount = null as any;
export const getGlobalaccountOutput: typeof import("./getGlobalaccount").getGlobalaccountOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccount","getGlobalaccountOutput"], () => require("./getGlobalaccount"));

export { GetGlobalaccountEntitlementsResult } from "./getGlobalaccountEntitlements";
export const getGlobalaccountEntitlements: typeof import("./getGlobalaccountEntitlements").getGlobalaccountEntitlements = null as any;
export const getGlobalaccountEntitlementsOutput: typeof import("./getGlobalaccountEntitlements").getGlobalaccountEntitlementsOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccountEntitlements","getGlobalaccountEntitlementsOutput"], () => require("./getGlobalaccountEntitlements"));

export { GetGlobalaccountRoleArgs, GetGlobalaccountRoleResult, GetGlobalaccountRoleOutputArgs } from "./getGlobalaccountRole";
export const getGlobalaccountRole: typeof import("./getGlobalaccountRole").getGlobalaccountRole = null as any;
export const getGlobalaccountRoleOutput: typeof import("./getGlobalaccountRole").getGlobalaccountRoleOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccountRole","getGlobalaccountRoleOutput"], () => require("./getGlobalaccountRole"));

export { GetGlobalaccountRoleCollectionArgs, GetGlobalaccountRoleCollectionResult, GetGlobalaccountRoleCollectionOutputArgs } from "./getGlobalaccountRoleCollection";
export const getGlobalaccountRoleCollection: typeof import("./getGlobalaccountRoleCollection").getGlobalaccountRoleCollection = null as any;
export const getGlobalaccountRoleCollectionOutput: typeof import("./getGlobalaccountRoleCollection").getGlobalaccountRoleCollectionOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccountRoleCollection","getGlobalaccountRoleCollectionOutput"], () => require("./getGlobalaccountRoleCollection"));

export { GetGlobalaccountRoleCollectionsResult } from "./getGlobalaccountRoleCollections";
export const getGlobalaccountRoleCollections: typeof import("./getGlobalaccountRoleCollections").getGlobalaccountRoleCollections = null as any;
export const getGlobalaccountRoleCollectionsOutput: typeof import("./getGlobalaccountRoleCollections").getGlobalaccountRoleCollectionsOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccountRoleCollections","getGlobalaccountRoleCollectionsOutput"], () => require("./getGlobalaccountRoleCollections"));

export { GetGlobalaccountRolesResult } from "./getGlobalaccountRoles";
export const getGlobalaccountRoles: typeof import("./getGlobalaccountRoles").getGlobalaccountRoles = null as any;
export const getGlobalaccountRolesOutput: typeof import("./getGlobalaccountRoles").getGlobalaccountRolesOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccountRoles","getGlobalaccountRolesOutput"], () => require("./getGlobalaccountRoles"));

export { GetGlobalaccountTrustConfigurationArgs, GetGlobalaccountTrustConfigurationResult, GetGlobalaccountTrustConfigurationOutputArgs } from "./getGlobalaccountTrustConfiguration";
export const getGlobalaccountTrustConfiguration: typeof import("./getGlobalaccountTrustConfiguration").getGlobalaccountTrustConfiguration = null as any;
export const getGlobalaccountTrustConfigurationOutput: typeof import("./getGlobalaccountTrustConfiguration").getGlobalaccountTrustConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccountTrustConfiguration","getGlobalaccountTrustConfigurationOutput"], () => require("./getGlobalaccountTrustConfiguration"));

export { GetGlobalaccountTrustConfigurationsResult } from "./getGlobalaccountTrustConfigurations";
export const getGlobalaccountTrustConfigurations: typeof import("./getGlobalaccountTrustConfigurations").getGlobalaccountTrustConfigurations = null as any;
export const getGlobalaccountTrustConfigurationsOutput: typeof import("./getGlobalaccountTrustConfigurations").getGlobalaccountTrustConfigurationsOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccountTrustConfigurations","getGlobalaccountTrustConfigurationsOutput"], () => require("./getGlobalaccountTrustConfigurations"));

export { GetGlobalaccountUserArgs, GetGlobalaccountUserResult, GetGlobalaccountUserOutputArgs } from "./getGlobalaccountUser";
export const getGlobalaccountUser: typeof import("./getGlobalaccountUser").getGlobalaccountUser = null as any;
export const getGlobalaccountUserOutput: typeof import("./getGlobalaccountUser").getGlobalaccountUserOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccountUser","getGlobalaccountUserOutput"], () => require("./getGlobalaccountUser"));

export { GetGlobalaccountUsersArgs, GetGlobalaccountUsersResult, GetGlobalaccountUsersOutputArgs } from "./getGlobalaccountUsers";
export const getGlobalaccountUsers: typeof import("./getGlobalaccountUsers").getGlobalaccountUsers = null as any;
export const getGlobalaccountUsersOutput: typeof import("./getGlobalaccountUsers").getGlobalaccountUsersOutput = null as any;
utilities.lazyLoad(exports, ["getGlobalaccountUsers","getGlobalaccountUsersOutput"], () => require("./getGlobalaccountUsers"));

export { GetRegionsResult } from "./getRegions";
export const getRegions: typeof import("./getRegions").getRegions = null as any;
export const getRegionsOutput: typeof import("./getRegions").getRegionsOutput = null as any;
utilities.lazyLoad(exports, ["getRegions","getRegionsOutput"], () => require("./getRegions"));

export { GetSubaccountArgs, GetSubaccountResult, GetSubaccountOutputArgs } from "./getSubaccount";
export const getSubaccount: typeof import("./getSubaccount").getSubaccount = null as any;
export const getSubaccountOutput: typeof import("./getSubaccount").getSubaccountOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccount","getSubaccountOutput"], () => require("./getSubaccount"));

export { GetSubaccountAppArgs, GetSubaccountAppResult, GetSubaccountAppOutputArgs } from "./getSubaccountApp";
export const getSubaccountApp: typeof import("./getSubaccountApp").getSubaccountApp = null as any;
export const getSubaccountAppOutput: typeof import("./getSubaccountApp").getSubaccountAppOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountApp","getSubaccountAppOutput"], () => require("./getSubaccountApp"));

export { GetSubaccountAppsArgs, GetSubaccountAppsResult, GetSubaccountAppsOutputArgs } from "./getSubaccountApps";
export const getSubaccountApps: typeof import("./getSubaccountApps").getSubaccountApps = null as any;
export const getSubaccountAppsOutput: typeof import("./getSubaccountApps").getSubaccountAppsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountApps","getSubaccountAppsOutput"], () => require("./getSubaccountApps"));

export { GetSubaccountEntitlementsArgs, GetSubaccountEntitlementsResult, GetSubaccountEntitlementsOutputArgs } from "./getSubaccountEntitlements";
export const getSubaccountEntitlements: typeof import("./getSubaccountEntitlements").getSubaccountEntitlements = null as any;
export const getSubaccountEntitlementsOutput: typeof import("./getSubaccountEntitlements").getSubaccountEntitlementsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountEntitlements","getSubaccountEntitlementsOutput"], () => require("./getSubaccountEntitlements"));

export { GetSubaccountEnvironmentInstanceArgs, GetSubaccountEnvironmentInstanceResult, GetSubaccountEnvironmentInstanceOutputArgs } from "./getSubaccountEnvironmentInstance";
export const getSubaccountEnvironmentInstance: typeof import("./getSubaccountEnvironmentInstance").getSubaccountEnvironmentInstance = null as any;
export const getSubaccountEnvironmentInstanceOutput: typeof import("./getSubaccountEnvironmentInstance").getSubaccountEnvironmentInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountEnvironmentInstance","getSubaccountEnvironmentInstanceOutput"], () => require("./getSubaccountEnvironmentInstance"));

export { GetSubaccountEnvironmentInstancesArgs, GetSubaccountEnvironmentInstancesResult, GetSubaccountEnvironmentInstancesOutputArgs } from "./getSubaccountEnvironmentInstances";
export const getSubaccountEnvironmentInstances: typeof import("./getSubaccountEnvironmentInstances").getSubaccountEnvironmentInstances = null as any;
export const getSubaccountEnvironmentInstancesOutput: typeof import("./getSubaccountEnvironmentInstances").getSubaccountEnvironmentInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountEnvironmentInstances","getSubaccountEnvironmentInstancesOutput"], () => require("./getSubaccountEnvironmentInstances"));

export { GetSubaccountEnvironmentsArgs, GetSubaccountEnvironmentsResult, GetSubaccountEnvironmentsOutputArgs } from "./getSubaccountEnvironments";
export const getSubaccountEnvironments: typeof import("./getSubaccountEnvironments").getSubaccountEnvironments = null as any;
export const getSubaccountEnvironmentsOutput: typeof import("./getSubaccountEnvironments").getSubaccountEnvironmentsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountEnvironments","getSubaccountEnvironmentsOutput"], () => require("./getSubaccountEnvironments"));

export { GetSubaccountLabelsArgs, GetSubaccountLabelsResult, GetSubaccountLabelsOutputArgs } from "./getSubaccountLabels";
export const getSubaccountLabels: typeof import("./getSubaccountLabels").getSubaccountLabels = null as any;
export const getSubaccountLabelsOutput: typeof import("./getSubaccountLabels").getSubaccountLabelsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountLabels","getSubaccountLabelsOutput"], () => require("./getSubaccountLabels"));

export { GetSubaccountRoleArgs, GetSubaccountRoleResult, GetSubaccountRoleOutputArgs } from "./getSubaccountRole";
export const getSubaccountRole: typeof import("./getSubaccountRole").getSubaccountRole = null as any;
export const getSubaccountRoleOutput: typeof import("./getSubaccountRole").getSubaccountRoleOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountRole","getSubaccountRoleOutput"], () => require("./getSubaccountRole"));

export { GetSubaccountRoleCollectionArgs, GetSubaccountRoleCollectionResult, GetSubaccountRoleCollectionOutputArgs } from "./getSubaccountRoleCollection";
export const getSubaccountRoleCollection: typeof import("./getSubaccountRoleCollection").getSubaccountRoleCollection = null as any;
export const getSubaccountRoleCollectionOutput: typeof import("./getSubaccountRoleCollection").getSubaccountRoleCollectionOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountRoleCollection","getSubaccountRoleCollectionOutput"], () => require("./getSubaccountRoleCollection"));

export { GetSubaccountRoleCollectionsArgs, GetSubaccountRoleCollectionsResult, GetSubaccountRoleCollectionsOutputArgs } from "./getSubaccountRoleCollections";
export const getSubaccountRoleCollections: typeof import("./getSubaccountRoleCollections").getSubaccountRoleCollections = null as any;
export const getSubaccountRoleCollectionsOutput: typeof import("./getSubaccountRoleCollections").getSubaccountRoleCollectionsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountRoleCollections","getSubaccountRoleCollectionsOutput"], () => require("./getSubaccountRoleCollections"));

export { GetSubaccountRolesArgs, GetSubaccountRolesResult, GetSubaccountRolesOutputArgs } from "./getSubaccountRoles";
export const getSubaccountRoles: typeof import("./getSubaccountRoles").getSubaccountRoles = null as any;
export const getSubaccountRolesOutput: typeof import("./getSubaccountRoles").getSubaccountRolesOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountRoles","getSubaccountRolesOutput"], () => require("./getSubaccountRoles"));

export { GetSubaccountServiceBindingArgs, GetSubaccountServiceBindingResult, GetSubaccountServiceBindingOutputArgs } from "./getSubaccountServiceBinding";
export const getSubaccountServiceBinding: typeof import("./getSubaccountServiceBinding").getSubaccountServiceBinding = null as any;
export const getSubaccountServiceBindingOutput: typeof import("./getSubaccountServiceBinding").getSubaccountServiceBindingOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountServiceBinding","getSubaccountServiceBindingOutput"], () => require("./getSubaccountServiceBinding"));

export { GetSubaccountServiceBindingsArgs, GetSubaccountServiceBindingsResult, GetSubaccountServiceBindingsOutputArgs } from "./getSubaccountServiceBindings";
export const getSubaccountServiceBindings: typeof import("./getSubaccountServiceBindings").getSubaccountServiceBindings = null as any;
export const getSubaccountServiceBindingsOutput: typeof import("./getSubaccountServiceBindings").getSubaccountServiceBindingsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountServiceBindings","getSubaccountServiceBindingsOutput"], () => require("./getSubaccountServiceBindings"));

export { GetSubaccountServiceInstanceArgs, GetSubaccountServiceInstanceResult, GetSubaccountServiceInstanceOutputArgs } from "./getSubaccountServiceInstance";
export const getSubaccountServiceInstance: typeof import("./getSubaccountServiceInstance").getSubaccountServiceInstance = null as any;
export const getSubaccountServiceInstanceOutput: typeof import("./getSubaccountServiceInstance").getSubaccountServiceInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountServiceInstance","getSubaccountServiceInstanceOutput"], () => require("./getSubaccountServiceInstance"));

export { GetSubaccountServiceInstancesArgs, GetSubaccountServiceInstancesResult, GetSubaccountServiceInstancesOutputArgs } from "./getSubaccountServiceInstances";
export const getSubaccountServiceInstances: typeof import("./getSubaccountServiceInstances").getSubaccountServiceInstances = null as any;
export const getSubaccountServiceInstancesOutput: typeof import("./getSubaccountServiceInstances").getSubaccountServiceInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountServiceInstances","getSubaccountServiceInstancesOutput"], () => require("./getSubaccountServiceInstances"));

export { GetSubaccountServiceOfferingArgs, GetSubaccountServiceOfferingResult, GetSubaccountServiceOfferingOutputArgs } from "./getSubaccountServiceOffering";
export const getSubaccountServiceOffering: typeof import("./getSubaccountServiceOffering").getSubaccountServiceOffering = null as any;
export const getSubaccountServiceOfferingOutput: typeof import("./getSubaccountServiceOffering").getSubaccountServiceOfferingOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountServiceOffering","getSubaccountServiceOfferingOutput"], () => require("./getSubaccountServiceOffering"));

export { GetSubaccountServiceOfferingsArgs, GetSubaccountServiceOfferingsResult, GetSubaccountServiceOfferingsOutputArgs } from "./getSubaccountServiceOfferings";
export const getSubaccountServiceOfferings: typeof import("./getSubaccountServiceOfferings").getSubaccountServiceOfferings = null as any;
export const getSubaccountServiceOfferingsOutput: typeof import("./getSubaccountServiceOfferings").getSubaccountServiceOfferingsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountServiceOfferings","getSubaccountServiceOfferingsOutput"], () => require("./getSubaccountServiceOfferings"));

export { GetSubaccountServicePlanArgs, GetSubaccountServicePlanResult, GetSubaccountServicePlanOutputArgs } from "./getSubaccountServicePlan";
export const getSubaccountServicePlan: typeof import("./getSubaccountServicePlan").getSubaccountServicePlan = null as any;
export const getSubaccountServicePlanOutput: typeof import("./getSubaccountServicePlan").getSubaccountServicePlanOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountServicePlan","getSubaccountServicePlanOutput"], () => require("./getSubaccountServicePlan"));

export { GetSubaccountServicePlansArgs, GetSubaccountServicePlansResult, GetSubaccountServicePlansOutputArgs } from "./getSubaccountServicePlans";
export const getSubaccountServicePlans: typeof import("./getSubaccountServicePlans").getSubaccountServicePlans = null as any;
export const getSubaccountServicePlansOutput: typeof import("./getSubaccountServicePlans").getSubaccountServicePlansOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountServicePlans","getSubaccountServicePlansOutput"], () => require("./getSubaccountServicePlans"));

export { GetSubaccountSubscriptionArgs, GetSubaccountSubscriptionResult, GetSubaccountSubscriptionOutputArgs } from "./getSubaccountSubscription";
export const getSubaccountSubscription: typeof import("./getSubaccountSubscription").getSubaccountSubscription = null as any;
export const getSubaccountSubscriptionOutput: typeof import("./getSubaccountSubscription").getSubaccountSubscriptionOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountSubscription","getSubaccountSubscriptionOutput"], () => require("./getSubaccountSubscription"));

export { GetSubaccountSubscriptionsArgs, GetSubaccountSubscriptionsResult, GetSubaccountSubscriptionsOutputArgs } from "./getSubaccountSubscriptions";
export const getSubaccountSubscriptions: typeof import("./getSubaccountSubscriptions").getSubaccountSubscriptions = null as any;
export const getSubaccountSubscriptionsOutput: typeof import("./getSubaccountSubscriptions").getSubaccountSubscriptionsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountSubscriptions","getSubaccountSubscriptionsOutput"], () => require("./getSubaccountSubscriptions"));

export { GetSubaccountTrustConfigurationArgs, GetSubaccountTrustConfigurationResult, GetSubaccountTrustConfigurationOutputArgs } from "./getSubaccountTrustConfiguration";
export const getSubaccountTrustConfiguration: typeof import("./getSubaccountTrustConfiguration").getSubaccountTrustConfiguration = null as any;
export const getSubaccountTrustConfigurationOutput: typeof import("./getSubaccountTrustConfiguration").getSubaccountTrustConfigurationOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountTrustConfiguration","getSubaccountTrustConfigurationOutput"], () => require("./getSubaccountTrustConfiguration"));

export { GetSubaccountTrustConfigurationsArgs, GetSubaccountTrustConfigurationsResult, GetSubaccountTrustConfigurationsOutputArgs } from "./getSubaccountTrustConfigurations";
export const getSubaccountTrustConfigurations: typeof import("./getSubaccountTrustConfigurations").getSubaccountTrustConfigurations = null as any;
export const getSubaccountTrustConfigurationsOutput: typeof import("./getSubaccountTrustConfigurations").getSubaccountTrustConfigurationsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountTrustConfigurations","getSubaccountTrustConfigurationsOutput"], () => require("./getSubaccountTrustConfigurations"));

export { GetSubaccountUserArgs, GetSubaccountUserResult, GetSubaccountUserOutputArgs } from "./getSubaccountUser";
export const getSubaccountUser: typeof import("./getSubaccountUser").getSubaccountUser = null as any;
export const getSubaccountUserOutput: typeof import("./getSubaccountUser").getSubaccountUserOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountUser","getSubaccountUserOutput"], () => require("./getSubaccountUser"));

export { GetSubaccountUsersArgs, GetSubaccountUsersResult, GetSubaccountUsersOutputArgs } from "./getSubaccountUsers";
export const getSubaccountUsers: typeof import("./getSubaccountUsers").getSubaccountUsers = null as any;
export const getSubaccountUsersOutput: typeof import("./getSubaccountUsers").getSubaccountUsersOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccountUsers","getSubaccountUsersOutput"], () => require("./getSubaccountUsers"));

export { GetSubaccountsArgs, GetSubaccountsResult, GetSubaccountsOutputArgs } from "./getSubaccounts";
export const getSubaccounts: typeof import("./getSubaccounts").getSubaccounts = null as any;
export const getSubaccountsOutput: typeof import("./getSubaccounts").getSubaccountsOutput = null as any;
utilities.lazyLoad(exports, ["getSubaccounts","getSubaccountsOutput"], () => require("./getSubaccounts"));

export { GetWhoamiResult } from "./getWhoami";
export const getWhoami: typeof import("./getWhoami").getWhoami = null as any;
export const getWhoamiOutput: typeof import("./getWhoami").getWhoamiOutput = null as any;
utilities.lazyLoad(exports, ["getWhoami","getWhoamiOutput"], () => require("./getWhoami"));

export { GlobalaccountResourceProviderArgs, GlobalaccountResourceProviderState } from "./globalaccountResourceProvider";
export type GlobalaccountResourceProvider = import("./globalaccountResourceProvider").GlobalaccountResourceProvider;
export const GlobalaccountResourceProvider: typeof import("./globalaccountResourceProvider").GlobalaccountResourceProvider = null as any;
utilities.lazyLoad(exports, ["GlobalaccountResourceProvider"], () => require("./globalaccountResourceProvider"));

export { GlobalaccountRoleCollectionArgs, GlobalaccountRoleCollectionState } from "./globalaccountRoleCollection";
export type GlobalaccountRoleCollection = import("./globalaccountRoleCollection").GlobalaccountRoleCollection;
export const GlobalaccountRoleCollection: typeof import("./globalaccountRoleCollection").GlobalaccountRoleCollection = null as any;
utilities.lazyLoad(exports, ["GlobalaccountRoleCollection"], () => require("./globalaccountRoleCollection"));

export { GlobalaccountRoleCollectionAssignmentArgs, GlobalaccountRoleCollectionAssignmentState } from "./globalaccountRoleCollectionAssignment";
export type GlobalaccountRoleCollectionAssignment = import("./globalaccountRoleCollectionAssignment").GlobalaccountRoleCollectionAssignment;
export const GlobalaccountRoleCollectionAssignment: typeof import("./globalaccountRoleCollectionAssignment").GlobalaccountRoleCollectionAssignment = null as any;
utilities.lazyLoad(exports, ["GlobalaccountRoleCollectionAssignment"], () => require("./globalaccountRoleCollectionAssignment"));

export { GlobalaccountTrustConfigurationArgs, GlobalaccountTrustConfigurationState } from "./globalaccountTrustConfiguration";
export type GlobalaccountTrustConfiguration = import("./globalaccountTrustConfiguration").GlobalaccountTrustConfiguration;
export const GlobalaccountTrustConfiguration: typeof import("./globalaccountTrustConfiguration").GlobalaccountTrustConfiguration = null as any;
utilities.lazyLoad(exports, ["GlobalaccountTrustConfiguration"], () => require("./globalaccountTrustConfiguration"));

export { ProviderArgs } from "./provider";
export type Provider = import("./provider").Provider;
export const Provider: typeof import("./provider").Provider = null as any;
utilities.lazyLoad(exports, ["Provider"], () => require("./provider"));

export { SubaccountArgs, SubaccountState } from "./subaccount";
export type Subaccount = import("./subaccount").Subaccount;
export const Subaccount: typeof import("./subaccount").Subaccount = null as any;
utilities.lazyLoad(exports, ["Subaccount"], () => require("./subaccount"));

export { SubaccountEntitlementArgs, SubaccountEntitlementState } from "./subaccountEntitlement";
export type SubaccountEntitlement = import("./subaccountEntitlement").SubaccountEntitlement;
export const SubaccountEntitlement: typeof import("./subaccountEntitlement").SubaccountEntitlement = null as any;
utilities.lazyLoad(exports, ["SubaccountEntitlement"], () => require("./subaccountEntitlement"));

export { SubaccountEnvironmentInstanceArgs, SubaccountEnvironmentInstanceState } from "./subaccountEnvironmentInstance";
export type SubaccountEnvironmentInstance = import("./subaccountEnvironmentInstance").SubaccountEnvironmentInstance;
export const SubaccountEnvironmentInstance: typeof import("./subaccountEnvironmentInstance").SubaccountEnvironmentInstance = null as any;
utilities.lazyLoad(exports, ["SubaccountEnvironmentInstance"], () => require("./subaccountEnvironmentInstance"));

export { SubaccountRoleCollectionArgs, SubaccountRoleCollectionState } from "./subaccountRoleCollection";
export type SubaccountRoleCollection = import("./subaccountRoleCollection").SubaccountRoleCollection;
export const SubaccountRoleCollection: typeof import("./subaccountRoleCollection").SubaccountRoleCollection = null as any;
utilities.lazyLoad(exports, ["SubaccountRoleCollection"], () => require("./subaccountRoleCollection"));

export { SubaccountRoleCollectionAssignmentArgs, SubaccountRoleCollectionAssignmentState } from "./subaccountRoleCollectionAssignment";
export type SubaccountRoleCollectionAssignment = import("./subaccountRoleCollectionAssignment").SubaccountRoleCollectionAssignment;
export const SubaccountRoleCollectionAssignment: typeof import("./subaccountRoleCollectionAssignment").SubaccountRoleCollectionAssignment = null as any;
utilities.lazyLoad(exports, ["SubaccountRoleCollectionAssignment"], () => require("./subaccountRoleCollectionAssignment"));

export { SubaccountServiceBindingArgs, SubaccountServiceBindingState } from "./subaccountServiceBinding";
export type SubaccountServiceBinding = import("./subaccountServiceBinding").SubaccountServiceBinding;
export const SubaccountServiceBinding: typeof import("./subaccountServiceBinding").SubaccountServiceBinding = null as any;
utilities.lazyLoad(exports, ["SubaccountServiceBinding"], () => require("./subaccountServiceBinding"));

export { SubaccountServiceInstanceArgs, SubaccountServiceInstanceState } from "./subaccountServiceInstance";
export type SubaccountServiceInstance = import("./subaccountServiceInstance").SubaccountServiceInstance;
export const SubaccountServiceInstance: typeof import("./subaccountServiceInstance").SubaccountServiceInstance = null as any;
utilities.lazyLoad(exports, ["SubaccountServiceInstance"], () => require("./subaccountServiceInstance"));

export { SubaccountSubscriptionArgs, SubaccountSubscriptionState } from "./subaccountSubscription";
export type SubaccountSubscription = import("./subaccountSubscription").SubaccountSubscription;
export const SubaccountSubscription: typeof import("./subaccountSubscription").SubaccountSubscription = null as any;
utilities.lazyLoad(exports, ["SubaccountSubscription"], () => require("./subaccountSubscription"));

export { SubaccountTrustConfigurationArgs, SubaccountTrustConfigurationState } from "./subaccountTrustConfiguration";
export type SubaccountTrustConfiguration = import("./subaccountTrustConfiguration").SubaccountTrustConfiguration;
export const SubaccountTrustConfiguration: typeof import("./subaccountTrustConfiguration").SubaccountTrustConfiguration = null as any;
utilities.lazyLoad(exports, ["SubaccountTrustConfiguration"], () => require("./subaccountTrustConfiguration"));


// Export sub-modules:
import * as config from "./config";
import * as types from "./types";

export {
    config,
    types,
};

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "btp:index/directory:Directory":
                return new Directory(name, <any>undefined, { urn })
            case "btp:index/directoryEntitlement:DirectoryEntitlement":
                return new DirectoryEntitlement(name, <any>undefined, { urn })
            case "btp:index/directoryRoleCollection:DirectoryRoleCollection":
                return new DirectoryRoleCollection(name, <any>undefined, { urn })
            case "btp:index/directoryRoleCollectionAssignment:DirectoryRoleCollectionAssignment":
                return new DirectoryRoleCollectionAssignment(name, <any>undefined, { urn })
            case "btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider":
                return new GlobalaccountResourceProvider(name, <any>undefined, { urn })
            case "btp:index/globalaccountRoleCollection:GlobalaccountRoleCollection":
                return new GlobalaccountRoleCollection(name, <any>undefined, { urn })
            case "btp:index/globalaccountRoleCollectionAssignment:GlobalaccountRoleCollectionAssignment":
                return new GlobalaccountRoleCollectionAssignment(name, <any>undefined, { urn })
            case "btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration":
                return new GlobalaccountTrustConfiguration(name, <any>undefined, { urn })
            case "btp:index/subaccount:Subaccount":
                return new Subaccount(name, <any>undefined, { urn })
            case "btp:index/subaccountEntitlement:SubaccountEntitlement":
                return new SubaccountEntitlement(name, <any>undefined, { urn })
            case "btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance":
                return new SubaccountEnvironmentInstance(name, <any>undefined, { urn })
            case "btp:index/subaccountRoleCollection:SubaccountRoleCollection":
                return new SubaccountRoleCollection(name, <any>undefined, { urn })
            case "btp:index/subaccountRoleCollectionAssignment:SubaccountRoleCollectionAssignment":
                return new SubaccountRoleCollectionAssignment(name, <any>undefined, { urn })
            case "btp:index/subaccountServiceBinding:SubaccountServiceBinding":
                return new SubaccountServiceBinding(name, <any>undefined, { urn })
            case "btp:index/subaccountServiceInstance:SubaccountServiceInstance":
                return new SubaccountServiceInstance(name, <any>undefined, { urn })
            case "btp:index/subaccountSubscription:SubaccountSubscription":
                return new SubaccountSubscription(name, <any>undefined, { urn })
            case "btp:index/subaccountTrustConfiguration:SubaccountTrustConfiguration":
                return new SubaccountTrustConfiguration(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("btp", "index/directory", _module)
pulumi.runtime.registerResourceModule("btp", "index/directoryEntitlement", _module)
pulumi.runtime.registerResourceModule("btp", "index/directoryRoleCollection", _module)
pulumi.runtime.registerResourceModule("btp", "index/directoryRoleCollectionAssignment", _module)
pulumi.runtime.registerResourceModule("btp", "index/globalaccountResourceProvider", _module)
pulumi.runtime.registerResourceModule("btp", "index/globalaccountRoleCollection", _module)
pulumi.runtime.registerResourceModule("btp", "index/globalaccountRoleCollectionAssignment", _module)
pulumi.runtime.registerResourceModule("btp", "index/globalaccountTrustConfiguration", _module)
pulumi.runtime.registerResourceModule("btp", "index/subaccount", _module)
pulumi.runtime.registerResourceModule("btp", "index/subaccountEntitlement", _module)
pulumi.runtime.registerResourceModule("btp", "index/subaccountEnvironmentInstance", _module)
pulumi.runtime.registerResourceModule("btp", "index/subaccountRoleCollection", _module)
pulumi.runtime.registerResourceModule("btp", "index/subaccountRoleCollectionAssignment", _module)
pulumi.runtime.registerResourceModule("btp", "index/subaccountServiceBinding", _module)
pulumi.runtime.registerResourceModule("btp", "index/subaccountServiceInstance", _module)
pulumi.runtime.registerResourceModule("btp", "index/subaccountSubscription", _module)
pulumi.runtime.registerResourceModule("btp", "index/subaccountTrustConfiguration", _module)
pulumi.runtime.registerResourcePackage("btp", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:btp") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
