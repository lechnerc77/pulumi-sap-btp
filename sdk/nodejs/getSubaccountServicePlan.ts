// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Gets details about a specific service plan such as its name, description, and metadata.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const byId = btp.getSubaccountServicePlan({
 *     id: "b50d1b0b-2059-4f21-a014-2ea87752eb48",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * const byName = btp.getSubaccountServicePlan({
 *     name: "free",
 *     offeringName: "alert-notification",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * ```
 */
export function getSubaccountServicePlan(args: GetSubaccountServicePlanArgs, opts?: pulumi.InvokeOptions): Promise<GetSubaccountServicePlanResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("btp:index/getSubaccountServicePlan:getSubaccountServicePlan", {
        "id": args.id,
        "name": args.name,
        "offeringName": args.offeringName,
        "subaccountId": args.subaccountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubaccountServicePlan.
 */
export interface GetSubaccountServicePlanArgs {
    /**
     * The ID of the service plan.
     */
    id?: string;
    /**
     * The name of the service plan.
     */
    name?: string;
    /**
     * The name of the service offering of the plan.
     */
    offeringName?: string;
    /**
     * The ID of the subaccount.
     */
    subaccountId: string;
}

/**
 * A collection of values returned by getSubaccountServicePlan.
 */
export interface GetSubaccountServicePlanResult {
    /**
     * Shows whether the service plan is bindable.
     */
    readonly bindable: boolean;
    /**
     * The ID of the service plan in the service broker catalog.
     */
    readonly catalogId: string;
    /**
     * The name of the associated service broker catalog.
     */
    readonly catalogName: string;
    /**
     * The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     */
    readonly createdDate: string;
    /**
     * The description of the service plan.
     */
    readonly description: string;
    /**
     * Shows whether the service plan is free.
     */
    readonly free: boolean;
    /**
     * The ID of the service plan.
     */
    readonly id: string;
    /**
     * The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     */
    readonly lastModified: string;
    /**
     * The name of the service plan.
     */
    readonly name: string;
    /**
     * The name of the service offering of the plan.
     */
    readonly offeringName: string;
    /**
     * Shows whether the service plan is ready.
     */
    readonly ready: boolean;
    /**
     * The ID of the service offering.
     */
    readonly serviceofferingId: string;
    /**
     * The ID of the subaccount.
     */
    readonly subaccountId: string;
}
/**
 * Gets details about a specific service plan such as its name, description, and metadata.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const byId = btp.getSubaccountServicePlan({
 *     id: "b50d1b0b-2059-4f21-a014-2ea87752eb48",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * const byName = btp.getSubaccountServicePlan({
 *     name: "free",
 *     offeringName: "alert-notification",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * ```
 */
export function getSubaccountServicePlanOutput(args: GetSubaccountServicePlanOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubaccountServicePlanResult> {
    return pulumi.output(args).apply((a: any) => getSubaccountServicePlan(a, opts))
}

/**
 * A collection of arguments for invoking getSubaccountServicePlan.
 */
export interface GetSubaccountServicePlanOutputArgs {
    /**
     * The ID of the service plan.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the service plan.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the service offering of the plan.
     */
    offeringName?: pulumi.Input<string>;
    /**
     * The ID of the subaccount.
     */
    subaccountId: pulumi.Input<string>;
}
