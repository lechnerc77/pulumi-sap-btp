// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Shows registered users in a subaccount. Users belong to one of the identity providers (IdPs) of the subaccount.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const someone = btp.getSubaccountUser({
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 *     userName: "john.doe@mycompany.com",
 * });
 * const someoneElse = btp.getSubaccountUser({
 *     origin: "my-custom-idp",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 *     userName: "jane.doe@mycompany.com",
 * });
 * ```
 */
export function getSubaccountUser(args: GetSubaccountUserArgs, opts?: pulumi.InvokeOptions): Promise<GetSubaccountUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("btp:index/getSubaccountUser:getSubaccountUser", {
        "origin": args.origin,
        "subaccountId": args.subaccountId,
        "userName": args.userName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubaccountUser.
 */
export interface GetSubaccountUserArgs {
    /**
     * The identity provider that hosts the user. Only needed for custom identity provider.
     */
    origin?: string;
    /**
     * The ID of the subaccount.
     */
    subaccountId: string;
    /**
     * The username of the user.
     */
    userName: string;
}

/**
 * A collection of values returned by getSubaccountUser.
 */
export interface GetSubaccountUserResult {
    /**
     * Shows if the account is still in use.
     */
    readonly active: boolean;
    /**
     * The e-mail address of the user.
     */
    readonly email: string;
    /**
     * The last name of the user.
     */
    readonly familyName: string;
    /**
     * The given name of the user.
     */
    readonly givenName: string;
    /**
     * The ID of the user.
     */
    readonly id: string;
    /**
     * The identity provider that hosts the user. Only needed for custom identity provider.
     */
    readonly origin: string;
    /**
     * The set of role collections, which are assigned to the user.
     */
    readonly roleCollections: string[];
    /**
     * The ID of the subaccount.
     */
    readonly subaccountId: string;
    /**
     * The username of the user.
     */
    readonly userName: string;
    /**
     * The verification status of the user.
     */
    readonly verified: boolean;
}
/**
 * Shows registered users in a subaccount. Users belong to one of the identity providers (IdPs) of the subaccount.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const someone = btp.getSubaccountUser({
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 *     userName: "john.doe@mycompany.com",
 * });
 * const someoneElse = btp.getSubaccountUser({
 *     origin: "my-custom-idp",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 *     userName: "jane.doe@mycompany.com",
 * });
 * ```
 */
export function getSubaccountUserOutput(args: GetSubaccountUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubaccountUserResult> {
    return pulumi.output(args).apply((a: any) => getSubaccountUser(a, opts))
}

/**
 * A collection of arguments for invoking getSubaccountUser.
 */
export interface GetSubaccountUserOutputArgs {
    /**
     * The identity provider that hosts the user. Only needed for custom identity provider.
     */
    origin?: pulumi.Input<string>;
    /**
     * The ID of the subaccount.
     */
    subaccountId: pulumi.Input<string>;
    /**
     * The username of the user.
     */
    userName: pulumi.Input<string>;
}
