// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Creates an environment instance, such as a Cloud Foundry org, in a subaccount.
 *
 * __Tips:__
 * * You must be assigned to the subaccount admin role.
 * * Quota-based environments, such as Kyma, must first be assigned as entitlements to the subaccount.
 *
 * __Further documentation:__
 * * Cloud Foundry: <https://help.sap.com/docs/btp/sap-business-technology-platform/org-management-using-sap-btp-command-line-interface-btp-cli>
 * * Kyma: <https://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environment>
 * * Concept: <https://help.sap.com/docs/btp/sap-business-technology-platform/environments>
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@lechnerc77/pulumi-btp";
 *
 * // creates a cloud foundry environment in a given account
 * const cloudfoundrySubaccountEnvironmentInstance = new btp.SubaccountEnvironmentInstance("cloudfoundrySubaccountEnvironmentInstance", {
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 *     environmentType: "cloudfoundry",
 *     serviceName: "cloudfoundry",
 *     planName: "standard",
 *     parameters: JSON.stringify({
 *         instance_name: "my-cf-org-name",
 *     }),
 * });
 * // creates a cloud foundry environment in a given account
 * // in additon add a custom timeout for the create and delete operation
 * const cloudfoundryIndex_subaccountEnvironmentInstanceSubaccountEnvironmentInstance = new btp.SubaccountEnvironmentInstance("cloudfoundryIndex/subaccountEnvironmentInstanceSubaccountEnvironmentInstance", {
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 *     environmentType: "cloudfoundry",
 *     serviceName: "cloudfoundry",
 *     planName: "standard",
 *     parameters: JSON.stringify({
 *         instance_name: "my-cf-org-name",
 *     }),
 *     timeouts: {
 *         create: "1h",
 *         update: "35m",
 *         "delete": "30m",
 *     },
 * });
 * // creates a kyma environment in a given account
 * // NOTE: for the available parameter values, check https://help.sap.com/docs/btp/sap-business-technology-platform/available-plans-in-kyma-environment
 * const kyma = new btp.SubaccountEnvironmentInstance("kyma", {
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 *     environmentType: "kyma",
 *     serviceName: "kymaruntime",
 *     planName: "aws",
 *     parameters: JSON.stringify({
 *         name: "my-kyma-environment",
 *         region: "us-east-1",
 *         machine_type: "mx5.xlarge",
 *         auto_scaler_min: 3,
 *         auto_scaler_max: 20,
 *     }),
 *     timeouts: {
 *         create: "1h",
 *         update: "35m",
 *         "delete": "1h",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * terraform
 *
 * ```sh
 *  $ pulumi import btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance <resource_name> <subaccount_id>,<environment_instance_id>
 * ```
 *
 * ```sh
 *  $ pulumi import btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance cloudfoundry 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,FD9BB73F-F663-4284-A50B-D72EC24FC4E1
 * ```
 */
export class SubaccountEnvironmentInstance extends pulumi.CustomResource {
    /**
     * Get an existing SubaccountEnvironmentInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubaccountEnvironmentInstanceState, opts?: pulumi.CustomResourceOptions): SubaccountEnvironmentInstance {
        return new SubaccountEnvironmentInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'btp:index/subaccountEnvironmentInstance:SubaccountEnvironmentInstance';

    /**
     * Returns true if the given object is an instance of SubaccountEnvironmentInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SubaccountEnvironmentInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SubaccountEnvironmentInstance.__pulumiType;
    }

    /**
     * The ID of the associated environment broker.
     */
    public /*out*/ readonly brokerId!: pulumi.Output<string>;
    /**
     * The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     */
    public /*out*/ readonly createdDate!: pulumi.Output<string>;
    /**
     * The set of words or phrases assigned to the environment instance.
     */
    public /*out*/ readonly customLabels!: pulumi.Output<{[key: string]: string[]}>;
    /**
     * The URL of the service dashboard, which is a web-based management user interface for the service instances.
     */
    public /*out*/ readonly dashboardUrl!: pulumi.Output<string>;
    /**
     * The description of the environment instance.
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    /**
     * The type of the environment instance that is used.
     */
    public readonly environmentType!: pulumi.Output<string>;
    /**
     * The Broker-specified key-value pairs that specify attributes of an environment instance.
     */
    public /*out*/ readonly labels!: pulumi.Output<string>;
    /**
     * The name of the landscape within the logged in region on which the environment instance is created.
     */
    public readonly landscapeLabel!: pulumi.Output<string>;
    /**
     * The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     */
    public /*out*/ readonly lastModified!: pulumi.Output<string>;
    /**
     * The name of the environment instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An identifier that represents the last operation. This ID is returned by the environment brokers.
     */
    public /*out*/ readonly operation!: pulumi.Output<string>;
    /**
     * The configuration parameters for the environment instance.
     */
    public readonly parameters!: pulumi.Output<string>;
    /**
     * The ID of the service plan for the environment instance in the corresponding service broker's catalog.
     */
    public /*out*/ readonly planId!: pulumi.Output<string>;
    /**
     * The name of the service plan for the environment instance in the corresponding service broker's catalog.
     */
    public readonly planName!: pulumi.Output<string>;
    /**
     * The ID of the platform for the environment instance in the corresponding service broker's catalog.
     */
    public /*out*/ readonly platformId!: pulumi.Output<string>;
    /**
     * The ID of the service for the environment instance in the corresponding service broker's catalog.
     */
    public /*out*/ readonly serviceId!: pulumi.Output<string>;
    /**
     * The name of the service for the environment instance in the corresponding service broker's catalog.
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * The current state of the environment instance. Possible values are:
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The ID of the subaccount.
     */
    public readonly subaccountId!: pulumi.Output<string>;
    /**
     * The ID of the tenant that owns the environment instance.
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.SubaccountEnvironmentInstanceTimeouts | undefined>;
    /**
     * The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |
     * `Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`
     * | The environment instance is deleted. |
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a SubaccountEnvironmentInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubaccountEnvironmentInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubaccountEnvironmentInstanceArgs | SubaccountEnvironmentInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SubaccountEnvironmentInstanceState | undefined;
            resourceInputs["brokerId"] = state ? state.brokerId : undefined;
            resourceInputs["createdDate"] = state ? state.createdDate : undefined;
            resourceInputs["customLabels"] = state ? state.customLabels : undefined;
            resourceInputs["dashboardUrl"] = state ? state.dashboardUrl : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["environmentType"] = state ? state.environmentType : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["landscapeLabel"] = state ? state.landscapeLabel : undefined;
            resourceInputs["lastModified"] = state ? state.lastModified : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["operation"] = state ? state.operation : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["planId"] = state ? state.planId : undefined;
            resourceInputs["planName"] = state ? state.planName : undefined;
            resourceInputs["platformId"] = state ? state.platformId : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["subaccountId"] = state ? state.subaccountId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as SubaccountEnvironmentInstanceArgs | undefined;
            if ((!args || args.environmentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environmentType'");
            }
            if ((!args || args.parameters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parameters'");
            }
            if ((!args || args.planName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'planName'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.subaccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subaccountId'");
            }
            resourceInputs["environmentType"] = args ? args.environmentType : undefined;
            resourceInputs["landscapeLabel"] = args ? args.landscapeLabel : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["planName"] = args ? args.planName : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["subaccountId"] = args ? args.subaccountId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["brokerId"] = undefined /*out*/;
            resourceInputs["createdDate"] = undefined /*out*/;
            resourceInputs["customLabels"] = undefined /*out*/;
            resourceInputs["dashboardUrl"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["labels"] = undefined /*out*/;
            resourceInputs["lastModified"] = undefined /*out*/;
            resourceInputs["operation"] = undefined /*out*/;
            resourceInputs["planId"] = undefined /*out*/;
            resourceInputs["platformId"] = undefined /*out*/;
            resourceInputs["serviceId"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["tenantId"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SubaccountEnvironmentInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SubaccountEnvironmentInstance resources.
 */
export interface SubaccountEnvironmentInstanceState {
    /**
     * The ID of the associated environment broker.
     */
    brokerId?: pulumi.Input<string>;
    /**
     * The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     */
    createdDate?: pulumi.Input<string>;
    /**
     * The set of words or phrases assigned to the environment instance.
     */
    customLabels?: pulumi.Input<{[key: string]: pulumi.Input<pulumi.Input<string>[]>}>;
    /**
     * The URL of the service dashboard, which is a web-based management user interface for the service instances.
     */
    dashboardUrl?: pulumi.Input<string>;
    /**
     * The description of the environment instance.
     */
    description?: pulumi.Input<string>;
    /**
     * The type of the environment instance that is used.
     */
    environmentType?: pulumi.Input<string>;
    /**
     * The Broker-specified key-value pairs that specify attributes of an environment instance.
     */
    labels?: pulumi.Input<string>;
    /**
     * The name of the landscape within the logged in region on which the environment instance is created.
     */
    landscapeLabel?: pulumi.Input<string>;
    /**
     * The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     */
    lastModified?: pulumi.Input<string>;
    /**
     * The name of the environment instance.
     */
    name?: pulumi.Input<string>;
    /**
     * An identifier that represents the last operation. This ID is returned by the environment brokers.
     */
    operation?: pulumi.Input<string>;
    /**
     * The configuration parameters for the environment instance.
     */
    parameters?: pulumi.Input<string>;
    /**
     * The ID of the service plan for the environment instance in the corresponding service broker's catalog.
     */
    planId?: pulumi.Input<string>;
    /**
     * The name of the service plan for the environment instance in the corresponding service broker's catalog.
     */
    planName?: pulumi.Input<string>;
    /**
     * The ID of the platform for the environment instance in the corresponding service broker's catalog.
     */
    platformId?: pulumi.Input<string>;
    /**
     * The ID of the service for the environment instance in the corresponding service broker's catalog.
     */
    serviceId?: pulumi.Input<string>;
    /**
     * The name of the service for the environment instance in the corresponding service broker's catalog.
     */
    serviceName?: pulumi.Input<string>;
    /**
     * The current state of the environment instance. Possible values are:
     */
    state?: pulumi.Input<string>;
    /**
     * The ID of the subaccount.
     */
    subaccountId?: pulumi.Input<string>;
    /**
     * The ID of the tenant that owns the environment instance.
     */
    tenantId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SubaccountEnvironmentInstanceTimeouts>;
    /**
     * The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |
     * `Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`
     * | The environment instance is deleted. |
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SubaccountEnvironmentInstance resource.
 */
export interface SubaccountEnvironmentInstanceArgs {
    /**
     * The type of the environment instance that is used.
     */
    environmentType: pulumi.Input<string>;
    /**
     * The name of the landscape within the logged in region on which the environment instance is created.
     */
    landscapeLabel?: pulumi.Input<string>;
    /**
     * The name of the environment instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The configuration parameters for the environment instance.
     */
    parameters: pulumi.Input<string>;
    /**
     * The name of the service plan for the environment instance in the corresponding service broker's catalog.
     */
    planName: pulumi.Input<string>;
    /**
     * The name of the service for the environment instance in the corresponding service broker's catalog.
     */
    serviceName: pulumi.Input<string>;
    /**
     * The ID of the subaccount.
     */
    subaccountId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.SubaccountEnvironmentInstanceTimeouts>;
}
