// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Establishes trust from a global account to an Identity Authentication tenant.
 *
 * __Further documentation:__
 * <https://help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers>
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@lechnerc77/pulumi-btp";
 *
 * // create a new simple trust configuration for a global account
 * const simple = new btp.GlobalaccountTrustConfiguration("simple", {identityProvider: "terraformint.accounts400.ondemand.com"});
 * // create a new fully customized trust configuration for a global account
 * const fullyCustomized = new btp.GlobalaccountTrustConfiguration("fullyCustomized", {
 *     description: "my-description",
 *     identityProvider: "terraformint.accounts400.ondemand.com",
 *     origin: "my-own-origin-platform",
 * });
 * ```
 *
 * ## Import
 *
 * terraform
 *
 * ```sh
 *  $ pulumi import btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration terraform importbtp_globalaccount_trust_configuration.<resource_name> <origin>
 * ```
 *
 * ```sh
 *  $ pulumi import btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration trust sap.custom
 * ```
 */
export class GlobalaccountTrustConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing GlobalaccountTrustConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GlobalaccountTrustConfigurationState, opts?: pulumi.CustomResourceOptions): GlobalaccountTrustConfiguration {
        return new GlobalaccountTrustConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration';

    /**
     * Returns true if the given object is an instance of GlobalaccountTrustConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GlobalaccountTrustConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GlobalaccountTrustConfiguration.__pulumiType;
    }

    /**
     * Description of the trust configuration.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The tenant's domain which should be used for user logon.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The name of the Identity Authentication tenant that you want to connect to the global account.
     */
    public readonly identityProvider!: pulumi.Output<string>;
    /**
     * The display name of the trust configuration.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The origin of the identity provider.
     */
    public readonly origin!: pulumi.Output<string>;
    /**
     * The protocol used to establish trust with the identity provider.
     */
    public /*out*/ readonly protocol!: pulumi.Output<string>;
    /**
     * Shows whether the trust configuration can be modified.
     */
    public /*out*/ readonly readOnly!: pulumi.Output<boolean>;
    /**
     * Determines whether the identity provider is currently 'active' or 'inactive'.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The trust type.
     */
    public /*out*/ readonly type!: pulumi.Output<string>;

    /**
     * Create a GlobalaccountTrustConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GlobalaccountTrustConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GlobalaccountTrustConfigurationArgs | GlobalaccountTrustConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GlobalaccountTrustConfigurationState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["identityProvider"] = state ? state.identityProvider : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["origin"] = state ? state.origin : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["readOnly"] = state ? state.readOnly : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as GlobalaccountTrustConfigurationArgs | undefined;
            if ((!args || args.identityProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identityProvider'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["identityProvider"] = args ? args.identityProvider : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["protocol"] = undefined /*out*/;
            resourceInputs["readOnly"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GlobalaccountTrustConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GlobalaccountTrustConfiguration resources.
 */
export interface GlobalaccountTrustConfigurationState {
    /**
     * Description of the trust configuration.
     */
    description?: pulumi.Input<string>;
    /**
     * The tenant's domain which should be used for user logon.
     */
    domain?: pulumi.Input<string>;
    /**
     * The name of the Identity Authentication tenant that you want to connect to the global account.
     */
    identityProvider?: pulumi.Input<string>;
    /**
     * The display name of the trust configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * The origin of the identity provider.
     */
    origin?: pulumi.Input<string>;
    /**
     * The protocol used to establish trust with the identity provider.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Shows whether the trust configuration can be modified.
     */
    readOnly?: pulumi.Input<boolean>;
    /**
     * Determines whether the identity provider is currently 'active' or 'inactive'.
     */
    status?: pulumi.Input<string>;
    /**
     * The trust type.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GlobalaccountTrustConfiguration resource.
 */
export interface GlobalaccountTrustConfigurationArgs {
    /**
     * Description of the trust configuration.
     */
    description?: pulumi.Input<string>;
    /**
     * The tenant's domain which should be used for user logon.
     */
    domain?: pulumi.Input<string>;
    /**
     * The name of the Identity Authentication tenant that you want to connect to the global account.
     */
    identityProvider: pulumi.Input<string>;
    /**
     * The display name of the trust configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * The origin of the identity provider.
     */
    origin?: pulumi.Input<string>;
}
