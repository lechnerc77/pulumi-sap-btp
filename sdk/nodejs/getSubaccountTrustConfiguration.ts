// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Gets details about a trust configuration.
 *
 * __Tip:__
 * You must be viewer or administrator of the subaccount.
 *
 * __Further documentation:__
 * <https://help.sap.com/docs/btp/sap-btp-neo-environment/platform-identity-provider>
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const default = btp.getSubaccountTrustConfiguration({
 *     origin: "sap.default",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * const custom = btp.getSubaccountTrustConfiguration({
 *     origin: "terraformint-platform",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * ```
 */
export function getSubaccountTrustConfiguration(args: GetSubaccountTrustConfigurationArgs, opts?: pulumi.InvokeOptions): Promise<GetSubaccountTrustConfigurationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("btp:index/getSubaccountTrustConfiguration:getSubaccountTrustConfiguration", {
        "origin": args.origin,
        "subaccountId": args.subaccountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubaccountTrustConfiguration.
 */
export interface GetSubaccountTrustConfigurationArgs {
    /**
     * The origin of the identity provider.
     */
    origin: string;
    /**
     * The ID of the subaccount.
     */
    subaccountId: string;
}

/**
 * A collection of values returned by getSubaccountTrustConfiguration.
 */
export interface GetSubaccountTrustConfigurationResult {
    /**
     * Shows whether any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.
     */
    readonly autoCreateShadowUsers: boolean;
    /**
     * Shows whether end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.
     */
    readonly availableForUserLogon: boolean;
    /**
     * The description of the trust configuration.
     */
    readonly description: string;
    /**
     * The tenant's domain which should be used for user logon.
     */
    readonly domain: string;
    /**
     * The origin of the identity provider.
     *
     * @deprecated Use the `origin` attribute instead
     */
    readonly id: string;
    /**
     * The name of the Identity Authentication tenant the subaccount is connected to.
     */
    readonly identityProvider: string;
    /**
     * Short string that helps users to identify the link for login.
     */
    readonly linkText: string;
    /**
     * The display name of the trust configuration.
     */
    readonly name: string;
    /**
     * The origin of the identity provider.
     */
    readonly origin: string;
    /**
     * The protocol used to establish trust with the identity provider.
     */
    readonly protocol: string;
    /**
     * Shows whether the trust configuration can be modified.
     */
    readonly readOnly: boolean;
    /**
     * Shows whether the identity provider is currently 'active' or 'inactive'.
     */
    readonly status: string;
    /**
     * The ID of the subaccount.
     */
    readonly subaccountId: string;
    /**
     * The trust type.
     */
    readonly type: string;
}
/**
 * Gets details about a trust configuration.
 *
 * __Tip:__
 * You must be viewer or administrator of the subaccount.
 *
 * __Further documentation:__
 * <https://help.sap.com/docs/btp/sap-btp-neo-environment/platform-identity-provider>
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const default = btp.getSubaccountTrustConfiguration({
 *     origin: "sap.default",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * const custom = btp.getSubaccountTrustConfiguration({
 *     origin: "terraformint-platform",
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * ```
 */
export function getSubaccountTrustConfigurationOutput(args: GetSubaccountTrustConfigurationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubaccountTrustConfigurationResult> {
    return pulumi.output(args).apply((a: any) => getSubaccountTrustConfiguration(a, opts))
}

/**
 * A collection of arguments for invoking getSubaccountTrustConfiguration.
 */
export interface GetSubaccountTrustConfigurationOutputArgs {
    /**
     * The origin of the identity provider.
     */
    origin: pulumi.Input<string>;
    /**
     * The ID of the subaccount.
     */
    subaccountId: pulumi.Input<string>;
}
