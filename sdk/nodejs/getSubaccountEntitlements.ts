// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Gets all the entitlements and quota assignments for a subaccount.
 *
 * To get all entitlements and quota assigned to a specific subaccount:
 * * You must be assigned to either the subaccount admin or subaccount viewer role.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const all = btp.getSubaccountEntitlements({
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * ```
 */
export function getSubaccountEntitlements(args: GetSubaccountEntitlementsArgs, opts?: pulumi.InvokeOptions): Promise<GetSubaccountEntitlementsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("btp:index/getSubaccountEntitlements:getSubaccountEntitlements", {
        "subaccountId": args.subaccountId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubaccountEntitlements.
 */
export interface GetSubaccountEntitlementsArgs {
    /**
     * The ID of the subaccount.
     */
    subaccountId: string;
}

/**
 * A collection of values returned by getSubaccountEntitlements.
 */
export interface GetSubaccountEntitlementsResult {
    /**
     * The ID of the subaccount.
     *
     * @deprecated Use the `subaccount_id` attribute instead
     */
    readonly id: string;
    /**
     * The ID of the subaccount.
     */
    readonly subaccountId: string;
    readonly values: {[key: string]: outputs.GetSubaccountEntitlementsValues};
}
/**
 * Gets all the entitlements and quota assignments for a subaccount.
 *
 * To get all entitlements and quota assigned to a specific subaccount:
 * * You must be assigned to either the subaccount admin or subaccount viewer role.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as btp from "@pulumi/btp";
 *
 * const all = btp.getSubaccountEntitlements({
 *     subaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
 * });
 * ```
 */
export function getSubaccountEntitlementsOutput(args: GetSubaccountEntitlementsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubaccountEntitlementsResult> {
    return pulumi.output(args).apply((a: any) => getSubaccountEntitlements(a, opts))
}

/**
 * A collection of arguments for invoking getSubaccountEntitlements.
 */
export interface GetSubaccountEntitlementsOutputArgs {
    /**
     * The ID of the subaccount.
     */
    subaccountId: pulumi.Input<string>;
}
