// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.outputs;

import com.lechnerc77.pulumi.btp.btp.outputs.GetSubaccountAppsValueOauth2Configuration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSubaccountAppsValue {
    private List<String> authorities;
    /**
     * @return The description of the app.
     * 
     */
    private String description;
    private List<String> foreignScopeReferences;
    /**
     * @return The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
     * 
     */
    private String id;
    private String masterAppId;
    private GetSubaccountAppsValueOauth2Configuration oauth2Configuration;
    private String orgId;
    private String planId;
    private String planName;
    private String serviceinstanceId;
    private String spaceId;
    private String tenantMode;
    private String username;
    private String xsappname;

    private GetSubaccountAppsValue() {}
    public List<String> authorities() {
        return this.authorities;
    }
    /**
     * @return The description of the app.
     * 
     */
    public String description() {
        return this.description;
    }
    public List<String> foreignScopeReferences() {
        return this.foreignScopeReferences;
    }
    /**
     * @return The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
     * 
     */
    public String id() {
        return this.id;
    }
    public String masterAppId() {
        return this.masterAppId;
    }
    public GetSubaccountAppsValueOauth2Configuration oauth2Configuration() {
        return this.oauth2Configuration;
    }
    public String orgId() {
        return this.orgId;
    }
    public String planId() {
        return this.planId;
    }
    public String planName() {
        return this.planName;
    }
    public String serviceinstanceId() {
        return this.serviceinstanceId;
    }
    public String spaceId() {
        return this.spaceId;
    }
    public String tenantMode() {
        return this.tenantMode;
    }
    public String username() {
        return this.username;
    }
    public String xsappname() {
        return this.xsappname;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubaccountAppsValue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> authorities;
        private String description;
        private List<String> foreignScopeReferences;
        private String id;
        private String masterAppId;
        private GetSubaccountAppsValueOauth2Configuration oauth2Configuration;
        private String orgId;
        private String planId;
        private String planName;
        private String serviceinstanceId;
        private String spaceId;
        private String tenantMode;
        private String username;
        private String xsappname;
        public Builder() {}
        public Builder(GetSubaccountAppsValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorities = defaults.authorities;
    	      this.description = defaults.description;
    	      this.foreignScopeReferences = defaults.foreignScopeReferences;
    	      this.id = defaults.id;
    	      this.masterAppId = defaults.masterAppId;
    	      this.oauth2Configuration = defaults.oauth2Configuration;
    	      this.orgId = defaults.orgId;
    	      this.planId = defaults.planId;
    	      this.planName = defaults.planName;
    	      this.serviceinstanceId = defaults.serviceinstanceId;
    	      this.spaceId = defaults.spaceId;
    	      this.tenantMode = defaults.tenantMode;
    	      this.username = defaults.username;
    	      this.xsappname = defaults.xsappname;
        }

        @CustomType.Setter
        public Builder authorities(List<String> authorities) {
            this.authorities = Objects.requireNonNull(authorities);
            return this;
        }
        public Builder authorities(String... authorities) {
            return authorities(List.of(authorities));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder foreignScopeReferences(List<String> foreignScopeReferences) {
            this.foreignScopeReferences = Objects.requireNonNull(foreignScopeReferences);
            return this;
        }
        public Builder foreignScopeReferences(String... foreignScopeReferences) {
            return foreignScopeReferences(List.of(foreignScopeReferences));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder masterAppId(String masterAppId) {
            this.masterAppId = Objects.requireNonNull(masterAppId);
            return this;
        }
        @CustomType.Setter
        public Builder oauth2Configuration(GetSubaccountAppsValueOauth2Configuration oauth2Configuration) {
            this.oauth2Configuration = Objects.requireNonNull(oauth2Configuration);
            return this;
        }
        @CustomType.Setter
        public Builder orgId(String orgId) {
            this.orgId = Objects.requireNonNull(orgId);
            return this;
        }
        @CustomType.Setter
        public Builder planId(String planId) {
            this.planId = Objects.requireNonNull(planId);
            return this;
        }
        @CustomType.Setter
        public Builder planName(String planName) {
            this.planName = Objects.requireNonNull(planName);
            return this;
        }
        @CustomType.Setter
        public Builder serviceinstanceId(String serviceinstanceId) {
            this.serviceinstanceId = Objects.requireNonNull(serviceinstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder spaceId(String spaceId) {
            this.spaceId = Objects.requireNonNull(spaceId);
            return this;
        }
        @CustomType.Setter
        public Builder tenantMode(String tenantMode) {
            this.tenantMode = Objects.requireNonNull(tenantMode);
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }
        @CustomType.Setter
        public Builder xsappname(String xsappname) {
            this.xsappname = Objects.requireNonNull(xsappname);
            return this;
        }
        public GetSubaccountAppsValue build() {
            final var _resultValue = new GetSubaccountAppsValue();
            _resultValue.authorities = authorities;
            _resultValue.description = description;
            _resultValue.foreignScopeReferences = foreignScopeReferences;
            _resultValue.id = id;
            _resultValue.masterAppId = masterAppId;
            _resultValue.oauth2Configuration = oauth2Configuration;
            _resultValue.orgId = orgId;
            _resultValue.planId = planId;
            _resultValue.planName = planName;
            _resultValue.serviceinstanceId = serviceinstanceId;
            _resultValue.spaceId = spaceId;
            _resultValue.tenantMode = tenantMode;
            _resultValue.username = username;
            _resultValue.xsappname = xsappname;
            return _resultValue;
        }
    }
}
