// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDirectoryEntitlementsValues {
    /**
     * @return The current state of the entitlement. Possible values are:
     * 
     */
    private String category;
    private String planDescription;
    private String planDisplayName;
    private String planName;
    private Double quotaAssigned;
    private Double quotaRemaining;
    private String serviceDisplayName;
    private String serviceName;

    private GetDirectoryEntitlementsValues() {}
    /**
     * @return The current state of the entitlement. Possible values are:
     * 
     */
    public String category() {
        return this.category;
    }
    public String planDescription() {
        return this.planDescription;
    }
    public String planDisplayName() {
        return this.planDisplayName;
    }
    public String planName() {
        return this.planName;
    }
    public Double quotaAssigned() {
        return this.quotaAssigned;
    }
    public Double quotaRemaining() {
        return this.quotaRemaining;
    }
    public String serviceDisplayName() {
        return this.serviceDisplayName;
    }
    public String serviceName() {
        return this.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDirectoryEntitlementsValues defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String category;
        private String planDescription;
        private String planDisplayName;
        private String planName;
        private Double quotaAssigned;
        private Double quotaRemaining;
        private String serviceDisplayName;
        private String serviceName;
        public Builder() {}
        public Builder(GetDirectoryEntitlementsValues defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.planDescription = defaults.planDescription;
    	      this.planDisplayName = defaults.planDisplayName;
    	      this.planName = defaults.planName;
    	      this.quotaAssigned = defaults.quotaAssigned;
    	      this.quotaRemaining = defaults.quotaRemaining;
    	      this.serviceDisplayName = defaults.serviceDisplayName;
    	      this.serviceName = defaults.serviceName;
        }

        @CustomType.Setter
        public Builder category(String category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }
        @CustomType.Setter
        public Builder planDescription(String planDescription) {
            this.planDescription = Objects.requireNonNull(planDescription);
            return this;
        }
        @CustomType.Setter
        public Builder planDisplayName(String planDisplayName) {
            this.planDisplayName = Objects.requireNonNull(planDisplayName);
            return this;
        }
        @CustomType.Setter
        public Builder planName(String planName) {
            this.planName = Objects.requireNonNull(planName);
            return this;
        }
        @CustomType.Setter
        public Builder quotaAssigned(Double quotaAssigned) {
            this.quotaAssigned = Objects.requireNonNull(quotaAssigned);
            return this;
        }
        @CustomType.Setter
        public Builder quotaRemaining(Double quotaRemaining) {
            this.quotaRemaining = Objects.requireNonNull(quotaRemaining);
            return this;
        }
        @CustomType.Setter
        public Builder serviceDisplayName(String serviceDisplayName) {
            this.serviceDisplayName = Objects.requireNonNull(serviceDisplayName);
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        public GetDirectoryEntitlementsValues build() {
            final var _resultValue = new GetDirectoryEntitlementsValues();
            _resultValue.category = category;
            _resultValue.planDescription = planDescription;
            _resultValue.planDisplayName = planDisplayName;
            _resultValue.planName = planName;
            _resultValue.quotaAssigned = quotaAssigned;
            _resultValue.quotaRemaining = quotaRemaining;
            _resultValue.serviceDisplayName = serviceDisplayName;
            _resultValue.serviceName = serviceName;
            return _resultValue;
        }
    }
}
