// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDirectoryRoleScope {
    private List<String> customGrantAsAuthorityToApps;
    private List<String> customGrantedApps;
    /**
     * @return The description of the scope.
     * 
     */
    private String description;
    private List<String> grantAsAuthorityToApps;
    private List<String> grantedApps;
    /**
     * @return The name of the scope.
     * 
     */
    private String name;

    private GetDirectoryRoleScope() {}
    public List<String> customGrantAsAuthorityToApps() {
        return this.customGrantAsAuthorityToApps;
    }
    public List<String> customGrantedApps() {
        return this.customGrantedApps;
    }
    /**
     * @return The description of the scope.
     * 
     */
    public String description() {
        return this.description;
    }
    public List<String> grantAsAuthorityToApps() {
        return this.grantAsAuthorityToApps;
    }
    public List<String> grantedApps() {
        return this.grantedApps;
    }
    /**
     * @return The name of the scope.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDirectoryRoleScope defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> customGrantAsAuthorityToApps;
        private List<String> customGrantedApps;
        private String description;
        private List<String> grantAsAuthorityToApps;
        private List<String> grantedApps;
        private String name;
        public Builder() {}
        public Builder(GetDirectoryRoleScope defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customGrantAsAuthorityToApps = defaults.customGrantAsAuthorityToApps;
    	      this.customGrantedApps = defaults.customGrantedApps;
    	      this.description = defaults.description;
    	      this.grantAsAuthorityToApps = defaults.grantAsAuthorityToApps;
    	      this.grantedApps = defaults.grantedApps;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder customGrantAsAuthorityToApps(List<String> customGrantAsAuthorityToApps) {
            this.customGrantAsAuthorityToApps = Objects.requireNonNull(customGrantAsAuthorityToApps);
            return this;
        }
        public Builder customGrantAsAuthorityToApps(String... customGrantAsAuthorityToApps) {
            return customGrantAsAuthorityToApps(List.of(customGrantAsAuthorityToApps));
        }
        @CustomType.Setter
        public Builder customGrantedApps(List<String> customGrantedApps) {
            this.customGrantedApps = Objects.requireNonNull(customGrantedApps);
            return this;
        }
        public Builder customGrantedApps(String... customGrantedApps) {
            return customGrantedApps(List.of(customGrantedApps));
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder grantAsAuthorityToApps(List<String> grantAsAuthorityToApps) {
            this.grantAsAuthorityToApps = Objects.requireNonNull(grantAsAuthorityToApps);
            return this;
        }
        public Builder grantAsAuthorityToApps(String... grantAsAuthorityToApps) {
            return grantAsAuthorityToApps(List.of(grantAsAuthorityToApps));
        }
        @CustomType.Setter
        public Builder grantedApps(List<String> grantedApps) {
            this.grantedApps = Objects.requireNonNull(grantedApps);
            return this;
        }
        public Builder grantedApps(String... grantedApps) {
            return grantedApps(List.of(grantedApps));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetDirectoryRoleScope build() {
            final var _resultValue = new GetDirectoryRoleScope();
            _resultValue.customGrantAsAuthorityToApps = customGrantAsAuthorityToApps;
            _resultValue.customGrantedApps = customGrantedApps;
            _resultValue.description = description;
            _resultValue.grantAsAuthorityToApps = grantAsAuthorityToApps;
            _resultValue.grantedApps = grantedApps;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
