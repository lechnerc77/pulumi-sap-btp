// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.inputs;

import com.lechnerc77.pulumi.btp.btp.inputs.SubaccountEnvironmentInstanceTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubaccountEnvironmentInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final SubaccountEnvironmentInstanceState Empty = new SubaccountEnvironmentInstanceState();

    /**
     * The ID of the associated environment broker.
     * 
     */
    @Import(name="brokerId")
    private @Nullable Output<String> brokerId;

    /**
     * @return The ID of the associated environment broker.
     * 
     */
    public Optional<Output<String>> brokerId() {
        return Optional.ofNullable(this.brokerId);
    }

    /**
     * The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    @Import(name="createdDate")
    private @Nullable Output<String> createdDate;

    /**
     * @return The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public Optional<Output<String>> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }

    /**
     * The set of words or phrases assigned to the environment instance.
     * 
     */
    @Import(name="customLabels")
    private @Nullable Output<Map<String,List<String>>> customLabels;

    /**
     * @return The set of words or phrases assigned to the environment instance.
     * 
     */
    public Optional<Output<Map<String,List<String>>>> customLabels() {
        return Optional.ofNullable(this.customLabels);
    }

    /**
     * The URL of the service dashboard, which is a web-based management user interface for the service instances.
     * 
     */
    @Import(name="dashboardUrl")
    private @Nullable Output<String> dashboardUrl;

    /**
     * @return The URL of the service dashboard, which is a web-based management user interface for the service instances.
     * 
     */
    public Optional<Output<String>> dashboardUrl() {
        return Optional.ofNullable(this.dashboardUrl);
    }

    /**
     * The description of the environment instance.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the environment instance.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The type of the environment instance that is used.
     * 
     */
    @Import(name="environmentType")
    private @Nullable Output<String> environmentType;

    /**
     * @return The type of the environment instance that is used.
     * 
     */
    public Optional<Output<String>> environmentType() {
        return Optional.ofNullable(this.environmentType);
    }

    /**
     * The Broker-specified key-value pairs that specify attributes of an environment instance.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<String> labels;

    /**
     * @return The Broker-specified key-value pairs that specify attributes of an environment instance.
     * 
     */
    public Optional<Output<String>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The name of the landscape within the logged in region on which the environment instance is created.
     * 
     */
    @Import(name="landscapeLabel")
    private @Nullable Output<String> landscapeLabel;

    /**
     * @return The name of the landscape within the logged in region on which the environment instance is created.
     * 
     */
    public Optional<Output<String>> landscapeLabel() {
        return Optional.ofNullable(this.landscapeLabel);
    }

    /**
     * The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    @Import(name="lastModified")
    private @Nullable Output<String> lastModified;

    /**
     * @return The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public Optional<Output<String>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    /**
     * The name of the environment instance.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the environment instance.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * An identifier that represents the last operation. This ID is returned by the environment brokers.
     * 
     */
    @Import(name="operation")
    private @Nullable Output<String> operation;

    /**
     * @return An identifier that represents the last operation. This ID is returned by the environment brokers.
     * 
     */
    public Optional<Output<String>> operation() {
        return Optional.ofNullable(this.operation);
    }

    /**
     * The configuration parameters for the environment instance.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    /**
     * @return The configuration parameters for the environment instance.
     * 
     */
    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The ID of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    @Import(name="planId")
    private @Nullable Output<String> planId;

    /**
     * @return The ID of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public Optional<Output<String>> planId() {
        return Optional.ofNullable(this.planId);
    }

    /**
     * The name of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    @Import(name="planName")
    private @Nullable Output<String> planName;

    /**
     * @return The name of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public Optional<Output<String>> planName() {
        return Optional.ofNullable(this.planName);
    }

    /**
     * The ID of the platform for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    @Import(name="platformId")
    private @Nullable Output<String> platformId;

    /**
     * @return The ID of the platform for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public Optional<Output<String>> platformId() {
        return Optional.ofNullable(this.platformId);
    }

    /**
     * The ID of the service for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    @Import(name="serviceId")
    private @Nullable Output<String> serviceId;

    /**
     * @return The ID of the service for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public Optional<Output<String>> serviceId() {
        return Optional.ofNullable(this.serviceId);
    }

    /**
     * The name of the service for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The name of the service for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The current state of the environment instance. Possible values are:
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the environment instance. Possible values are:
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The ID of the subaccount.
     * 
     */
    @Import(name="subaccountId")
    private @Nullable Output<String> subaccountId;

    /**
     * @return The ID of the subaccount.
     * 
     */
    public Optional<Output<String>> subaccountId() {
        return Optional.ofNullable(this.subaccountId);
    }

    /**
     * The ID of the tenant that owns the environment instance.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return The ID of the tenant that owns the environment instance.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    @Import(name="timeouts")
    private @Nullable Output<SubaccountEnvironmentInstanceTimeoutsArgs> timeouts;

    public Optional<Output<SubaccountEnvironmentInstanceTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |
     * `Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`
     * | The environment instance is deleted. |
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |
     * `Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`
     * | The environment instance is deleted. |
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private SubaccountEnvironmentInstanceState() {}

    private SubaccountEnvironmentInstanceState(SubaccountEnvironmentInstanceState $) {
        this.brokerId = $.brokerId;
        this.createdDate = $.createdDate;
        this.customLabels = $.customLabels;
        this.dashboardUrl = $.dashboardUrl;
        this.description = $.description;
        this.environmentType = $.environmentType;
        this.labels = $.labels;
        this.landscapeLabel = $.landscapeLabel;
        this.lastModified = $.lastModified;
        this.name = $.name;
        this.operation = $.operation;
        this.parameters = $.parameters;
        this.planId = $.planId;
        this.planName = $.planName;
        this.platformId = $.platformId;
        this.serviceId = $.serviceId;
        this.serviceName = $.serviceName;
        this.state = $.state;
        this.subaccountId = $.subaccountId;
        this.tenantId = $.tenantId;
        this.timeouts = $.timeouts;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubaccountEnvironmentInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubaccountEnvironmentInstanceState $;

        public Builder() {
            $ = new SubaccountEnvironmentInstanceState();
        }

        public Builder(SubaccountEnvironmentInstanceState defaults) {
            $ = new SubaccountEnvironmentInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param brokerId The ID of the associated environment broker.
         * 
         * @return builder
         * 
         */
        public Builder brokerId(@Nullable Output<String> brokerId) {
            $.brokerId = brokerId;
            return this;
        }

        /**
         * @param brokerId The ID of the associated environment broker.
         * 
         * @return builder
         * 
         */
        public Builder brokerId(String brokerId) {
            return brokerId(Output.of(brokerId));
        }

        /**
         * @param createdDate The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(@Nullable Output<String> createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        /**
         * @param createdDate The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(String createdDate) {
            return createdDate(Output.of(createdDate));
        }

        /**
         * @param customLabels The set of words or phrases assigned to the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder customLabels(@Nullable Output<Map<String,List<String>>> customLabels) {
            $.customLabels = customLabels;
            return this;
        }

        /**
         * @param customLabels The set of words or phrases assigned to the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder customLabels(Map<String,List<String>> customLabels) {
            return customLabels(Output.of(customLabels));
        }

        /**
         * @param dashboardUrl The URL of the service dashboard, which is a web-based management user interface for the service instances.
         * 
         * @return builder
         * 
         */
        public Builder dashboardUrl(@Nullable Output<String> dashboardUrl) {
            $.dashboardUrl = dashboardUrl;
            return this;
        }

        /**
         * @param dashboardUrl The URL of the service dashboard, which is a web-based management user interface for the service instances.
         * 
         * @return builder
         * 
         */
        public Builder dashboardUrl(String dashboardUrl) {
            return dashboardUrl(Output.of(dashboardUrl));
        }

        /**
         * @param description The description of the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param environmentType The type of the environment instance that is used.
         * 
         * @return builder
         * 
         */
        public Builder environmentType(@Nullable Output<String> environmentType) {
            $.environmentType = environmentType;
            return this;
        }

        /**
         * @param environmentType The type of the environment instance that is used.
         * 
         * @return builder
         * 
         */
        public Builder environmentType(String environmentType) {
            return environmentType(Output.of(environmentType));
        }

        /**
         * @param labels The Broker-specified key-value pairs that specify attributes of an environment instance.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<String> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The Broker-specified key-value pairs that specify attributes of an environment instance.
         * 
         * @return builder
         * 
         */
        public Builder labels(String labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param landscapeLabel The name of the landscape within the logged in region on which the environment instance is created.
         * 
         * @return builder
         * 
         */
        public Builder landscapeLabel(@Nullable Output<String> landscapeLabel) {
            $.landscapeLabel = landscapeLabel;
            return this;
        }

        /**
         * @param landscapeLabel The name of the landscape within the logged in region on which the environment instance is created.
         * 
         * @return builder
         * 
         */
        public Builder landscapeLabel(String landscapeLabel) {
            return landscapeLabel(Output.of(landscapeLabel));
        }

        /**
         * @param lastModified The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(@Nullable Output<String> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        /**
         * @param lastModified The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(String lastModified) {
            return lastModified(Output.of(lastModified));
        }

        /**
         * @param name The name of the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param operation An identifier that represents the last operation. This ID is returned by the environment brokers.
         * 
         * @return builder
         * 
         */
        public Builder operation(@Nullable Output<String> operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param operation An identifier that represents the last operation. This ID is returned by the environment brokers.
         * 
         * @return builder
         * 
         */
        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        /**
         * @param parameters The configuration parameters for the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The configuration parameters for the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param planId The ID of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder planId(@Nullable Output<String> planId) {
            $.planId = planId;
            return this;
        }

        /**
         * @param planId The ID of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder planId(String planId) {
            return planId(Output.of(planId));
        }

        /**
         * @param planName The name of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder planName(@Nullable Output<String> planName) {
            $.planName = planName;
            return this;
        }

        /**
         * @param planName The name of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder planName(String planName) {
            return planName(Output.of(planName));
        }

        /**
         * @param platformId The ID of the platform for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder platformId(@Nullable Output<String> platformId) {
            $.platformId = platformId;
            return this;
        }

        /**
         * @param platformId The ID of the platform for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder platformId(String platformId) {
            return platformId(Output.of(platformId));
        }

        /**
         * @param serviceId The ID of the service for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder serviceId(@Nullable Output<String> serviceId) {
            $.serviceId = serviceId;
            return this;
        }

        /**
         * @param serviceId The ID of the service for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder serviceId(String serviceId) {
            return serviceId(Output.of(serviceId));
        }

        /**
         * @param serviceName The name of the service for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the service for the environment instance in the corresponding service broker&#39;s catalog.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param state The current state of the environment instance. Possible values are:
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the environment instance. Possible values are:
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(@Nullable Output<String> subaccountId) {
            $.subaccountId = subaccountId;
            return this;
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(String subaccountId) {
            return subaccountId(Output.of(subaccountId));
        }

        /**
         * @param tenantId The ID of the tenant that owns the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The ID of the tenant that owns the environment instance.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public Builder timeouts(@Nullable Output<SubaccountEnvironmentInstanceTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(SubaccountEnvironmentInstanceTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param type The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |
         * `Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`
         * | The environment instance is deleted. |
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The last provisioning operation on the environment instance. Possible values are: | type | description | | --- | --- | |
         * `Provision` | The environment instance is created. | | `Update` | The environment instance is changed. | | `Deprovision`
         * | The environment instance is deleted. |
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SubaccountEnvironmentInstanceState build() {
            return $;
        }
    }

}
