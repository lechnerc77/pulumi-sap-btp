// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubaccountServiceBindingState extends com.pulumi.resources.ResourceArgs {

    public static final SubaccountServiceBindingState Empty = new SubaccountServiceBindingState();

    /**
     * Contains the resources associated with the binding.
     * 
     */
    @Import(name="bindResource")
    private @Nullable Output<Map<String,String>> bindResource;

    /**
     * @return Contains the resources associated with the binding.
     * 
     */
    public Optional<Output<Map<String,String>>> bindResource() {
        return Optional.ofNullable(this.bindResource);
    }

    /**
     * The contextual data for the resource.
     * 
     */
    @Import(name="context")
    private @Nullable Output<Map<String,String>> context;

    /**
     * @return The contextual data for the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> context() {
        return Optional.ofNullable(this.context);
    }

    /**
     * The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    @Import(name="createdDate")
    private @Nullable Output<String> createdDate;

    /**
     * @return The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public Optional<Output<String>> createdDate() {
        return Optional.ofNullable(this.createdDate);
    }

    /**
     * The credentials to access the binding.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<String> credentials;

    /**
     * @return The credentials to access the binding.
     * 
     */
    public Optional<Output<String>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * The set of words or phrases assigned to the service binding.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,List<String>>> labels;

    /**
     * @return The set of words or phrases assigned to the service binding.
     * 
     */
    public Optional<Output<Map<String,List<String>>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    @Import(name="lastModified")
    private @Nullable Output<String> lastModified;

    /**
     * @return The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public Optional<Output<String>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    /**
     * The name of the service binding.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the service binding.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The parameters of the service binding as a valid JSON object.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    /**
     * @return The parameters of the service binding as a valid JSON object.
     * 
     */
    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Shows whether the service binding is ready.
     * 
     */
    @Import(name="ready")
    private @Nullable Output<Boolean> ready;

    /**
     * @return Shows whether the service binding is ready.
     * 
     */
    public Optional<Output<Boolean>> ready() {
        return Optional.ofNullable(this.ready);
    }

    /**
     * The ID of the service instance associated with the binding.
     * 
     */
    @Import(name="serviceInstanceId")
    private @Nullable Output<String> serviceInstanceId;

    /**
     * @return The ID of the service instance associated with the binding.
     * 
     */
    public Optional<Output<String>> serviceInstanceId() {
        return Optional.ofNullable(this.serviceInstanceId);
    }

    /**
     * The current state of the service binding. Possible values are:
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the service binding. Possible values are:
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The ID of the subaccount.
     * 
     */
    @Import(name="subaccountId")
    private @Nullable Output<String> subaccountId;

    /**
     * @return The ID of the subaccount.
     * 
     */
    public Optional<Output<String>> subaccountId() {
        return Optional.ofNullable(this.subaccountId);
    }

    private SubaccountServiceBindingState() {}

    private SubaccountServiceBindingState(SubaccountServiceBindingState $) {
        this.bindResource = $.bindResource;
        this.context = $.context;
        this.createdDate = $.createdDate;
        this.credentials = $.credentials;
        this.labels = $.labels;
        this.lastModified = $.lastModified;
        this.name = $.name;
        this.parameters = $.parameters;
        this.ready = $.ready;
        this.serviceInstanceId = $.serviceInstanceId;
        this.state = $.state;
        this.subaccountId = $.subaccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubaccountServiceBindingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubaccountServiceBindingState $;

        public Builder() {
            $ = new SubaccountServiceBindingState();
        }

        public Builder(SubaccountServiceBindingState defaults) {
            $ = new SubaccountServiceBindingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bindResource Contains the resources associated with the binding.
         * 
         * @return builder
         * 
         */
        public Builder bindResource(@Nullable Output<Map<String,String>> bindResource) {
            $.bindResource = bindResource;
            return this;
        }

        /**
         * @param bindResource Contains the resources associated with the binding.
         * 
         * @return builder
         * 
         */
        public Builder bindResource(Map<String,String> bindResource) {
            return bindResource(Output.of(bindResource));
        }

        /**
         * @param context The contextual data for the resource.
         * 
         * @return builder
         * 
         */
        public Builder context(@Nullable Output<Map<String,String>> context) {
            $.context = context;
            return this;
        }

        /**
         * @param context The contextual data for the resource.
         * 
         * @return builder
         * 
         */
        public Builder context(Map<String,String> context) {
            return context(Output.of(context));
        }

        /**
         * @param createdDate The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(@Nullable Output<String> createdDate) {
            $.createdDate = createdDate;
            return this;
        }

        /**
         * @param createdDate The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
         * 
         * @return builder
         * 
         */
        public Builder createdDate(String createdDate) {
            return createdDate(Output.of(createdDate));
        }

        /**
         * @param credentials The credentials to access the binding.
         * 
         * @return builder
         * 
         */
        public Builder credentials(@Nullable Output<String> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials The credentials to access the binding.
         * 
         * @return builder
         * 
         */
        public Builder credentials(String credentials) {
            return credentials(Output.of(credentials));
        }

        /**
         * @param labels The set of words or phrases assigned to the service binding.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,List<String>>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The set of words or phrases assigned to the service binding.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,List<String>> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param lastModified The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(@Nullable Output<String> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        /**
         * @param lastModified The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
         * 
         * @return builder
         * 
         */
        public Builder lastModified(String lastModified) {
            return lastModified(Output.of(lastModified));
        }

        /**
         * @param name The name of the service binding.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the service binding.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameters The parameters of the service binding as a valid JSON object.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The parameters of the service binding as a valid JSON object.
         * 
         * @return builder
         * 
         */
        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param ready Shows whether the service binding is ready.
         * 
         * @return builder
         * 
         */
        public Builder ready(@Nullable Output<Boolean> ready) {
            $.ready = ready;
            return this;
        }

        /**
         * @param ready Shows whether the service binding is ready.
         * 
         * @return builder
         * 
         */
        public Builder ready(Boolean ready) {
            return ready(Output.of(ready));
        }

        /**
         * @param serviceInstanceId The ID of the service instance associated with the binding.
         * 
         * @return builder
         * 
         */
        public Builder serviceInstanceId(@Nullable Output<String> serviceInstanceId) {
            $.serviceInstanceId = serviceInstanceId;
            return this;
        }

        /**
         * @param serviceInstanceId The ID of the service instance associated with the binding.
         * 
         * @return builder
         * 
         */
        public Builder serviceInstanceId(String serviceInstanceId) {
            return serviceInstanceId(Output.of(serviceInstanceId));
        }

        /**
         * @param state The current state of the service binding. Possible values are:
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the service binding. Possible values are:
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(@Nullable Output<String> subaccountId) {
            $.subaccountId = subaccountId;
            return this;
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(String subaccountId) {
            return subaccountId(Output.of(subaccountId));
        }

        public SubaccountServiceBindingState build() {
            return $;
        }
    }

}
