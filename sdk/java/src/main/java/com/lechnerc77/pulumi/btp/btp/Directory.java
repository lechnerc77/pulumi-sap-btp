// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp;

import com.lechnerc77.pulumi.btp.btp.DirectoryArgs;
import com.lechnerc77.pulumi.btp.btp.Utilities;
import com.lechnerc77.pulumi.btp.btp.inputs.DirectoryState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Directories allow you to organize and manage your subaccounts according to your technical and business needs. The use of directories is optional.
 * 
 * You can create up to five levels of directories in your account hierarchy. If you have directories, you can still create subaccounts directly under your global account.
 * 
 * __Tips:__
 * * You must be assigned to the global account admin role, or the directory admin if the directory is configured to manage its authorizations.
 * * A directory path in the account hierarchy can have only one directory that is enabled with the `ENTITLEMENTS` or `AUTHORIZATIONS` features. If such a directory exists, other directories in that path can only be enabled with the `DEFAULT` features.
 * 
 * __Further documentation:__
 * &lt;https://help.sap.com/docs/btp/sap-business-technology-platform/account-model&gt;
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.btp.Directory;
 * import com.pulumi.btp.DirectoryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var parent = new Directory(&#34;parent&#34;, DirectoryArgs.builder()        
 *             .description(&#34;This is a parent directory.&#34;)
 *             .build());
 * 
 *         var child = new Directory(&#34;child&#34;, DirectoryArgs.builder()        
 *             .parentId(parent.id())
 *             .description(&#34;This is a child directory.&#34;)
 *             .build());
 * 
 *         var dirWithFeatures = new Directory(&#34;dirWithFeatures&#34;, DirectoryArgs.builder()        
 *             .description(&#34;This is a directory with features.&#34;)
 *             .features(            
 *                 &#34;DEFAULT&#34;,
 *                 &#34;ENTITLEMENTS&#34;,
 *                 &#34;AUTHORIZATIONS&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * terraform
 * 
 * ```sh
 *  $ pulumi import btp:index/directory:Directory &lt;resource_name&gt; &lt;directory_id&gt;
 * ```
 * 
 * ```sh
 *  $ pulumi import btp:index/directory:Directory parent dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0
 * ```
 * 
 */
@ResourceType(type="btp:index/directory:Directory")
public class Directory extends com.pulumi.resources.CustomResource {
    /**
     * The details of the user that created the directory.
     * 
     */
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    /**
     * @return The details of the user that created the directory.
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    @Export(name="createdDate", refs={String.class}, tree="[0]")
    private Output<String> createdDate;

    /**
     * @return The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public Output<String> createdDate() {
        return this.createdDate;
    }
    /**
     * A description of the directory.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return A description of the directory.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * The features that are enabled for the directory. Possible values are:
     * 
     */
    @Export(name="features", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> features;

    /**
     * @return The features that are enabled for the directory. Possible values are:
     * 
     */
    public Output<List<String>> features() {
        return this.features;
    }
    /**
     * Contains information about the labels assigned to a specified global account. Labels are represented in a JSON array of
     * key-value pairs; each key has up to 10 corresponding values.
     * 
     */
    @Export(name="labels", refs={Map.class,String.class,List.class}, tree="[0,1,[2,1]]")
    private Output</* @Nullable */ Map<String,List<String>>> labels;

    /**
     * @return Contains information about the labels assigned to a specified global account. Labels are represented in a JSON array of
     * key-value pairs; each key has up to 10 corresponding values.
     * 
     */
    public Output<Optional<Map<String,List<String>>>> labels() {
        return Codegen.optional(this.labels);
    }
    /**
     * The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    @Export(name="lastModified", refs={String.class}, tree="[0]")
    private Output<String> lastModified;

    /**
     * @return The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public Output<String> lastModified() {
        return this.lastModified;
    }
    /**
     * The display name of the directory.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The display name of the directory.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the directory&#39;s parent entity. Typically this is the global account.
     * 
     */
    @Export(name="parentId", refs={String.class}, tree="[0]")
    private Output<String> parentId;

    /**
     * @return The ID of the directory&#39;s parent entity. Typically this is the global account.
     * 
     */
    public Output<String> parentId() {
        return this.parentId;
    }
    /**
     * The current state of the directory. Possible values are: | value | description | | --- | --- | | `OK` | The CRUD
     * operation or series of operations completed successfully. | | `STARTED` | CRUD operation on an entity has started. | |
     * `CREATING` | Creating entity operation is in progress. | | `UPDATING` | Updating entity operation is in progress. | |
     * `MOVING` | Moving entity operation is in progress. | | `PROCESSING` | A series of operations related to the entity is in
     * progress. | | `DELETING` | Deleting entity operation is in progress. | | `PENDING REVIEW` | The processing operation has
     * been stopped for reviewing and can be restarted by the operator. | | `CANCELLED` | The operation or processing was
     * canceled by the operator. | | `CREATION_FAILED` | The creation operation failed, and the entity was not created or was
     * created but cannot be used. | | `UPDATE_FAILED` | The update operation failed, and the entity was not updated. | |
     * `PROCESSING_FAILED` | The processing operations failed. | | `DELETION_FAILED` | The delete operation failed, and the
     * entity was not deleted. | | `MOVE_FAILED` | Entity could not be moved to a different location. | | `MIGRATING` |
     * Migrating entity from Neo to Cloud Foundry. |
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the directory. Possible values are: | value | description | | --- | --- | | `OK` | The CRUD
     * operation or series of operations completed successfully. | | `STARTED` | CRUD operation on an entity has started. | |
     * `CREATING` | Creating entity operation is in progress. | | `UPDATING` | Updating entity operation is in progress. | |
     * `MOVING` | Moving entity operation is in progress. | | `PROCESSING` | A series of operations related to the entity is in
     * progress. | | `DELETING` | Deleting entity operation is in progress. | | `PENDING REVIEW` | The processing operation has
     * been stopped for reviewing and can be restarted by the operator. | | `CANCELLED` | The operation or processing was
     * canceled by the operator. | | `CREATION_FAILED` | The creation operation failed, and the entity was not created or was
     * created but cannot be used. | | `UPDATE_FAILED` | The update operation failed, and the entity was not updated. | |
     * `PROCESSING_FAILED` | The processing operations failed. | | `DELETION_FAILED` | The delete operation failed, and the
     * entity was not deleted. | | `MOVE_FAILED` | Entity could not be moved to a different location. | | `MIGRATING` |
     * Migrating entity from Neo to Cloud Foundry. |
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Applies only to directories that have the user authorization management feature enabled. The subdomain becomes part of
     * the path used to access the authorization tenant of the directory. It has to be unique within the defined region.
     * 
     */
    @Export(name="subdomain", refs={String.class}, tree="[0]")
    private Output<String> subdomain;

    /**
     * @return Applies only to directories that have the user authorization management feature enabled. The subdomain becomes part of
     * the path used to access the authorization tenant of the directory. It has to be unique within the defined region.
     * 
     */
    public Output<String> subdomain() {
        return this.subdomain;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Directory(String name) {
        this(name, DirectoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Directory(String name, @Nullable DirectoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Directory(String name, @Nullable DirectoryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("btp:index/directory:Directory", name, args == null ? DirectoryArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Directory(String name, Output<String> id, @Nullable DirectoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("btp:index/directory:Directory", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Directory get(String name, Output<String> id, @Nullable DirectoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Directory(name, id, state, options);
    }
}
