// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalaccountResourceProviderState extends com.pulumi.resources.ResourceArgs {

    public static final GlobalaccountResourceProviderState Empty = new GlobalaccountResourceProviderState();

    /**
     * The configuration properties for the resource provider as required by the vendor.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<String> configuration;

    /**
     * @return The configuration properties for the resource provider as required by the vendor.
     * 
     */
    public Optional<Output<String>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * The description of the resource provider.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the resource provider.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The descriptive name of the resource provider.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The descriptive name of the resource provider.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The cloud vendor from which to consume services through your subscribed account. Possible values are:
     * 
     */
    @Import(name="providerType")
    private @Nullable Output<String> providerType;

    /**
     * @return The cloud vendor from which to consume services through your subscribed account. Possible values are:
     * 
     */
    public Optional<Output<String>> providerType() {
        return Optional.ofNullable(this.providerType);
    }

    /**
     * The unique technical name of the resource provider.
     * 
     */
    @Import(name="technicalName")
    private @Nullable Output<String> technicalName;

    /**
     * @return The unique technical name of the resource provider.
     * 
     */
    public Optional<Output<String>> technicalName() {
        return Optional.ofNullable(this.technicalName);
    }

    private GlobalaccountResourceProviderState() {}

    private GlobalaccountResourceProviderState(GlobalaccountResourceProviderState $) {
        this.configuration = $.configuration;
        this.description = $.description;
        this.displayName = $.displayName;
        this.providerType = $.providerType;
        this.technicalName = $.technicalName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalaccountResourceProviderState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalaccountResourceProviderState $;

        public Builder() {
            $ = new GlobalaccountResourceProviderState();
        }

        public Builder(GlobalaccountResourceProviderState defaults) {
            $ = new GlobalaccountResourceProviderState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration The configuration properties for the resource provider as required by the vendor.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<String> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration The configuration properties for the resource provider as required by the vendor.
         * 
         * @return builder
         * 
         */
        public Builder configuration(String configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param description The description of the resource provider.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the resource provider.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The descriptive name of the resource provider.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The descriptive name of the resource provider.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param providerType The cloud vendor from which to consume services through your subscribed account. Possible values are:
         * 
         * @return builder
         * 
         */
        public Builder providerType(@Nullable Output<String> providerType) {
            $.providerType = providerType;
            return this;
        }

        /**
         * @param providerType The cloud vendor from which to consume services through your subscribed account. Possible values are:
         * 
         * @return builder
         * 
         */
        public Builder providerType(String providerType) {
            return providerType(Output.of(providerType));
        }

        /**
         * @param technicalName The unique technical name of the resource provider.
         * 
         * @return builder
         * 
         */
        public Builder technicalName(@Nullable Output<String> technicalName) {
            $.technicalName = technicalName;
            return this;
        }

        /**
         * @param technicalName The unique technical name of the resource provider.
         * 
         * @return builder
         * 
         */
        public Builder technicalName(String technicalName) {
            return technicalName(Output.of(technicalName));
        }

        public GlobalaccountResourceProviderState build() {
            return $;
        }
    }

}
