// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSubaccountServicePlansPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubaccountServicePlansPlainArgs Empty = new GetSubaccountServicePlansPlainArgs();

    /**
     * Filter the response on the environment (sapbtp, kubernetes, cloudfoundry).
     * 
     */
    @Import(name="environment")
    private @Nullable String environment;

    /**
     * @return Filter the response on the environment (sapbtp, kubernetes, cloudfoundry).
     * 
     */
    public Optional<String> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * Filters the response based on the field query.
     * 
     */
    @Import(name="fieldsFilter")
    private @Nullable String fieldsFilter;

    /**
     * @return Filters the response based on the field query.
     * 
     */
    public Optional<String> fieldsFilter() {
        return Optional.ofNullable(this.fieldsFilter);
    }

    /**
     * Filters the response based on the labels query.
     * 
     */
    @Import(name="labelsFilter")
    private @Nullable String labelsFilter;

    /**
     * @return Filters the response based on the labels query.
     * 
     */
    public Optional<String> labelsFilter() {
        return Optional.ofNullable(this.labelsFilter);
    }

    /**
     * The ID of the subaccount.
     * 
     */
    @Import(name="subaccountId", required=true)
    private String subaccountId;

    /**
     * @return The ID of the subaccount.
     * 
     */
    public String subaccountId() {
        return this.subaccountId;
    }

    private GetSubaccountServicePlansPlainArgs() {}

    private GetSubaccountServicePlansPlainArgs(GetSubaccountServicePlansPlainArgs $) {
        this.environment = $.environment;
        this.fieldsFilter = $.fieldsFilter;
        this.labelsFilter = $.labelsFilter;
        this.subaccountId = $.subaccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubaccountServicePlansPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubaccountServicePlansPlainArgs $;

        public Builder() {
            $ = new GetSubaccountServicePlansPlainArgs();
        }

        public Builder(GetSubaccountServicePlansPlainArgs defaults) {
            $ = new GetSubaccountServicePlansPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environment Filter the response on the environment (sapbtp, kubernetes, cloudfoundry).
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable String environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param fieldsFilter Filters the response based on the field query.
         * 
         * @return builder
         * 
         */
        public Builder fieldsFilter(@Nullable String fieldsFilter) {
            $.fieldsFilter = fieldsFilter;
            return this;
        }

        /**
         * @param labelsFilter Filters the response based on the labels query.
         * 
         * @return builder
         * 
         */
        public Builder labelsFilter(@Nullable String labelsFilter) {
            $.labelsFilter = labelsFilter;
            return this;
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(String subaccountId) {
            $.subaccountId = subaccountId;
            return this;
        }

        public GetSubaccountServicePlansPlainArgs build() {
            $.subaccountId = Objects.requireNonNull($.subaccountId, "expected parameter 'subaccountId' to be non-null");
            return $;
        }
    }

}
