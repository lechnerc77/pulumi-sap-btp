// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubaccountServiceBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubaccountServiceBindingArgs Empty = new SubaccountServiceBindingArgs();

    /**
     * The set of words or phrases assigned to the service binding.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,List<String>>> labels;

    /**
     * @return The set of words or phrases assigned to the service binding.
     * 
     */
    public Optional<Output<Map<String,List<String>>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The name of the service binding.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the service binding.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The parameters of the service binding as a valid JSON object.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    /**
     * @return The parameters of the service binding as a valid JSON object.
     * 
     */
    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The ID of the service instance associated with the binding.
     * 
     */
    @Import(name="serviceInstanceId", required=true)
    private Output<String> serviceInstanceId;

    /**
     * @return The ID of the service instance associated with the binding.
     * 
     */
    public Output<String> serviceInstanceId() {
        return this.serviceInstanceId;
    }

    /**
     * The ID of the subaccount.
     * 
     */
    @Import(name="subaccountId", required=true)
    private Output<String> subaccountId;

    /**
     * @return The ID of the subaccount.
     * 
     */
    public Output<String> subaccountId() {
        return this.subaccountId;
    }

    private SubaccountServiceBindingArgs() {}

    private SubaccountServiceBindingArgs(SubaccountServiceBindingArgs $) {
        this.labels = $.labels;
        this.name = $.name;
        this.parameters = $.parameters;
        this.serviceInstanceId = $.serviceInstanceId;
        this.subaccountId = $.subaccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubaccountServiceBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubaccountServiceBindingArgs $;

        public Builder() {
            $ = new SubaccountServiceBindingArgs();
        }

        public Builder(SubaccountServiceBindingArgs defaults) {
            $ = new SubaccountServiceBindingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param labels The set of words or phrases assigned to the service binding.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,List<String>>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The set of words or phrases assigned to the service binding.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,List<String>> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name The name of the service binding.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the service binding.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameters The parameters of the service binding as a valid JSON object.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The parameters of the service binding as a valid JSON object.
         * 
         * @return builder
         * 
         */
        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param serviceInstanceId The ID of the service instance associated with the binding.
         * 
         * @return builder
         * 
         */
        public Builder serviceInstanceId(Output<String> serviceInstanceId) {
            $.serviceInstanceId = serviceInstanceId;
            return this;
        }

        /**
         * @param serviceInstanceId The ID of the service instance associated with the binding.
         * 
         * @return builder
         * 
         */
        public Builder serviceInstanceId(String serviceInstanceId) {
            return serviceInstanceId(Output.of(serviceInstanceId));
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(Output<String> subaccountId) {
            $.subaccountId = subaccountId;
            return this;
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(String subaccountId) {
            return subaccountId(Output.of(subaccountId));
        }

        public SubaccountServiceBindingArgs build() {
            $.serviceInstanceId = Objects.requireNonNull($.serviceInstanceId, "expected parameter 'serviceInstanceId' to be non-null");
            $.subaccountId = Objects.requireNonNull($.subaccountId, "expected parameter 'subaccountId' to be non-null");
            return $;
        }
    }

}
