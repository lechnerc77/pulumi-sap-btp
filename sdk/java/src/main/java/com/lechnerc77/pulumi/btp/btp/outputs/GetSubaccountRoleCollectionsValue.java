// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.outputs;

import com.lechnerc77.pulumi.btp.btp.outputs.GetSubaccountRoleCollectionsValueRole;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSubaccountRoleCollectionsValue {
    /**
     * @return The description of the role collection.
     * 
     */
    private String description;
    /**
     * @return The name of the role collection.
     * 
     */
    private String name;
    /**
     * @return Shows whether the role collection is read-only.
     * 
     */
    private Boolean readOnly;
    private List<GetSubaccountRoleCollectionsValueRole> roles;

    private GetSubaccountRoleCollectionsValue() {}
    /**
     * @return The description of the role collection.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The name of the role collection.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Shows whether the role collection is read-only.
     * 
     */
    public Boolean readOnly() {
        return this.readOnly;
    }
    public List<GetSubaccountRoleCollectionsValueRole> roles() {
        return this.roles;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubaccountRoleCollectionsValue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String name;
        private Boolean readOnly;
        private List<GetSubaccountRoleCollectionsValueRole> roles;
        public Builder() {}
        public Builder(GetSubaccountRoleCollectionsValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.readOnly = defaults.readOnly;
    	      this.roles = defaults.roles;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(Boolean readOnly) {
            this.readOnly = Objects.requireNonNull(readOnly);
            return this;
        }
        @CustomType.Setter
        public Builder roles(List<GetSubaccountRoleCollectionsValueRole> roles) {
            this.roles = Objects.requireNonNull(roles);
            return this;
        }
        public Builder roles(GetSubaccountRoleCollectionsValueRole... roles) {
            return roles(List.of(roles));
        }
        public GetSubaccountRoleCollectionsValue build() {
            final var _resultValue = new GetSubaccountRoleCollectionsValue();
            _resultValue.description = description;
            _resultValue.name = name;
            _resultValue.readOnly = readOnly;
            _resultValue.roles = roles;
            return _resultValue;
        }
    }
}
