// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSubaccountEnvironmentInstanceResult {
    /**
     * @return The ID of the associated environment broker.
     * 
     */
    private String brokerId;
    /**
     * @return The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    private String createdDate;
    private Map<String,List<String>> customLabels;
    /**
     * @return The URL of the service dashboard, which is a web-based management user interface for the service instances.
     * 
     */
    private String dashboardUrl;
    /**
     * @return The description of the environment instance.
     * 
     */
    private String description;
    /**
     * @return The type of the environment instance that is used.
     * 
     */
    private String environmentType;
    /**
     * @return The ID of the environment instance.
     * 
     */
    private String id;
    /**
     * @return The set of words or phrases assigned to the environment instance.
     * 
     */
    private String labels;
    /**
     * @return The name of the landscape within the logged-in region on which the environment instance is created.
     * 
     */
    private String landscapeLabel;
    /**
     * @return The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    private String lastModified;
    /**
     * @return The name of the environment instance.
     * 
     */
    private String name;
    /**
     * @return An identifier that represents the last operation. This ID is returned by the environment brokers.
     * 
     */
    private String operation;
    /**
     * @return The configuration parameters for the environment instance.
     * 
     */
    private String parameters;
    /**
     * @return The ID of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    private String planId;
    /**
     * @return The name of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    private String planName;
    /**
     * @return The ID of the platform for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    private String platformId;
    /**
     * @return The ID of the service for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    private String serviceId;
    /**
     * @return The name of the service for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    private String serviceName;
    /**
     * @return The current state of the environment instance. Possible values are:
     * 
     */
    private String state;
    /**
     * @return The ID of the subaccount.
     * 
     */
    private String subaccountId;
    private String tenantId;
    private String type;

    private GetSubaccountEnvironmentInstanceResult() {}
    /**
     * @return The ID of the associated environment broker.
     * 
     */
    public String brokerId() {
        return this.brokerId;
    }
    /**
     * @return The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    public Map<String,List<String>> customLabels() {
        return this.customLabels;
    }
    /**
     * @return The URL of the service dashboard, which is a web-based management user interface for the service instances.
     * 
     */
    public String dashboardUrl() {
        return this.dashboardUrl;
    }
    /**
     * @return The description of the environment instance.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The type of the environment instance that is used.
     * 
     */
    public String environmentType() {
        return this.environmentType;
    }
    /**
     * @return The ID of the environment instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The set of words or phrases assigned to the environment instance.
     * 
     */
    public String labels() {
        return this.labels;
    }
    /**
     * @return The name of the landscape within the logged-in region on which the environment instance is created.
     * 
     */
    public String landscapeLabel() {
        return this.landscapeLabel;
    }
    /**
     * @return The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    /**
     * @return The name of the environment instance.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return An identifier that represents the last operation. This ID is returned by the environment brokers.
     * 
     */
    public String operation() {
        return this.operation;
    }
    /**
     * @return The configuration parameters for the environment instance.
     * 
     */
    public String parameters() {
        return this.parameters;
    }
    /**
     * @return The ID of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public String planId() {
        return this.planId;
    }
    /**
     * @return The name of the service plan for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public String planName() {
        return this.planName;
    }
    /**
     * @return The ID of the platform for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public String platformId() {
        return this.platformId;
    }
    /**
     * @return The ID of the service for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public String serviceId() {
        return this.serviceId;
    }
    /**
     * @return The name of the service for the environment instance in the corresponding service broker&#39;s catalog.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return The current state of the environment instance. Possible values are:
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The ID of the subaccount.
     * 
     */
    public String subaccountId() {
        return this.subaccountId;
    }
    public String tenantId() {
        return this.tenantId;
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubaccountEnvironmentInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String brokerId;
        private String createdDate;
        private Map<String,List<String>> customLabels;
        private String dashboardUrl;
        private String description;
        private String environmentType;
        private String id;
        private String labels;
        private String landscapeLabel;
        private String lastModified;
        private String name;
        private String operation;
        private String parameters;
        private String planId;
        private String planName;
        private String platformId;
        private String serviceId;
        private String serviceName;
        private String state;
        private String subaccountId;
        private String tenantId;
        private String type;
        public Builder() {}
        public Builder(GetSubaccountEnvironmentInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.brokerId = defaults.brokerId;
    	      this.createdDate = defaults.createdDate;
    	      this.customLabels = defaults.customLabels;
    	      this.dashboardUrl = defaults.dashboardUrl;
    	      this.description = defaults.description;
    	      this.environmentType = defaults.environmentType;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.landscapeLabel = defaults.landscapeLabel;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.operation = defaults.operation;
    	      this.parameters = defaults.parameters;
    	      this.planId = defaults.planId;
    	      this.planName = defaults.planName;
    	      this.platformId = defaults.platformId;
    	      this.serviceId = defaults.serviceId;
    	      this.serviceName = defaults.serviceName;
    	      this.state = defaults.state;
    	      this.subaccountId = defaults.subaccountId;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder brokerId(String brokerId) {
            this.brokerId = Objects.requireNonNull(brokerId);
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }
        @CustomType.Setter
        public Builder customLabels(Map<String,List<String>> customLabels) {
            this.customLabels = Objects.requireNonNull(customLabels);
            return this;
        }
        @CustomType.Setter
        public Builder dashboardUrl(String dashboardUrl) {
            this.dashboardUrl = Objects.requireNonNull(dashboardUrl);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder environmentType(String environmentType) {
            this.environmentType = Objects.requireNonNull(environmentType);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder labels(String labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        @CustomType.Setter
        public Builder landscapeLabel(String landscapeLabel) {
            this.landscapeLabel = Objects.requireNonNull(landscapeLabel);
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder operation(String operation) {
            this.operation = Objects.requireNonNull(operation);
            return this;
        }
        @CustomType.Setter
        public Builder parameters(String parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        @CustomType.Setter
        public Builder planId(String planId) {
            this.planId = Objects.requireNonNull(planId);
            return this;
        }
        @CustomType.Setter
        public Builder planName(String planName) {
            this.planName = Objects.requireNonNull(planName);
            return this;
        }
        @CustomType.Setter
        public Builder platformId(String platformId) {
            this.platformId = Objects.requireNonNull(platformId);
            return this;
        }
        @CustomType.Setter
        public Builder serviceId(String serviceId) {
            this.serviceId = Objects.requireNonNull(serviceId);
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subaccountId(String subaccountId) {
            this.subaccountId = Objects.requireNonNull(subaccountId);
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetSubaccountEnvironmentInstanceResult build() {
            final var _resultValue = new GetSubaccountEnvironmentInstanceResult();
            _resultValue.brokerId = brokerId;
            _resultValue.createdDate = createdDate;
            _resultValue.customLabels = customLabels;
            _resultValue.dashboardUrl = dashboardUrl;
            _resultValue.description = description;
            _resultValue.environmentType = environmentType;
            _resultValue.id = id;
            _resultValue.labels = labels;
            _resultValue.landscapeLabel = landscapeLabel;
            _resultValue.lastModified = lastModified;
            _resultValue.name = name;
            _resultValue.operation = operation;
            _resultValue.parameters = parameters;
            _resultValue.planId = planId;
            _resultValue.planName = planName;
            _resultValue.platformId = platformId;
            _resultValue.serviceId = serviceId;
            _resultValue.serviceName = serviceName;
            _resultValue.state = state;
            _resultValue.subaccountId = subaccountId;
            _resultValue.tenantId = tenantId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
