// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp;

import com.lechnerc77.pulumi.btp.btp.inputs.SubaccountServiceInstanceTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubaccountServiceInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubaccountServiceInstanceArgs Empty = new SubaccountServiceInstanceArgs();

    /**
     * The set of words or phrases assigned to the service instance.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<Map<String,List<String>>> labels;

    /**
     * @return The set of words or phrases assigned to the service instance.
     * 
     */
    public Optional<Output<Map<String,List<String>>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The name of the service instance.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the service instance.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The configuration parameters for the service instance.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    /**
     * @return The configuration parameters for the service instance.
     * 
     */
    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The ID of the service plan.
     * 
     */
    @Import(name="serviceplanId", required=true)
    private Output<String> serviceplanId;

    /**
     * @return The ID of the service plan.
     * 
     */
    public Output<String> serviceplanId() {
        return this.serviceplanId;
    }

    /**
     * The ID of the subaccount.
     * 
     */
    @Import(name="subaccountId", required=true)
    private Output<String> subaccountId;

    /**
     * @return The ID of the subaccount.
     * 
     */
    public Output<String> subaccountId() {
        return this.subaccountId;
    }

    @Import(name="timeouts")
    private @Nullable Output<SubaccountServiceInstanceTimeoutsArgs> timeouts;

    public Optional<Output<SubaccountServiceInstanceTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private SubaccountServiceInstanceArgs() {}

    private SubaccountServiceInstanceArgs(SubaccountServiceInstanceArgs $) {
        this.labels = $.labels;
        this.name = $.name;
        this.parameters = $.parameters;
        this.serviceplanId = $.serviceplanId;
        this.subaccountId = $.subaccountId;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubaccountServiceInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubaccountServiceInstanceArgs $;

        public Builder() {
            $ = new SubaccountServiceInstanceArgs();
        }

        public Builder(SubaccountServiceInstanceArgs defaults) {
            $ = new SubaccountServiceInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param labels The set of words or phrases assigned to the service instance.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<Map<String,List<String>>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels The set of words or phrases assigned to the service instance.
         * 
         * @return builder
         * 
         */
        public Builder labels(Map<String,List<String>> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param name The name of the service instance.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the service instance.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameters The configuration parameters for the service instance.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The configuration parameters for the service instance.
         * 
         * @return builder
         * 
         */
        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param serviceplanId The ID of the service plan.
         * 
         * @return builder
         * 
         */
        public Builder serviceplanId(Output<String> serviceplanId) {
            $.serviceplanId = serviceplanId;
            return this;
        }

        /**
         * @param serviceplanId The ID of the service plan.
         * 
         * @return builder
         * 
         */
        public Builder serviceplanId(String serviceplanId) {
            return serviceplanId(Output.of(serviceplanId));
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(Output<String> subaccountId) {
            $.subaccountId = subaccountId;
            return this;
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(String subaccountId) {
            return subaccountId(Output.of(subaccountId));
        }

        public Builder timeouts(@Nullable Output<SubaccountServiceInstanceTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(SubaccountServiceInstanceTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public SubaccountServiceInstanceArgs build() {
            $.serviceplanId = Objects.requireNonNull($.serviceplanId, "expected parameter 'serviceplanId' to be non-null");
            $.subaccountId = Objects.requireNonNull($.subaccountId, "expected parameter 'subaccountId' to be non-null");
            return $;
        }
    }

}
