// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubaccountEntitlementArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubaccountEntitlementArgs Empty = new SubaccountEntitlementArgs();

    /**
     * The quota assigned to the subaccount.
     * 
     */
    @Import(name="amount")
    private @Nullable Output<Integer> amount;

    /**
     * @return The quota assigned to the subaccount.
     * 
     */
    public Optional<Output<Integer>> amount() {
        return Optional.ofNullable(this.amount);
    }

    /**
     * The name of the entitled service plan.
     * 
     */
    @Import(name="planName", required=true)
    private Output<String> planName;

    /**
     * @return The name of the entitled service plan.
     * 
     */
    public Output<String> planName() {
        return this.planName;
    }

    /**
     * The name of the entitled service.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The name of the entitled service.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * The ID of the subaccount.
     * 
     */
    @Import(name="subaccountId", required=true)
    private Output<String> subaccountId;

    /**
     * @return The ID of the subaccount.
     * 
     */
    public Output<String> subaccountId() {
        return this.subaccountId;
    }

    private SubaccountEntitlementArgs() {}

    private SubaccountEntitlementArgs(SubaccountEntitlementArgs $) {
        this.amount = $.amount;
        this.planName = $.planName;
        this.serviceName = $.serviceName;
        this.subaccountId = $.subaccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubaccountEntitlementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubaccountEntitlementArgs $;

        public Builder() {
            $ = new SubaccountEntitlementArgs();
        }

        public Builder(SubaccountEntitlementArgs defaults) {
            $ = new SubaccountEntitlementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amount The quota assigned to the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder amount(@Nullable Output<Integer> amount) {
            $.amount = amount;
            return this;
        }

        /**
         * @param amount The quota assigned to the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder amount(Integer amount) {
            return amount(Output.of(amount));
        }

        /**
         * @param planName The name of the entitled service plan.
         * 
         * @return builder
         * 
         */
        public Builder planName(Output<String> planName) {
            $.planName = planName;
            return this;
        }

        /**
         * @param planName The name of the entitled service plan.
         * 
         * @return builder
         * 
         */
        public Builder planName(String planName) {
            return planName(Output.of(planName));
        }

        /**
         * @param serviceName The name of the entitled service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The name of the entitled service.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(Output<String> subaccountId) {
            $.subaccountId = subaccountId;
            return this;
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(String subaccountId) {
            return subaccountId(Output.of(subaccountId));
        }

        public SubaccountEntitlementArgs build() {
            $.planName = Objects.requireNonNull($.planName, "expected parameter 'planName' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            $.subaccountId = Objects.requireNonNull($.subaccountId, "expected parameter 'subaccountId' to be non-null");
            return $;
        }
    }

}
