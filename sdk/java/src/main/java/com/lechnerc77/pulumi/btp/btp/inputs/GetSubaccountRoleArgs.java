// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetSubaccountRoleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubaccountRoleArgs Empty = new GetSubaccountRoleArgs();

    /**
     * The ID of the xsuaa application.
     * 
     */
    @Import(name="appId", required=true)
    private Output<String> appId;

    /**
     * @return The ID of the xsuaa application.
     * 
     */
    public Output<String> appId() {
        return this.appId;
    }

    /**
     * The name of the role.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the role.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The name of the role template.
     * 
     */
    @Import(name="roleTemplateName", required=true)
    private Output<String> roleTemplateName;

    /**
     * @return The name of the role template.
     * 
     */
    public Output<String> roleTemplateName() {
        return this.roleTemplateName;
    }

    /**
     * The ID of the subaccount.
     * 
     */
    @Import(name="subaccountId", required=true)
    private Output<String> subaccountId;

    /**
     * @return The ID of the subaccount.
     * 
     */
    public Output<String> subaccountId() {
        return this.subaccountId;
    }

    private GetSubaccountRoleArgs() {}

    private GetSubaccountRoleArgs(GetSubaccountRoleArgs $) {
        this.appId = $.appId;
        this.name = $.name;
        this.roleTemplateName = $.roleTemplateName;
        this.subaccountId = $.subaccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubaccountRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubaccountRoleArgs $;

        public Builder() {
            $ = new GetSubaccountRoleArgs();
        }

        public Builder(GetSubaccountRoleArgs defaults) {
            $ = new GetSubaccountRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appId The ID of the xsuaa application.
         * 
         * @return builder
         * 
         */
        public Builder appId(Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId The ID of the xsuaa application.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param name The name of the role.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the role.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param roleTemplateName The name of the role template.
         * 
         * @return builder
         * 
         */
        public Builder roleTemplateName(Output<String> roleTemplateName) {
            $.roleTemplateName = roleTemplateName;
            return this;
        }

        /**
         * @param roleTemplateName The name of the role template.
         * 
         * @return builder
         * 
         */
        public Builder roleTemplateName(String roleTemplateName) {
            return roleTemplateName(Output.of(roleTemplateName));
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(Output<String> subaccountId) {
            $.subaccountId = subaccountId;
            return this;
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(String subaccountId) {
            return subaccountId(Output.of(subaccountId));
        }

        public GetSubaccountRoleArgs build() {
            $.appId = Objects.requireNonNull($.appId, "expected parameter 'appId' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.roleTemplateName = Objects.requireNonNull($.roleTemplateName, "expected parameter 'roleTemplateName' to be non-null");
            $.subaccountId = Objects.requireNonNull($.subaccountId, "expected parameter 'subaccountId' to be non-null");
            return $;
        }
    }

}
