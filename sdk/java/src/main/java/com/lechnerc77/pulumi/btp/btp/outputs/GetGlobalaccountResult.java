// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGlobalaccountResult {
    /**
     * @return The type of the commercial contract that was signed.
     * 
     */
    private String commercialModel;
    /**
     * @return Shows whether the customer of the global account pays only for services that they actually use (consumption-based) or pays for subscribed services at a fixed cost irrespective of consumption (subscription-based).
     * 
     */
    private Boolean consumptionBased;
    /**
     * @return The status of the customer contract and its associated root global account. Possible values are:
     * 
     */
    private String contractStatus;
    private String costobjectId;
    private String costobjectType;
    private String createdDate;
    private String crmCustomerId;
    private String crmTenantId;
    private String description;
    private String expiryDate;
    private String geoAccess;
    private String id;
    private String lastModified;
    private String licenseType;
    private String name;
    private String origin;
    private String renewalDate;
    private String serviceId;
    private String state;
    private String subdomain;
    private String usage;

    private GetGlobalaccountResult() {}
    /**
     * @return The type of the commercial contract that was signed.
     * 
     */
    public String commercialModel() {
        return this.commercialModel;
    }
    /**
     * @return Shows whether the customer of the global account pays only for services that they actually use (consumption-based) or pays for subscribed services at a fixed cost irrespective of consumption (subscription-based).
     * 
     */
    public Boolean consumptionBased() {
        return this.consumptionBased;
    }
    /**
     * @return The status of the customer contract and its associated root global account. Possible values are:
     * 
     */
    public String contractStatus() {
        return this.contractStatus;
    }
    public String costobjectId() {
        return this.costobjectId;
    }
    public String costobjectType() {
        return this.costobjectType;
    }
    public String createdDate() {
        return this.createdDate;
    }
    public String crmCustomerId() {
        return this.crmCustomerId;
    }
    public String crmTenantId() {
        return this.crmTenantId;
    }
    public String description() {
        return this.description;
    }
    public String expiryDate() {
        return this.expiryDate;
    }
    public String geoAccess() {
        return this.geoAccess;
    }
    public String id() {
        return this.id;
    }
    public String lastModified() {
        return this.lastModified;
    }
    public String licenseType() {
        return this.licenseType;
    }
    public String name() {
        return this.name;
    }
    public String origin() {
        return this.origin;
    }
    public String renewalDate() {
        return this.renewalDate;
    }
    public String serviceId() {
        return this.serviceId;
    }
    public String state() {
        return this.state;
    }
    public String subdomain() {
        return this.subdomain;
    }
    public String usage() {
        return this.usage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalaccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String commercialModel;
        private Boolean consumptionBased;
        private String contractStatus;
        private String costobjectId;
        private String costobjectType;
        private String createdDate;
        private String crmCustomerId;
        private String crmTenantId;
        private String description;
        private String expiryDate;
        private String geoAccess;
        private String id;
        private String lastModified;
        private String licenseType;
        private String name;
        private String origin;
        private String renewalDate;
        private String serviceId;
        private String state;
        private String subdomain;
        private String usage;
        public Builder() {}
        public Builder(GetGlobalaccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commercialModel = defaults.commercialModel;
    	      this.consumptionBased = defaults.consumptionBased;
    	      this.contractStatus = defaults.contractStatus;
    	      this.costobjectId = defaults.costobjectId;
    	      this.costobjectType = defaults.costobjectType;
    	      this.createdDate = defaults.createdDate;
    	      this.crmCustomerId = defaults.crmCustomerId;
    	      this.crmTenantId = defaults.crmTenantId;
    	      this.description = defaults.description;
    	      this.expiryDate = defaults.expiryDate;
    	      this.geoAccess = defaults.geoAccess;
    	      this.id = defaults.id;
    	      this.lastModified = defaults.lastModified;
    	      this.licenseType = defaults.licenseType;
    	      this.name = defaults.name;
    	      this.origin = defaults.origin;
    	      this.renewalDate = defaults.renewalDate;
    	      this.serviceId = defaults.serviceId;
    	      this.state = defaults.state;
    	      this.subdomain = defaults.subdomain;
    	      this.usage = defaults.usage;
        }

        @CustomType.Setter
        public Builder commercialModel(String commercialModel) {
            this.commercialModel = Objects.requireNonNull(commercialModel);
            return this;
        }
        @CustomType.Setter
        public Builder consumptionBased(Boolean consumptionBased) {
            this.consumptionBased = Objects.requireNonNull(consumptionBased);
            return this;
        }
        @CustomType.Setter
        public Builder contractStatus(String contractStatus) {
            this.contractStatus = Objects.requireNonNull(contractStatus);
            return this;
        }
        @CustomType.Setter
        public Builder costobjectId(String costobjectId) {
            this.costobjectId = Objects.requireNonNull(costobjectId);
            return this;
        }
        @CustomType.Setter
        public Builder costobjectType(String costobjectType) {
            this.costobjectType = Objects.requireNonNull(costobjectType);
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }
        @CustomType.Setter
        public Builder crmCustomerId(String crmCustomerId) {
            this.crmCustomerId = Objects.requireNonNull(crmCustomerId);
            return this;
        }
        @CustomType.Setter
        public Builder crmTenantId(String crmTenantId) {
            this.crmTenantId = Objects.requireNonNull(crmTenantId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder expiryDate(String expiryDate) {
            this.expiryDate = Objects.requireNonNull(expiryDate);
            return this;
        }
        @CustomType.Setter
        public Builder geoAccess(String geoAccess) {
            this.geoAccess = Objects.requireNonNull(geoAccess);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }
        @CustomType.Setter
        public Builder licenseType(String licenseType) {
            this.licenseType = Objects.requireNonNull(licenseType);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            this.origin = Objects.requireNonNull(origin);
            return this;
        }
        @CustomType.Setter
        public Builder renewalDate(String renewalDate) {
            this.renewalDate = Objects.requireNonNull(renewalDate);
            return this;
        }
        @CustomType.Setter
        public Builder serviceId(String serviceId) {
            this.serviceId = Objects.requireNonNull(serviceId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subdomain(String subdomain) {
            this.subdomain = Objects.requireNonNull(subdomain);
            return this;
        }
        @CustomType.Setter
        public Builder usage(String usage) {
            this.usage = Objects.requireNonNull(usage);
            return this;
        }
        public GetGlobalaccountResult build() {
            final var _resultValue = new GetGlobalaccountResult();
            _resultValue.commercialModel = commercialModel;
            _resultValue.consumptionBased = consumptionBased;
            _resultValue.contractStatus = contractStatus;
            _resultValue.costobjectId = costobjectId;
            _resultValue.costobjectType = costobjectType;
            _resultValue.createdDate = createdDate;
            _resultValue.crmCustomerId = crmCustomerId;
            _resultValue.crmTenantId = crmTenantId;
            _resultValue.description = description;
            _resultValue.expiryDate = expiryDate;
            _resultValue.geoAccess = geoAccess;
            _resultValue.id = id;
            _resultValue.lastModified = lastModified;
            _resultValue.licenseType = licenseType;
            _resultValue.name = name;
            _resultValue.origin = origin;
            _resultValue.renewalDate = renewalDate;
            _resultValue.serviceId = serviceId;
            _resultValue.state = state;
            _resultValue.subdomain = subdomain;
            _resultValue.usage = usage;
            return _resultValue;
        }
    }
}
