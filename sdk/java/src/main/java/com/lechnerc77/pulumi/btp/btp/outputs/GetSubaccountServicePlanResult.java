// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubaccountServicePlanResult {
    /**
     * @return Shows whether the service plan is bindable.
     * 
     */
    private Boolean bindable;
    /**
     * @return The ID of the service plan in the service broker catalog.
     * 
     */
    private String catalogId;
    /**
     * @return The name of the associated service broker catalog.
     * 
     */
    private String catalogName;
    /**
     * @return The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    private String createdDate;
    /**
     * @return The description of the service plan.
     * 
     */
    private String description;
    /**
     * @return Shows whether the service plan is free.
     * 
     */
    private Boolean free;
    /**
     * @return The ID of the service plan.
     * 
     */
    private String id;
    /**
     * @return The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    private String lastModified;
    /**
     * @return The name of the service plan.
     * 
     */
    private String name;
    /**
     * @return The name of the service offering of the plan.
     * 
     */
    private String offeringName;
    /**
     * @return Shows whether the service plan is ready.
     * 
     */
    private Boolean ready;
    /**
     * @return The ID of the service offering.
     * 
     */
    private String serviceofferingId;
    /**
     * @return The ID of the subaccount.
     * 
     */
    private String subaccountId;

    private GetSubaccountServicePlanResult() {}
    /**
     * @return Shows whether the service plan is bindable.
     * 
     */
    public Boolean bindable() {
        return this.bindable;
    }
    /**
     * @return The ID of the service plan in the service broker catalog.
     * 
     */
    public String catalogId() {
        return this.catalogId;
    }
    /**
     * @return The name of the associated service broker catalog.
     * 
     */
    public String catalogName() {
        return this.catalogName;
    }
    /**
     * @return The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public String createdDate() {
        return this.createdDate;
    }
    /**
     * @return The description of the service plan.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Shows whether the service plan is free.
     * 
     */
    public Boolean free() {
        return this.free;
    }
    /**
     * @return The ID of the service plan.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    /**
     * @return The name of the service plan.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The name of the service offering of the plan.
     * 
     */
    public String offeringName() {
        return this.offeringName;
    }
    /**
     * @return Shows whether the service plan is ready.
     * 
     */
    public Boolean ready() {
        return this.ready;
    }
    /**
     * @return The ID of the service offering.
     * 
     */
    public String serviceofferingId() {
        return this.serviceofferingId;
    }
    /**
     * @return The ID of the subaccount.
     * 
     */
    public String subaccountId() {
        return this.subaccountId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubaccountServicePlanResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean bindable;
        private String catalogId;
        private String catalogName;
        private String createdDate;
        private String description;
        private Boolean free;
        private String id;
        private String lastModified;
        private String name;
        private String offeringName;
        private Boolean ready;
        private String serviceofferingId;
        private String subaccountId;
        public Builder() {}
        public Builder(GetSubaccountServicePlanResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bindable = defaults.bindable;
    	      this.catalogId = defaults.catalogId;
    	      this.catalogName = defaults.catalogName;
    	      this.createdDate = defaults.createdDate;
    	      this.description = defaults.description;
    	      this.free = defaults.free;
    	      this.id = defaults.id;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.offeringName = defaults.offeringName;
    	      this.ready = defaults.ready;
    	      this.serviceofferingId = defaults.serviceofferingId;
    	      this.subaccountId = defaults.subaccountId;
        }

        @CustomType.Setter
        public Builder bindable(Boolean bindable) {
            this.bindable = Objects.requireNonNull(bindable);
            return this;
        }
        @CustomType.Setter
        public Builder catalogId(String catalogId) {
            this.catalogId = Objects.requireNonNull(catalogId);
            return this;
        }
        @CustomType.Setter
        public Builder catalogName(String catalogName) {
            this.catalogName = Objects.requireNonNull(catalogName);
            return this;
        }
        @CustomType.Setter
        public Builder createdDate(String createdDate) {
            this.createdDate = Objects.requireNonNull(createdDate);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder free(Boolean free) {
            this.free = Objects.requireNonNull(free);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            this.lastModified = Objects.requireNonNull(lastModified);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder offeringName(String offeringName) {
            this.offeringName = Objects.requireNonNull(offeringName);
            return this;
        }
        @CustomType.Setter
        public Builder ready(Boolean ready) {
            this.ready = Objects.requireNonNull(ready);
            return this;
        }
        @CustomType.Setter
        public Builder serviceofferingId(String serviceofferingId) {
            this.serviceofferingId = Objects.requireNonNull(serviceofferingId);
            return this;
        }
        @CustomType.Setter
        public Builder subaccountId(String subaccountId) {
            this.subaccountId = Objects.requireNonNull(subaccountId);
            return this;
        }
        public GetSubaccountServicePlanResult build() {
            final var _resultValue = new GetSubaccountServicePlanResult();
            _resultValue.bindable = bindable;
            _resultValue.catalogId = catalogId;
            _resultValue.catalogName = catalogName;
            _resultValue.createdDate = createdDate;
            _resultValue.description = description;
            _resultValue.free = free;
            _resultValue.id = id;
            _resultValue.lastModified = lastModified;
            _resultValue.name = name;
            _resultValue.offeringName = offeringName;
            _resultValue.ready = ready;
            _resultValue.serviceofferingId = serviceofferingId;
            _resultValue.subaccountId = subaccountId;
            return _resultValue;
        }
    }
}
