// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetSubaccountSubscriptionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSubaccountSubscriptionPlainArgs Empty = new GetSubaccountSubscriptionPlainArgs();

    /**
     * The unique registration name of the deployed multitenant application as defined by the app developer.
     * 
     */
    @Import(name="appName", required=true)
    private String appName;

    /**
     * @return The unique registration name of the deployed multitenant application as defined by the app developer.
     * 
     */
    public String appName() {
        return this.appName;
    }

    /**
     * The plan name of the application to which the consumer has subscribed.
     * 
     */
    @Import(name="planName", required=true)
    private String planName;

    /**
     * @return The plan name of the application to which the consumer has subscribed.
     * 
     */
    public String planName() {
        return this.planName;
    }

    /**
     * The ID of the subaccount.
     * 
     */
    @Import(name="subaccountId", required=true)
    private String subaccountId;

    /**
     * @return The ID of the subaccount.
     * 
     */
    public String subaccountId() {
        return this.subaccountId;
    }

    private GetSubaccountSubscriptionPlainArgs() {}

    private GetSubaccountSubscriptionPlainArgs(GetSubaccountSubscriptionPlainArgs $) {
        this.appName = $.appName;
        this.planName = $.planName;
        this.subaccountId = $.subaccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSubaccountSubscriptionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSubaccountSubscriptionPlainArgs $;

        public Builder() {
            $ = new GetSubaccountSubscriptionPlainArgs();
        }

        public Builder(GetSubaccountSubscriptionPlainArgs defaults) {
            $ = new GetSubaccountSubscriptionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appName The unique registration name of the deployed multitenant application as defined by the app developer.
         * 
         * @return builder
         * 
         */
        public Builder appName(String appName) {
            $.appName = appName;
            return this;
        }

        /**
         * @param planName The plan name of the application to which the consumer has subscribed.
         * 
         * @return builder
         * 
         */
        public Builder planName(String planName) {
            $.planName = planName;
            return this;
        }

        /**
         * @param subaccountId The ID of the subaccount.
         * 
         * @return builder
         * 
         */
        public Builder subaccountId(String subaccountId) {
            $.subaccountId = subaccountId;
            return this;
        }

        public GetSubaccountSubscriptionPlainArgs build() {
            $.appName = Objects.requireNonNull($.appName, "expected parameter 'appName' to be non-null");
            $.planName = Objects.requireNonNull($.planName, "expected parameter 'planName' to be non-null");
            $.subaccountId = Objects.requireNonNull($.subaccountId, "expected parameter 'subaccountId' to be non-null");
            return $;
        }
    }

}
