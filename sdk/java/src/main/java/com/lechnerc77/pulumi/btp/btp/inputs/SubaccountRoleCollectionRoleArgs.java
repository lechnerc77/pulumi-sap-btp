// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.lechnerc77.pulumi.btp.btp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SubaccountRoleCollectionRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubaccountRoleCollectionRoleArgs Empty = new SubaccountRoleCollectionRoleArgs();

    /**
     * The name of the referenced role.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the referenced role.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The name of the referenced template app id.
     * 
     */
    @Import(name="roleTemplateAppId", required=true)
    private Output<String> roleTemplateAppId;

    /**
     * @return The name of the referenced template app id.
     * 
     */
    public Output<String> roleTemplateAppId() {
        return this.roleTemplateAppId;
    }

    /**
     * The name of the referenced role template.
     * 
     */
    @Import(name="roleTemplateName", required=true)
    private Output<String> roleTemplateName;

    /**
     * @return The name of the referenced role template.
     * 
     */
    public Output<String> roleTemplateName() {
        return this.roleTemplateName;
    }

    private SubaccountRoleCollectionRoleArgs() {}

    private SubaccountRoleCollectionRoleArgs(SubaccountRoleCollectionRoleArgs $) {
        this.name = $.name;
        this.roleTemplateAppId = $.roleTemplateAppId;
        this.roleTemplateName = $.roleTemplateName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubaccountRoleCollectionRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubaccountRoleCollectionRoleArgs $;

        public Builder() {
            $ = new SubaccountRoleCollectionRoleArgs();
        }

        public Builder(SubaccountRoleCollectionRoleArgs defaults) {
            $ = new SubaccountRoleCollectionRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the referenced role.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the referenced role.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param roleTemplateAppId The name of the referenced template app id.
         * 
         * @return builder
         * 
         */
        public Builder roleTemplateAppId(Output<String> roleTemplateAppId) {
            $.roleTemplateAppId = roleTemplateAppId;
            return this;
        }

        /**
         * @param roleTemplateAppId The name of the referenced template app id.
         * 
         * @return builder
         * 
         */
        public Builder roleTemplateAppId(String roleTemplateAppId) {
            return roleTemplateAppId(Output.of(roleTemplateAppId));
        }

        /**
         * @param roleTemplateName The name of the referenced role template.
         * 
         * @return builder
         * 
         */
        public Builder roleTemplateName(Output<String> roleTemplateName) {
            $.roleTemplateName = roleTemplateName;
            return this;
        }

        /**
         * @param roleTemplateName The name of the referenced role template.
         * 
         * @return builder
         * 
         */
        public Builder roleTemplateName(String roleTemplateName) {
            return roleTemplateName(Output.of(roleTemplateName));
        }

        public SubaccountRoleCollectionRoleArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.roleTemplateAppId = Objects.requireNonNull($.roleTemplateAppId, "expected parameter 'roleTemplateAppId' to be non-null");
            $.roleTemplateName = Objects.requireNonNull($.roleTemplateName, "expected parameter 'roleTemplateName' to be non-null");
            return $;
        }
    }

}
