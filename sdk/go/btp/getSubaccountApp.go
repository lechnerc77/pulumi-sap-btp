// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details about a specific app.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetSubaccountApp(ctx, &btp.GetSubaccountAppArgs{
//				Id:           "xsuaa!t1",
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubaccountApp(ctx *pulumi.Context, args *GetSubaccountAppArgs, opts ...pulumi.InvokeOption) (*GetSubaccountAppResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubaccountAppResult
	err := ctx.Invoke("btp:index/getSubaccountApp:getSubaccountApp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubaccountApp.
type GetSubaccountAppArgs struct {
	// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
	Id string `pulumi:"id"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
}

// A collection of values returned by getSubaccountApp.
type GetSubaccountAppResult struct {
	Authorities []string `pulumi:"authorities"`
	// The description of the app.
	Description            string   `pulumi:"description"`
	ForeignScopeReferences []string `pulumi:"foreignScopeReferences"`
	// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
	Id                  string                              `pulumi:"id"`
	MasterAppId         string                              `pulumi:"masterAppId"`
	Oauth2Configuration GetSubaccountAppOauth2Configuration `pulumi:"oauth2Configuration"`
	OrgId               string                              `pulumi:"orgId"`
	PlanId              string                              `pulumi:"planId"`
	PlanName            string                              `pulumi:"planName"`
	ServiceinstanceId   string                              `pulumi:"serviceinstanceId"`
	SpaceId             string                              `pulumi:"spaceId"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
	TenantMode   string `pulumi:"tenantMode"`
	Username     string `pulumi:"username"`
	Xsappname    string `pulumi:"xsappname"`
}

func GetSubaccountAppOutput(ctx *pulumi.Context, args GetSubaccountAppOutputArgs, opts ...pulumi.InvokeOption) GetSubaccountAppResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubaccountAppResult, error) {
			args := v.(GetSubaccountAppArgs)
			r, err := GetSubaccountApp(ctx, &args, opts...)
			var s GetSubaccountAppResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubaccountAppResultOutput)
}

// A collection of arguments for invoking getSubaccountApp.
type GetSubaccountAppOutputArgs struct {
	// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the subaccount.
	SubaccountId pulumi.StringInput `pulumi:"subaccountId"`
}

func (GetSubaccountAppOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountAppArgs)(nil)).Elem()
}

// A collection of values returned by getSubaccountApp.
type GetSubaccountAppResultOutput struct{ *pulumi.OutputState }

func (GetSubaccountAppResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountAppResult)(nil)).Elem()
}

func (o GetSubaccountAppResultOutput) ToGetSubaccountAppResultOutput() GetSubaccountAppResultOutput {
	return o
}

func (o GetSubaccountAppResultOutput) ToGetSubaccountAppResultOutputWithContext(ctx context.Context) GetSubaccountAppResultOutput {
	return o
}

func (o GetSubaccountAppResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountAppResult] {
	return pulumix.Output[GetSubaccountAppResult]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountAppResultOutput) Authorities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) []string { return v.Authorities }).(pulumi.StringArrayOutput)
}

// The description of the app.
func (o GetSubaccountAppResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) ForeignScopeReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) []string { return v.ForeignScopeReferences }).(pulumi.StringArrayOutput)
}

// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
func (o GetSubaccountAppResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) MasterAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.MasterAppId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) Oauth2Configuration() GetSubaccountAppOauth2ConfigurationOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) GetSubaccountAppOauth2Configuration { return v.Oauth2Configuration }).(GetSubaccountAppOauth2ConfigurationOutput)
}

func (o GetSubaccountAppResultOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.PlanId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.PlanName }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) ServiceinstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.ServiceinstanceId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.SpaceId }).(pulumi.StringOutput)
}

// The ID of the subaccount.
func (o GetSubaccountAppResultOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.SubaccountId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) TenantMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.TenantMode }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetSubaccountAppResultOutput) Xsappname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppResult) string { return v.Xsappname }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubaccountAppResultOutput{})
}
