// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DirectoryRoleCollectionRole struct {
	// The name of the referenced role.
	Name string `pulumi:"name"`
	// The name of the referenced template app id.
	RoleTemplateAppId string `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
}

// DirectoryRoleCollectionRoleInput is an input type that accepts DirectoryRoleCollectionRoleArgs and DirectoryRoleCollectionRoleOutput values.
// You can construct a concrete instance of `DirectoryRoleCollectionRoleInput` via:
//
//	DirectoryRoleCollectionRoleArgs{...}
type DirectoryRoleCollectionRoleInput interface {
	pulumi.Input

	ToDirectoryRoleCollectionRoleOutput() DirectoryRoleCollectionRoleOutput
	ToDirectoryRoleCollectionRoleOutputWithContext(context.Context) DirectoryRoleCollectionRoleOutput
}

type DirectoryRoleCollectionRoleArgs struct {
	// The name of the referenced role.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the referenced template app id.
	RoleTemplateAppId pulumi.StringInput `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (DirectoryRoleCollectionRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryRoleCollectionRole)(nil)).Elem()
}

func (i DirectoryRoleCollectionRoleArgs) ToDirectoryRoleCollectionRoleOutput() DirectoryRoleCollectionRoleOutput {
	return i.ToDirectoryRoleCollectionRoleOutputWithContext(context.Background())
}

func (i DirectoryRoleCollectionRoleArgs) ToDirectoryRoleCollectionRoleOutputWithContext(ctx context.Context) DirectoryRoleCollectionRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryRoleCollectionRoleOutput)
}

func (i DirectoryRoleCollectionRoleArgs) ToOutput(ctx context.Context) pulumix.Output[DirectoryRoleCollectionRole] {
	return pulumix.Output[DirectoryRoleCollectionRole]{
		OutputState: i.ToDirectoryRoleCollectionRoleOutputWithContext(ctx).OutputState,
	}
}

// DirectoryRoleCollectionRoleArrayInput is an input type that accepts DirectoryRoleCollectionRoleArray and DirectoryRoleCollectionRoleArrayOutput values.
// You can construct a concrete instance of `DirectoryRoleCollectionRoleArrayInput` via:
//
//	DirectoryRoleCollectionRoleArray{ DirectoryRoleCollectionRoleArgs{...} }
type DirectoryRoleCollectionRoleArrayInput interface {
	pulumi.Input

	ToDirectoryRoleCollectionRoleArrayOutput() DirectoryRoleCollectionRoleArrayOutput
	ToDirectoryRoleCollectionRoleArrayOutputWithContext(context.Context) DirectoryRoleCollectionRoleArrayOutput
}

type DirectoryRoleCollectionRoleArray []DirectoryRoleCollectionRoleInput

func (DirectoryRoleCollectionRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectoryRoleCollectionRole)(nil)).Elem()
}

func (i DirectoryRoleCollectionRoleArray) ToDirectoryRoleCollectionRoleArrayOutput() DirectoryRoleCollectionRoleArrayOutput {
	return i.ToDirectoryRoleCollectionRoleArrayOutputWithContext(context.Background())
}

func (i DirectoryRoleCollectionRoleArray) ToDirectoryRoleCollectionRoleArrayOutputWithContext(ctx context.Context) DirectoryRoleCollectionRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectoryRoleCollectionRoleArrayOutput)
}

func (i DirectoryRoleCollectionRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]DirectoryRoleCollectionRole] {
	return pulumix.Output[[]DirectoryRoleCollectionRole]{
		OutputState: i.ToDirectoryRoleCollectionRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type DirectoryRoleCollectionRoleOutput struct{ *pulumi.OutputState }

func (DirectoryRoleCollectionRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectoryRoleCollectionRole)(nil)).Elem()
}

func (o DirectoryRoleCollectionRoleOutput) ToDirectoryRoleCollectionRoleOutput() DirectoryRoleCollectionRoleOutput {
	return o
}

func (o DirectoryRoleCollectionRoleOutput) ToDirectoryRoleCollectionRoleOutputWithContext(ctx context.Context) DirectoryRoleCollectionRoleOutput {
	return o
}

func (o DirectoryRoleCollectionRoleOutput) ToOutput(ctx context.Context) pulumix.Output[DirectoryRoleCollectionRole] {
	return pulumix.Output[DirectoryRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

// The name of the referenced role.
func (o DirectoryRoleCollectionRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryRoleCollectionRole) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the referenced template app id.
func (o DirectoryRoleCollectionRoleOutput) RoleTemplateAppId() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryRoleCollectionRole) string { return v.RoleTemplateAppId }).(pulumi.StringOutput)
}

// The name of the referenced role template.
func (o DirectoryRoleCollectionRoleOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v DirectoryRoleCollectionRole) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

type DirectoryRoleCollectionRoleArrayOutput struct{ *pulumi.OutputState }

func (DirectoryRoleCollectionRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectoryRoleCollectionRole)(nil)).Elem()
}

func (o DirectoryRoleCollectionRoleArrayOutput) ToDirectoryRoleCollectionRoleArrayOutput() DirectoryRoleCollectionRoleArrayOutput {
	return o
}

func (o DirectoryRoleCollectionRoleArrayOutput) ToDirectoryRoleCollectionRoleArrayOutputWithContext(ctx context.Context) DirectoryRoleCollectionRoleArrayOutput {
	return o
}

func (o DirectoryRoleCollectionRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DirectoryRoleCollectionRole] {
	return pulumix.Output[[]DirectoryRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

func (o DirectoryRoleCollectionRoleArrayOutput) Index(i pulumi.IntInput) DirectoryRoleCollectionRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectoryRoleCollectionRole {
		return vs[0].([]DirectoryRoleCollectionRole)[vs[1].(int)]
	}).(DirectoryRoleCollectionRoleOutput)
}

type GlobalaccountRoleCollectionRole struct {
	// The name of the referenced role.
	Name string `pulumi:"name"`
	// The name of the referenced template app id.
	RoleTemplateAppId string `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
}

// GlobalaccountRoleCollectionRoleInput is an input type that accepts GlobalaccountRoleCollectionRoleArgs and GlobalaccountRoleCollectionRoleOutput values.
// You can construct a concrete instance of `GlobalaccountRoleCollectionRoleInput` via:
//
//	GlobalaccountRoleCollectionRoleArgs{...}
type GlobalaccountRoleCollectionRoleInput interface {
	pulumi.Input

	ToGlobalaccountRoleCollectionRoleOutput() GlobalaccountRoleCollectionRoleOutput
	ToGlobalaccountRoleCollectionRoleOutputWithContext(context.Context) GlobalaccountRoleCollectionRoleOutput
}

type GlobalaccountRoleCollectionRoleArgs struct {
	// The name of the referenced role.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the referenced template app id.
	RoleTemplateAppId pulumi.StringInput `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (GlobalaccountRoleCollectionRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalaccountRoleCollectionRole)(nil)).Elem()
}

func (i GlobalaccountRoleCollectionRoleArgs) ToGlobalaccountRoleCollectionRoleOutput() GlobalaccountRoleCollectionRoleOutput {
	return i.ToGlobalaccountRoleCollectionRoleOutputWithContext(context.Background())
}

func (i GlobalaccountRoleCollectionRoleArgs) ToGlobalaccountRoleCollectionRoleOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountRoleCollectionRoleOutput)
}

func (i GlobalaccountRoleCollectionRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GlobalaccountRoleCollectionRole] {
	return pulumix.Output[GlobalaccountRoleCollectionRole]{
		OutputState: i.ToGlobalaccountRoleCollectionRoleOutputWithContext(ctx).OutputState,
	}
}

// GlobalaccountRoleCollectionRoleArrayInput is an input type that accepts GlobalaccountRoleCollectionRoleArray and GlobalaccountRoleCollectionRoleArrayOutput values.
// You can construct a concrete instance of `GlobalaccountRoleCollectionRoleArrayInput` via:
//
//	GlobalaccountRoleCollectionRoleArray{ GlobalaccountRoleCollectionRoleArgs{...} }
type GlobalaccountRoleCollectionRoleArrayInput interface {
	pulumi.Input

	ToGlobalaccountRoleCollectionRoleArrayOutput() GlobalaccountRoleCollectionRoleArrayOutput
	ToGlobalaccountRoleCollectionRoleArrayOutputWithContext(context.Context) GlobalaccountRoleCollectionRoleArrayOutput
}

type GlobalaccountRoleCollectionRoleArray []GlobalaccountRoleCollectionRoleInput

func (GlobalaccountRoleCollectionRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalaccountRoleCollectionRole)(nil)).Elem()
}

func (i GlobalaccountRoleCollectionRoleArray) ToGlobalaccountRoleCollectionRoleArrayOutput() GlobalaccountRoleCollectionRoleArrayOutput {
	return i.ToGlobalaccountRoleCollectionRoleArrayOutputWithContext(context.Background())
}

func (i GlobalaccountRoleCollectionRoleArray) ToGlobalaccountRoleCollectionRoleArrayOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountRoleCollectionRoleArrayOutput)
}

func (i GlobalaccountRoleCollectionRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GlobalaccountRoleCollectionRole] {
	return pulumix.Output[[]GlobalaccountRoleCollectionRole]{
		OutputState: i.ToGlobalaccountRoleCollectionRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GlobalaccountRoleCollectionRoleOutput struct{ *pulumi.OutputState }

func (GlobalaccountRoleCollectionRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalaccountRoleCollectionRole)(nil)).Elem()
}

func (o GlobalaccountRoleCollectionRoleOutput) ToGlobalaccountRoleCollectionRoleOutput() GlobalaccountRoleCollectionRoleOutput {
	return o
}

func (o GlobalaccountRoleCollectionRoleOutput) ToGlobalaccountRoleCollectionRoleOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionRoleOutput {
	return o
}

func (o GlobalaccountRoleCollectionRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GlobalaccountRoleCollectionRole] {
	return pulumix.Output[GlobalaccountRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

// The name of the referenced role.
func (o GlobalaccountRoleCollectionRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalaccountRoleCollectionRole) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the referenced template app id.
func (o GlobalaccountRoleCollectionRoleOutput) RoleTemplateAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalaccountRoleCollectionRole) string { return v.RoleTemplateAppId }).(pulumi.StringOutput)
}

// The name of the referenced role template.
func (o GlobalaccountRoleCollectionRoleOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GlobalaccountRoleCollectionRole) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

type GlobalaccountRoleCollectionRoleArrayOutput struct{ *pulumi.OutputState }

func (GlobalaccountRoleCollectionRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalaccountRoleCollectionRole)(nil)).Elem()
}

func (o GlobalaccountRoleCollectionRoleArrayOutput) ToGlobalaccountRoleCollectionRoleArrayOutput() GlobalaccountRoleCollectionRoleArrayOutput {
	return o
}

func (o GlobalaccountRoleCollectionRoleArrayOutput) ToGlobalaccountRoleCollectionRoleArrayOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionRoleArrayOutput {
	return o
}

func (o GlobalaccountRoleCollectionRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GlobalaccountRoleCollectionRole] {
	return pulumix.Output[[]GlobalaccountRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

func (o GlobalaccountRoleCollectionRoleArrayOutput) Index(i pulumi.IntInput) GlobalaccountRoleCollectionRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalaccountRoleCollectionRole {
		return vs[0].([]GlobalaccountRoleCollectionRole)[vs[1].(int)]
	}).(GlobalaccountRoleCollectionRoleOutput)
}

type SubaccountEnvironmentInstanceTimeouts struct {
	// Timeout for creating the environment instance.
	Create *string `pulumi:"create"`
	// Timeout for deleting the environment instance.
	Delete *string `pulumi:"delete"`
	// Timeout for updating the environment instance.
	Update *string `pulumi:"update"`
}

// SubaccountEnvironmentInstanceTimeoutsInput is an input type that accepts SubaccountEnvironmentInstanceTimeoutsArgs and SubaccountEnvironmentInstanceTimeoutsOutput values.
// You can construct a concrete instance of `SubaccountEnvironmentInstanceTimeoutsInput` via:
//
//	SubaccountEnvironmentInstanceTimeoutsArgs{...}
type SubaccountEnvironmentInstanceTimeoutsInput interface {
	pulumi.Input

	ToSubaccountEnvironmentInstanceTimeoutsOutput() SubaccountEnvironmentInstanceTimeoutsOutput
	ToSubaccountEnvironmentInstanceTimeoutsOutputWithContext(context.Context) SubaccountEnvironmentInstanceTimeoutsOutput
}

type SubaccountEnvironmentInstanceTimeoutsArgs struct {
	// Timeout for creating the environment instance.
	Create pulumi.StringPtrInput `pulumi:"create"`
	// Timeout for deleting the environment instance.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// Timeout for updating the environment instance.
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (SubaccountEnvironmentInstanceTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubaccountEnvironmentInstanceTimeouts)(nil)).Elem()
}

func (i SubaccountEnvironmentInstanceTimeoutsArgs) ToSubaccountEnvironmentInstanceTimeoutsOutput() SubaccountEnvironmentInstanceTimeoutsOutput {
	return i.ToSubaccountEnvironmentInstanceTimeoutsOutputWithContext(context.Background())
}

func (i SubaccountEnvironmentInstanceTimeoutsArgs) ToSubaccountEnvironmentInstanceTimeoutsOutputWithContext(ctx context.Context) SubaccountEnvironmentInstanceTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountEnvironmentInstanceTimeoutsOutput)
}

func (i SubaccountEnvironmentInstanceTimeoutsArgs) ToOutput(ctx context.Context) pulumix.Output[SubaccountEnvironmentInstanceTimeouts] {
	return pulumix.Output[SubaccountEnvironmentInstanceTimeouts]{
		OutputState: i.ToSubaccountEnvironmentInstanceTimeoutsOutputWithContext(ctx).OutputState,
	}
}

func (i SubaccountEnvironmentInstanceTimeoutsArgs) ToSubaccountEnvironmentInstanceTimeoutsPtrOutput() SubaccountEnvironmentInstanceTimeoutsPtrOutput {
	return i.ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(context.Background())
}

func (i SubaccountEnvironmentInstanceTimeoutsArgs) ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(ctx context.Context) SubaccountEnvironmentInstanceTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountEnvironmentInstanceTimeoutsOutput).ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(ctx)
}

// SubaccountEnvironmentInstanceTimeoutsPtrInput is an input type that accepts SubaccountEnvironmentInstanceTimeoutsArgs, SubaccountEnvironmentInstanceTimeoutsPtr and SubaccountEnvironmentInstanceTimeoutsPtrOutput values.
// You can construct a concrete instance of `SubaccountEnvironmentInstanceTimeoutsPtrInput` via:
//
//	        SubaccountEnvironmentInstanceTimeoutsArgs{...}
//
//	or:
//
//	        nil
type SubaccountEnvironmentInstanceTimeoutsPtrInput interface {
	pulumi.Input

	ToSubaccountEnvironmentInstanceTimeoutsPtrOutput() SubaccountEnvironmentInstanceTimeoutsPtrOutput
	ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(context.Context) SubaccountEnvironmentInstanceTimeoutsPtrOutput
}

type subaccountEnvironmentInstanceTimeoutsPtrType SubaccountEnvironmentInstanceTimeoutsArgs

func SubaccountEnvironmentInstanceTimeoutsPtr(v *SubaccountEnvironmentInstanceTimeoutsArgs) SubaccountEnvironmentInstanceTimeoutsPtrInput {
	return (*subaccountEnvironmentInstanceTimeoutsPtrType)(v)
}

func (*subaccountEnvironmentInstanceTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountEnvironmentInstanceTimeouts)(nil)).Elem()
}

func (i *subaccountEnvironmentInstanceTimeoutsPtrType) ToSubaccountEnvironmentInstanceTimeoutsPtrOutput() SubaccountEnvironmentInstanceTimeoutsPtrOutput {
	return i.ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(context.Background())
}

func (i *subaccountEnvironmentInstanceTimeoutsPtrType) ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(ctx context.Context) SubaccountEnvironmentInstanceTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountEnvironmentInstanceTimeoutsPtrOutput)
}

func (i *subaccountEnvironmentInstanceTimeoutsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SubaccountEnvironmentInstanceTimeouts] {
	return pulumix.Output[*SubaccountEnvironmentInstanceTimeouts]{
		OutputState: i.ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(ctx).OutputState,
	}
}

type SubaccountEnvironmentInstanceTimeoutsOutput struct{ *pulumi.OutputState }

func (SubaccountEnvironmentInstanceTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubaccountEnvironmentInstanceTimeouts)(nil)).Elem()
}

func (o SubaccountEnvironmentInstanceTimeoutsOutput) ToSubaccountEnvironmentInstanceTimeoutsOutput() SubaccountEnvironmentInstanceTimeoutsOutput {
	return o
}

func (o SubaccountEnvironmentInstanceTimeoutsOutput) ToSubaccountEnvironmentInstanceTimeoutsOutputWithContext(ctx context.Context) SubaccountEnvironmentInstanceTimeoutsOutput {
	return o
}

func (o SubaccountEnvironmentInstanceTimeoutsOutput) ToSubaccountEnvironmentInstanceTimeoutsPtrOutput() SubaccountEnvironmentInstanceTimeoutsPtrOutput {
	return o.ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(context.Background())
}

func (o SubaccountEnvironmentInstanceTimeoutsOutput) ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(ctx context.Context) SubaccountEnvironmentInstanceTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubaccountEnvironmentInstanceTimeouts) *SubaccountEnvironmentInstanceTimeouts {
		return &v
	}).(SubaccountEnvironmentInstanceTimeoutsPtrOutput)
}

func (o SubaccountEnvironmentInstanceTimeoutsOutput) ToOutput(ctx context.Context) pulumix.Output[SubaccountEnvironmentInstanceTimeouts] {
	return pulumix.Output[SubaccountEnvironmentInstanceTimeouts]{
		OutputState: o.OutputState,
	}
}

// Timeout for creating the environment instance.
func (o SubaccountEnvironmentInstanceTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubaccountEnvironmentInstanceTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// Timeout for deleting the environment instance.
func (o SubaccountEnvironmentInstanceTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubaccountEnvironmentInstanceTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// Timeout for updating the environment instance.
func (o SubaccountEnvironmentInstanceTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubaccountEnvironmentInstanceTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type SubaccountEnvironmentInstanceTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (SubaccountEnvironmentInstanceTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountEnvironmentInstanceTimeouts)(nil)).Elem()
}

func (o SubaccountEnvironmentInstanceTimeoutsPtrOutput) ToSubaccountEnvironmentInstanceTimeoutsPtrOutput() SubaccountEnvironmentInstanceTimeoutsPtrOutput {
	return o
}

func (o SubaccountEnvironmentInstanceTimeoutsPtrOutput) ToSubaccountEnvironmentInstanceTimeoutsPtrOutputWithContext(ctx context.Context) SubaccountEnvironmentInstanceTimeoutsPtrOutput {
	return o
}

func (o SubaccountEnvironmentInstanceTimeoutsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SubaccountEnvironmentInstanceTimeouts] {
	return pulumix.Output[*SubaccountEnvironmentInstanceTimeouts]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountEnvironmentInstanceTimeoutsPtrOutput) Elem() SubaccountEnvironmentInstanceTimeoutsOutput {
	return o.ApplyT(func(v *SubaccountEnvironmentInstanceTimeouts) SubaccountEnvironmentInstanceTimeouts {
		if v != nil {
			return *v
		}
		var ret SubaccountEnvironmentInstanceTimeouts
		return ret
	}).(SubaccountEnvironmentInstanceTimeoutsOutput)
}

// Timeout for creating the environment instance.
func (o SubaccountEnvironmentInstanceTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubaccountEnvironmentInstanceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// Timeout for deleting the environment instance.
func (o SubaccountEnvironmentInstanceTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubaccountEnvironmentInstanceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// Timeout for updating the environment instance.
func (o SubaccountEnvironmentInstanceTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubaccountEnvironmentInstanceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type SubaccountRoleCollectionRole struct {
	// The name of the referenced role.
	Name string `pulumi:"name"`
	// The name of the referenced template app id.
	RoleTemplateAppId string `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
}

// SubaccountRoleCollectionRoleInput is an input type that accepts SubaccountRoleCollectionRoleArgs and SubaccountRoleCollectionRoleOutput values.
// You can construct a concrete instance of `SubaccountRoleCollectionRoleInput` via:
//
//	SubaccountRoleCollectionRoleArgs{...}
type SubaccountRoleCollectionRoleInput interface {
	pulumi.Input

	ToSubaccountRoleCollectionRoleOutput() SubaccountRoleCollectionRoleOutput
	ToSubaccountRoleCollectionRoleOutputWithContext(context.Context) SubaccountRoleCollectionRoleOutput
}

type SubaccountRoleCollectionRoleArgs struct {
	// The name of the referenced role.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the referenced template app id.
	RoleTemplateAppId pulumi.StringInput `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (SubaccountRoleCollectionRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubaccountRoleCollectionRole)(nil)).Elem()
}

func (i SubaccountRoleCollectionRoleArgs) ToSubaccountRoleCollectionRoleOutput() SubaccountRoleCollectionRoleOutput {
	return i.ToSubaccountRoleCollectionRoleOutputWithContext(context.Background())
}

func (i SubaccountRoleCollectionRoleArgs) ToSubaccountRoleCollectionRoleOutputWithContext(ctx context.Context) SubaccountRoleCollectionRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountRoleCollectionRoleOutput)
}

func (i SubaccountRoleCollectionRoleArgs) ToOutput(ctx context.Context) pulumix.Output[SubaccountRoleCollectionRole] {
	return pulumix.Output[SubaccountRoleCollectionRole]{
		OutputState: i.ToSubaccountRoleCollectionRoleOutputWithContext(ctx).OutputState,
	}
}

// SubaccountRoleCollectionRoleArrayInput is an input type that accepts SubaccountRoleCollectionRoleArray and SubaccountRoleCollectionRoleArrayOutput values.
// You can construct a concrete instance of `SubaccountRoleCollectionRoleArrayInput` via:
//
//	SubaccountRoleCollectionRoleArray{ SubaccountRoleCollectionRoleArgs{...} }
type SubaccountRoleCollectionRoleArrayInput interface {
	pulumi.Input

	ToSubaccountRoleCollectionRoleArrayOutput() SubaccountRoleCollectionRoleArrayOutput
	ToSubaccountRoleCollectionRoleArrayOutputWithContext(context.Context) SubaccountRoleCollectionRoleArrayOutput
}

type SubaccountRoleCollectionRoleArray []SubaccountRoleCollectionRoleInput

func (SubaccountRoleCollectionRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubaccountRoleCollectionRole)(nil)).Elem()
}

func (i SubaccountRoleCollectionRoleArray) ToSubaccountRoleCollectionRoleArrayOutput() SubaccountRoleCollectionRoleArrayOutput {
	return i.ToSubaccountRoleCollectionRoleArrayOutputWithContext(context.Background())
}

func (i SubaccountRoleCollectionRoleArray) ToSubaccountRoleCollectionRoleArrayOutputWithContext(ctx context.Context) SubaccountRoleCollectionRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountRoleCollectionRoleArrayOutput)
}

func (i SubaccountRoleCollectionRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]SubaccountRoleCollectionRole] {
	return pulumix.Output[[]SubaccountRoleCollectionRole]{
		OutputState: i.ToSubaccountRoleCollectionRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type SubaccountRoleCollectionRoleOutput struct{ *pulumi.OutputState }

func (SubaccountRoleCollectionRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubaccountRoleCollectionRole)(nil)).Elem()
}

func (o SubaccountRoleCollectionRoleOutput) ToSubaccountRoleCollectionRoleOutput() SubaccountRoleCollectionRoleOutput {
	return o
}

func (o SubaccountRoleCollectionRoleOutput) ToSubaccountRoleCollectionRoleOutputWithContext(ctx context.Context) SubaccountRoleCollectionRoleOutput {
	return o
}

func (o SubaccountRoleCollectionRoleOutput) ToOutput(ctx context.Context) pulumix.Output[SubaccountRoleCollectionRole] {
	return pulumix.Output[SubaccountRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

// The name of the referenced role.
func (o SubaccountRoleCollectionRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SubaccountRoleCollectionRole) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the referenced template app id.
func (o SubaccountRoleCollectionRoleOutput) RoleTemplateAppId() pulumi.StringOutput {
	return o.ApplyT(func(v SubaccountRoleCollectionRole) string { return v.RoleTemplateAppId }).(pulumi.StringOutput)
}

// The name of the referenced role template.
func (o SubaccountRoleCollectionRoleOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v SubaccountRoleCollectionRole) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

type SubaccountRoleCollectionRoleArrayOutput struct{ *pulumi.OutputState }

func (SubaccountRoleCollectionRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubaccountRoleCollectionRole)(nil)).Elem()
}

func (o SubaccountRoleCollectionRoleArrayOutput) ToSubaccountRoleCollectionRoleArrayOutput() SubaccountRoleCollectionRoleArrayOutput {
	return o
}

func (o SubaccountRoleCollectionRoleArrayOutput) ToSubaccountRoleCollectionRoleArrayOutputWithContext(ctx context.Context) SubaccountRoleCollectionRoleArrayOutput {
	return o
}

func (o SubaccountRoleCollectionRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]SubaccountRoleCollectionRole] {
	return pulumix.Output[[]SubaccountRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountRoleCollectionRoleArrayOutput) Index(i pulumi.IntInput) SubaccountRoleCollectionRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubaccountRoleCollectionRole {
		return vs[0].([]SubaccountRoleCollectionRole)[vs[1].(int)]
	}).(SubaccountRoleCollectionRoleOutput)
}

type SubaccountServiceInstanceTimeouts struct {
	// Timeout for creating the service instance.
	Create *string `pulumi:"create"`
	// Timeout for deleting the service instance.
	Delete *string `pulumi:"delete"`
	// Timeout for updating the service instance.
	Update *string `pulumi:"update"`
}

// SubaccountServiceInstanceTimeoutsInput is an input type that accepts SubaccountServiceInstanceTimeoutsArgs and SubaccountServiceInstanceTimeoutsOutput values.
// You can construct a concrete instance of `SubaccountServiceInstanceTimeoutsInput` via:
//
//	SubaccountServiceInstanceTimeoutsArgs{...}
type SubaccountServiceInstanceTimeoutsInput interface {
	pulumi.Input

	ToSubaccountServiceInstanceTimeoutsOutput() SubaccountServiceInstanceTimeoutsOutput
	ToSubaccountServiceInstanceTimeoutsOutputWithContext(context.Context) SubaccountServiceInstanceTimeoutsOutput
}

type SubaccountServiceInstanceTimeoutsArgs struct {
	// Timeout for creating the service instance.
	Create pulumi.StringPtrInput `pulumi:"create"`
	// Timeout for deleting the service instance.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// Timeout for updating the service instance.
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (SubaccountServiceInstanceTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubaccountServiceInstanceTimeouts)(nil)).Elem()
}

func (i SubaccountServiceInstanceTimeoutsArgs) ToSubaccountServiceInstanceTimeoutsOutput() SubaccountServiceInstanceTimeoutsOutput {
	return i.ToSubaccountServiceInstanceTimeoutsOutputWithContext(context.Background())
}

func (i SubaccountServiceInstanceTimeoutsArgs) ToSubaccountServiceInstanceTimeoutsOutputWithContext(ctx context.Context) SubaccountServiceInstanceTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountServiceInstanceTimeoutsOutput)
}

func (i SubaccountServiceInstanceTimeoutsArgs) ToOutput(ctx context.Context) pulumix.Output[SubaccountServiceInstanceTimeouts] {
	return pulumix.Output[SubaccountServiceInstanceTimeouts]{
		OutputState: i.ToSubaccountServiceInstanceTimeoutsOutputWithContext(ctx).OutputState,
	}
}

func (i SubaccountServiceInstanceTimeoutsArgs) ToSubaccountServiceInstanceTimeoutsPtrOutput() SubaccountServiceInstanceTimeoutsPtrOutput {
	return i.ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(context.Background())
}

func (i SubaccountServiceInstanceTimeoutsArgs) ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(ctx context.Context) SubaccountServiceInstanceTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountServiceInstanceTimeoutsOutput).ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(ctx)
}

// SubaccountServiceInstanceTimeoutsPtrInput is an input type that accepts SubaccountServiceInstanceTimeoutsArgs, SubaccountServiceInstanceTimeoutsPtr and SubaccountServiceInstanceTimeoutsPtrOutput values.
// You can construct a concrete instance of `SubaccountServiceInstanceTimeoutsPtrInput` via:
//
//	        SubaccountServiceInstanceTimeoutsArgs{...}
//
//	or:
//
//	        nil
type SubaccountServiceInstanceTimeoutsPtrInput interface {
	pulumi.Input

	ToSubaccountServiceInstanceTimeoutsPtrOutput() SubaccountServiceInstanceTimeoutsPtrOutput
	ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(context.Context) SubaccountServiceInstanceTimeoutsPtrOutput
}

type subaccountServiceInstanceTimeoutsPtrType SubaccountServiceInstanceTimeoutsArgs

func SubaccountServiceInstanceTimeoutsPtr(v *SubaccountServiceInstanceTimeoutsArgs) SubaccountServiceInstanceTimeoutsPtrInput {
	return (*subaccountServiceInstanceTimeoutsPtrType)(v)
}

func (*subaccountServiceInstanceTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountServiceInstanceTimeouts)(nil)).Elem()
}

func (i *subaccountServiceInstanceTimeoutsPtrType) ToSubaccountServiceInstanceTimeoutsPtrOutput() SubaccountServiceInstanceTimeoutsPtrOutput {
	return i.ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(context.Background())
}

func (i *subaccountServiceInstanceTimeoutsPtrType) ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(ctx context.Context) SubaccountServiceInstanceTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountServiceInstanceTimeoutsPtrOutput)
}

func (i *subaccountServiceInstanceTimeoutsPtrType) ToOutput(ctx context.Context) pulumix.Output[*SubaccountServiceInstanceTimeouts] {
	return pulumix.Output[*SubaccountServiceInstanceTimeouts]{
		OutputState: i.ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(ctx).OutputState,
	}
}

type SubaccountServiceInstanceTimeoutsOutput struct{ *pulumi.OutputState }

func (SubaccountServiceInstanceTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubaccountServiceInstanceTimeouts)(nil)).Elem()
}

func (o SubaccountServiceInstanceTimeoutsOutput) ToSubaccountServiceInstanceTimeoutsOutput() SubaccountServiceInstanceTimeoutsOutput {
	return o
}

func (o SubaccountServiceInstanceTimeoutsOutput) ToSubaccountServiceInstanceTimeoutsOutputWithContext(ctx context.Context) SubaccountServiceInstanceTimeoutsOutput {
	return o
}

func (o SubaccountServiceInstanceTimeoutsOutput) ToSubaccountServiceInstanceTimeoutsPtrOutput() SubaccountServiceInstanceTimeoutsPtrOutput {
	return o.ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(context.Background())
}

func (o SubaccountServiceInstanceTimeoutsOutput) ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(ctx context.Context) SubaccountServiceInstanceTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubaccountServiceInstanceTimeouts) *SubaccountServiceInstanceTimeouts {
		return &v
	}).(SubaccountServiceInstanceTimeoutsPtrOutput)
}

func (o SubaccountServiceInstanceTimeoutsOutput) ToOutput(ctx context.Context) pulumix.Output[SubaccountServiceInstanceTimeouts] {
	return pulumix.Output[SubaccountServiceInstanceTimeouts]{
		OutputState: o.OutputState,
	}
}

// Timeout for creating the service instance.
func (o SubaccountServiceInstanceTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubaccountServiceInstanceTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// Timeout for deleting the service instance.
func (o SubaccountServiceInstanceTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubaccountServiceInstanceTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// Timeout for updating the service instance.
func (o SubaccountServiceInstanceTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubaccountServiceInstanceTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type SubaccountServiceInstanceTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (SubaccountServiceInstanceTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountServiceInstanceTimeouts)(nil)).Elem()
}

func (o SubaccountServiceInstanceTimeoutsPtrOutput) ToSubaccountServiceInstanceTimeoutsPtrOutput() SubaccountServiceInstanceTimeoutsPtrOutput {
	return o
}

func (o SubaccountServiceInstanceTimeoutsPtrOutput) ToSubaccountServiceInstanceTimeoutsPtrOutputWithContext(ctx context.Context) SubaccountServiceInstanceTimeoutsPtrOutput {
	return o
}

func (o SubaccountServiceInstanceTimeoutsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*SubaccountServiceInstanceTimeouts] {
	return pulumix.Output[*SubaccountServiceInstanceTimeouts]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountServiceInstanceTimeoutsPtrOutput) Elem() SubaccountServiceInstanceTimeoutsOutput {
	return o.ApplyT(func(v *SubaccountServiceInstanceTimeouts) SubaccountServiceInstanceTimeouts {
		if v != nil {
			return *v
		}
		var ret SubaccountServiceInstanceTimeouts
		return ret
	}).(SubaccountServiceInstanceTimeoutsOutput)
}

// Timeout for creating the service instance.
func (o SubaccountServiceInstanceTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubaccountServiceInstanceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// Timeout for deleting the service instance.
func (o SubaccountServiceInstanceTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubaccountServiceInstanceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// Timeout for updating the service instance.
func (o SubaccountServiceInstanceTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubaccountServiceInstanceTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type GetDirectoriesValue struct {
	// The details of the user that created the directory.
	CreatedBy string `pulumi:"createdBy"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// The description of the directory.
	Description string `pulumi:"description"`
	// The features that are enabled for the directory. Possible values are:
	Features []string `pulumi:"features"`
	// The ID of the directory.
	Id           string              `pulumi:"id"`
	Labels       map[string][]string `pulumi:"labels"`
	LastModified string              `pulumi:"lastModified"`
	Name         string              `pulumi:"name"`
	ParentId     string              `pulumi:"parentId"`
	State        string              `pulumi:"state"`
	Subdomain    string              `pulumi:"subdomain"`
}

// GetDirectoriesValueInput is an input type that accepts GetDirectoriesValueArgs and GetDirectoriesValueOutput values.
// You can construct a concrete instance of `GetDirectoriesValueInput` via:
//
//	GetDirectoriesValueArgs{...}
type GetDirectoriesValueInput interface {
	pulumi.Input

	ToGetDirectoriesValueOutput() GetDirectoriesValueOutput
	ToGetDirectoriesValueOutputWithContext(context.Context) GetDirectoriesValueOutput
}

type GetDirectoriesValueArgs struct {
	// The details of the user that created the directory.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The description of the directory.
	Description pulumi.StringInput `pulumi:"description"`
	// The features that are enabled for the directory. Possible values are:
	Features pulumi.StringArrayInput `pulumi:"features"`
	// The ID of the directory.
	Id           pulumi.StringInput         `pulumi:"id"`
	Labels       pulumi.StringArrayMapInput `pulumi:"labels"`
	LastModified pulumi.StringInput         `pulumi:"lastModified"`
	Name         pulumi.StringInput         `pulumi:"name"`
	ParentId     pulumi.StringInput         `pulumi:"parentId"`
	State        pulumi.StringInput         `pulumi:"state"`
	Subdomain    pulumi.StringInput         `pulumi:"subdomain"`
}

func (GetDirectoriesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoriesValue)(nil)).Elem()
}

func (i GetDirectoriesValueArgs) ToGetDirectoriesValueOutput() GetDirectoriesValueOutput {
	return i.ToGetDirectoriesValueOutputWithContext(context.Background())
}

func (i GetDirectoriesValueArgs) ToGetDirectoriesValueOutputWithContext(ctx context.Context) GetDirectoriesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoriesValueOutput)
}

func (i GetDirectoriesValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetDirectoriesValue] {
	return pulumix.Output[GetDirectoriesValue]{
		OutputState: i.ToGetDirectoriesValueOutputWithContext(ctx).OutputState,
	}
}

// GetDirectoriesValueArrayInput is an input type that accepts GetDirectoriesValueArray and GetDirectoriesValueArrayOutput values.
// You can construct a concrete instance of `GetDirectoriesValueArrayInput` via:
//
//	GetDirectoriesValueArray{ GetDirectoriesValueArgs{...} }
type GetDirectoriesValueArrayInput interface {
	pulumi.Input

	ToGetDirectoriesValueArrayOutput() GetDirectoriesValueArrayOutput
	ToGetDirectoriesValueArrayOutputWithContext(context.Context) GetDirectoriesValueArrayOutput
}

type GetDirectoriesValueArray []GetDirectoriesValueInput

func (GetDirectoriesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoriesValue)(nil)).Elem()
}

func (i GetDirectoriesValueArray) ToGetDirectoriesValueArrayOutput() GetDirectoriesValueArrayOutput {
	return i.ToGetDirectoriesValueArrayOutputWithContext(context.Background())
}

func (i GetDirectoriesValueArray) ToGetDirectoriesValueArrayOutputWithContext(ctx context.Context) GetDirectoriesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoriesValueArrayOutput)
}

func (i GetDirectoriesValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoriesValue] {
	return pulumix.Output[[]GetDirectoriesValue]{
		OutputState: i.ToGetDirectoriesValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDirectoriesValueOutput struct{ *pulumi.OutputState }

func (GetDirectoriesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoriesValue)(nil)).Elem()
}

func (o GetDirectoriesValueOutput) ToGetDirectoriesValueOutput() GetDirectoriesValueOutput {
	return o
}

func (o GetDirectoriesValueOutput) ToGetDirectoriesValueOutputWithContext(ctx context.Context) GetDirectoriesValueOutput {
	return o
}

func (o GetDirectoriesValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoriesValue] {
	return pulumix.Output[GetDirectoriesValue]{
		OutputState: o.OutputState,
	}
}

// The details of the user that created the directory.
func (o GetDirectoriesValueOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesValue) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetDirectoriesValueOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesValue) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The description of the directory.
func (o GetDirectoriesValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesValue) string { return v.Description }).(pulumi.StringOutput)
}

// The features that are enabled for the directory. Possible values are:
func (o GetDirectoriesValueOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoriesValue) []string { return v.Features }).(pulumi.StringArrayOutput)
}

// The ID of the directory.
func (o GetDirectoriesValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesValue) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDirectoriesValueOutput) Labels() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetDirectoriesValue) map[string][]string { return v.Labels }).(pulumi.StringArrayMapOutput)
}

func (o GetDirectoriesValueOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesValue) string { return v.LastModified }).(pulumi.StringOutput)
}

func (o GetDirectoriesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesValue) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDirectoriesValueOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesValue) string { return v.ParentId }).(pulumi.StringOutput)
}

func (o GetDirectoriesValueOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesValue) string { return v.State }).(pulumi.StringOutput)
}

func (o GetDirectoriesValueOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoriesValue) string { return v.Subdomain }).(pulumi.StringOutput)
}

type GetDirectoriesValueArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoriesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoriesValue)(nil)).Elem()
}

func (o GetDirectoriesValueArrayOutput) ToGetDirectoriesValueArrayOutput() GetDirectoriesValueArrayOutput {
	return o
}

func (o GetDirectoriesValueArrayOutput) ToGetDirectoriesValueArrayOutputWithContext(ctx context.Context) GetDirectoriesValueArrayOutput {
	return o
}

func (o GetDirectoriesValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoriesValue] {
	return pulumix.Output[[]GetDirectoriesValue]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoriesValueArrayOutput) Index(i pulumi.IntInput) GetDirectoriesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoriesValue {
		return vs[0].([]GetDirectoriesValue)[vs[1].(int)]
	}).(GetDirectoriesValueOutput)
}

type GetDirectoryEntitlementsValues struct {
	// The current state of the entitlement. Possible values are:
	Category           string  `pulumi:"category"`
	PlanDescription    string  `pulumi:"planDescription"`
	PlanDisplayName    string  `pulumi:"planDisplayName"`
	PlanName           string  `pulumi:"planName"`
	QuotaAssigned      float64 `pulumi:"quotaAssigned"`
	QuotaRemaining     float64 `pulumi:"quotaRemaining"`
	ServiceDisplayName string  `pulumi:"serviceDisplayName"`
	ServiceName        string  `pulumi:"serviceName"`
}

// GetDirectoryEntitlementsValuesInput is an input type that accepts GetDirectoryEntitlementsValuesArgs and GetDirectoryEntitlementsValuesOutput values.
// You can construct a concrete instance of `GetDirectoryEntitlementsValuesInput` via:
//
//	GetDirectoryEntitlementsValuesArgs{...}
type GetDirectoryEntitlementsValuesInput interface {
	pulumi.Input

	ToGetDirectoryEntitlementsValuesOutput() GetDirectoryEntitlementsValuesOutput
	ToGetDirectoryEntitlementsValuesOutputWithContext(context.Context) GetDirectoryEntitlementsValuesOutput
}

type GetDirectoryEntitlementsValuesArgs struct {
	// The current state of the entitlement. Possible values are:
	Category           pulumi.StringInput  `pulumi:"category"`
	PlanDescription    pulumi.StringInput  `pulumi:"planDescription"`
	PlanDisplayName    pulumi.StringInput  `pulumi:"planDisplayName"`
	PlanName           pulumi.StringInput  `pulumi:"planName"`
	QuotaAssigned      pulumi.Float64Input `pulumi:"quotaAssigned"`
	QuotaRemaining     pulumi.Float64Input `pulumi:"quotaRemaining"`
	ServiceDisplayName pulumi.StringInput  `pulumi:"serviceDisplayName"`
	ServiceName        pulumi.StringInput  `pulumi:"serviceName"`
}

func (GetDirectoryEntitlementsValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryEntitlementsValues)(nil)).Elem()
}

func (i GetDirectoryEntitlementsValuesArgs) ToGetDirectoryEntitlementsValuesOutput() GetDirectoryEntitlementsValuesOutput {
	return i.ToGetDirectoryEntitlementsValuesOutputWithContext(context.Background())
}

func (i GetDirectoryEntitlementsValuesArgs) ToGetDirectoryEntitlementsValuesOutputWithContext(ctx context.Context) GetDirectoryEntitlementsValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryEntitlementsValuesOutput)
}

func (i GetDirectoryEntitlementsValuesArgs) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryEntitlementsValues] {
	return pulumix.Output[GetDirectoryEntitlementsValues]{
		OutputState: i.ToGetDirectoryEntitlementsValuesOutputWithContext(ctx).OutputState,
	}
}

// GetDirectoryEntitlementsValuesMapInput is an input type that accepts GetDirectoryEntitlementsValuesMap and GetDirectoryEntitlementsValuesMapOutput values.
// You can construct a concrete instance of `GetDirectoryEntitlementsValuesMapInput` via:
//
//	GetDirectoryEntitlementsValuesMap{ "key": GetDirectoryEntitlementsValuesArgs{...} }
type GetDirectoryEntitlementsValuesMapInput interface {
	pulumi.Input

	ToGetDirectoryEntitlementsValuesMapOutput() GetDirectoryEntitlementsValuesMapOutput
	ToGetDirectoryEntitlementsValuesMapOutputWithContext(context.Context) GetDirectoryEntitlementsValuesMapOutput
}

type GetDirectoryEntitlementsValuesMap map[string]GetDirectoryEntitlementsValuesInput

func (GetDirectoryEntitlementsValuesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetDirectoryEntitlementsValues)(nil)).Elem()
}

func (i GetDirectoryEntitlementsValuesMap) ToGetDirectoryEntitlementsValuesMapOutput() GetDirectoryEntitlementsValuesMapOutput {
	return i.ToGetDirectoryEntitlementsValuesMapOutputWithContext(context.Background())
}

func (i GetDirectoryEntitlementsValuesMap) ToGetDirectoryEntitlementsValuesMapOutputWithContext(ctx context.Context) GetDirectoryEntitlementsValuesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryEntitlementsValuesMapOutput)
}

func (i GetDirectoryEntitlementsValuesMap) ToOutput(ctx context.Context) pulumix.Output[map[string]GetDirectoryEntitlementsValues] {
	return pulumix.Output[map[string]GetDirectoryEntitlementsValues]{
		OutputState: i.ToGetDirectoryEntitlementsValuesMapOutputWithContext(ctx).OutputState,
	}
}

type GetDirectoryEntitlementsValuesOutput struct{ *pulumi.OutputState }

func (GetDirectoryEntitlementsValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryEntitlementsValues)(nil)).Elem()
}

func (o GetDirectoryEntitlementsValuesOutput) ToGetDirectoryEntitlementsValuesOutput() GetDirectoryEntitlementsValuesOutput {
	return o
}

func (o GetDirectoryEntitlementsValuesOutput) ToGetDirectoryEntitlementsValuesOutputWithContext(ctx context.Context) GetDirectoryEntitlementsValuesOutput {
	return o
}

func (o GetDirectoryEntitlementsValuesOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryEntitlementsValues] {
	return pulumix.Output[GetDirectoryEntitlementsValues]{
		OutputState: o.OutputState,
	}
}

// The current state of the entitlement. Possible values are:
func (o GetDirectoryEntitlementsValuesOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryEntitlementsValues) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetDirectoryEntitlementsValuesOutput) PlanDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryEntitlementsValues) string { return v.PlanDescription }).(pulumi.StringOutput)
}

func (o GetDirectoryEntitlementsValuesOutput) PlanDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryEntitlementsValues) string { return v.PlanDisplayName }).(pulumi.StringOutput)
}

func (o GetDirectoryEntitlementsValuesOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryEntitlementsValues) string { return v.PlanName }).(pulumi.StringOutput)
}

func (o GetDirectoryEntitlementsValuesOutput) QuotaAssigned() pulumi.Float64Output {
	return o.ApplyT(func(v GetDirectoryEntitlementsValues) float64 { return v.QuotaAssigned }).(pulumi.Float64Output)
}

func (o GetDirectoryEntitlementsValuesOutput) QuotaRemaining() pulumi.Float64Output {
	return o.ApplyT(func(v GetDirectoryEntitlementsValues) float64 { return v.QuotaRemaining }).(pulumi.Float64Output)
}

func (o GetDirectoryEntitlementsValuesOutput) ServiceDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryEntitlementsValues) string { return v.ServiceDisplayName }).(pulumi.StringOutput)
}

func (o GetDirectoryEntitlementsValuesOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryEntitlementsValues) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetDirectoryEntitlementsValuesMapOutput struct{ *pulumi.OutputState }

func (GetDirectoryEntitlementsValuesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetDirectoryEntitlementsValues)(nil)).Elem()
}

func (o GetDirectoryEntitlementsValuesMapOutput) ToGetDirectoryEntitlementsValuesMapOutput() GetDirectoryEntitlementsValuesMapOutput {
	return o
}

func (o GetDirectoryEntitlementsValuesMapOutput) ToGetDirectoryEntitlementsValuesMapOutputWithContext(ctx context.Context) GetDirectoryEntitlementsValuesMapOutput {
	return o
}

func (o GetDirectoryEntitlementsValuesMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]GetDirectoryEntitlementsValues] {
	return pulumix.Output[map[string]GetDirectoryEntitlementsValues]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryEntitlementsValuesMapOutput) MapIndex(k pulumi.StringInput) GetDirectoryEntitlementsValuesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetDirectoryEntitlementsValues {
		return vs[0].(map[string]GetDirectoryEntitlementsValues)[vs[1].(string)]
	}).(GetDirectoryEntitlementsValuesOutput)
}

type GetDirectoryRoleCollectionRole struct {
	// The description of the referenced role
	Description string `pulumi:"description"`
	// The name of the referenced role.
	Name string `pulumi:"name"`
	// The name of the referenced template app id
	RoleTemplateAppId string `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
}

// GetDirectoryRoleCollectionRoleInput is an input type that accepts GetDirectoryRoleCollectionRoleArgs and GetDirectoryRoleCollectionRoleOutput values.
// You can construct a concrete instance of `GetDirectoryRoleCollectionRoleInput` via:
//
//	GetDirectoryRoleCollectionRoleArgs{...}
type GetDirectoryRoleCollectionRoleInput interface {
	pulumi.Input

	ToGetDirectoryRoleCollectionRoleOutput() GetDirectoryRoleCollectionRoleOutput
	ToGetDirectoryRoleCollectionRoleOutputWithContext(context.Context) GetDirectoryRoleCollectionRoleOutput
}

type GetDirectoryRoleCollectionRoleArgs struct {
	// The description of the referenced role
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the referenced role.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the referenced template app id
	RoleTemplateAppId pulumi.StringInput `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (GetDirectoryRoleCollectionRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleCollectionRole)(nil)).Elem()
}

func (i GetDirectoryRoleCollectionRoleArgs) ToGetDirectoryRoleCollectionRoleOutput() GetDirectoryRoleCollectionRoleOutput {
	return i.ToGetDirectoryRoleCollectionRoleOutputWithContext(context.Background())
}

func (i GetDirectoryRoleCollectionRoleArgs) ToGetDirectoryRoleCollectionRoleOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRoleCollectionRoleOutput)
}

func (i GetDirectoryRoleCollectionRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRoleCollectionRole] {
	return pulumix.Output[GetDirectoryRoleCollectionRole]{
		OutputState: i.ToGetDirectoryRoleCollectionRoleOutputWithContext(ctx).OutputState,
	}
}

// GetDirectoryRoleCollectionRoleArrayInput is an input type that accepts GetDirectoryRoleCollectionRoleArray and GetDirectoryRoleCollectionRoleArrayOutput values.
// You can construct a concrete instance of `GetDirectoryRoleCollectionRoleArrayInput` via:
//
//	GetDirectoryRoleCollectionRoleArray{ GetDirectoryRoleCollectionRoleArgs{...} }
type GetDirectoryRoleCollectionRoleArrayInput interface {
	pulumi.Input

	ToGetDirectoryRoleCollectionRoleArrayOutput() GetDirectoryRoleCollectionRoleArrayOutput
	ToGetDirectoryRoleCollectionRoleArrayOutputWithContext(context.Context) GetDirectoryRoleCollectionRoleArrayOutput
}

type GetDirectoryRoleCollectionRoleArray []GetDirectoryRoleCollectionRoleInput

func (GetDirectoryRoleCollectionRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRoleCollectionRole)(nil)).Elem()
}

func (i GetDirectoryRoleCollectionRoleArray) ToGetDirectoryRoleCollectionRoleArrayOutput() GetDirectoryRoleCollectionRoleArrayOutput {
	return i.ToGetDirectoryRoleCollectionRoleArrayOutputWithContext(context.Background())
}

func (i GetDirectoryRoleCollectionRoleArray) ToGetDirectoryRoleCollectionRoleArrayOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRoleCollectionRoleArrayOutput)
}

func (i GetDirectoryRoleCollectionRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRoleCollectionRole] {
	return pulumix.Output[[]GetDirectoryRoleCollectionRole]{
		OutputState: i.ToGetDirectoryRoleCollectionRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDirectoryRoleCollectionRoleOutput struct{ *pulumi.OutputState }

func (GetDirectoryRoleCollectionRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleCollectionRole)(nil)).Elem()
}

func (o GetDirectoryRoleCollectionRoleOutput) ToGetDirectoryRoleCollectionRoleOutput() GetDirectoryRoleCollectionRoleOutput {
	return o
}

func (o GetDirectoryRoleCollectionRoleOutput) ToGetDirectoryRoleCollectionRoleOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionRoleOutput {
	return o
}

func (o GetDirectoryRoleCollectionRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRoleCollectionRole] {
	return pulumix.Output[GetDirectoryRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

// The description of the referenced role
func (o GetDirectoryRoleCollectionRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionRole) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the referenced role.
func (o GetDirectoryRoleCollectionRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionRole) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the referenced template app id
func (o GetDirectoryRoleCollectionRoleOutput) RoleTemplateAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionRole) string { return v.RoleTemplateAppId }).(pulumi.StringOutput)
}

// The name of the referenced role template.
func (o GetDirectoryRoleCollectionRoleOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionRole) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

type GetDirectoryRoleCollectionRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryRoleCollectionRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRoleCollectionRole)(nil)).Elem()
}

func (o GetDirectoryRoleCollectionRoleArrayOutput) ToGetDirectoryRoleCollectionRoleArrayOutput() GetDirectoryRoleCollectionRoleArrayOutput {
	return o
}

func (o GetDirectoryRoleCollectionRoleArrayOutput) ToGetDirectoryRoleCollectionRoleArrayOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionRoleArrayOutput {
	return o
}

func (o GetDirectoryRoleCollectionRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRoleCollectionRole] {
	return pulumix.Output[[]GetDirectoryRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryRoleCollectionRoleArrayOutput) Index(i pulumi.IntInput) GetDirectoryRoleCollectionRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryRoleCollectionRole {
		return vs[0].([]GetDirectoryRoleCollectionRole)[vs[1].(int)]
	}).(GetDirectoryRoleCollectionRoleOutput)
}

type GetDirectoryRoleCollectionsValue struct {
	// The description of the role collection.
	Description string `pulumi:"description"`
	// The name of the role collection.
	Name string `pulumi:"name"`
	// Shows whether the role collection is read-only.
	ReadOnly bool                                   `pulumi:"readOnly"`
	Roles    []GetDirectoryRoleCollectionsValueRole `pulumi:"roles"`
}

// GetDirectoryRoleCollectionsValueInput is an input type that accepts GetDirectoryRoleCollectionsValueArgs and GetDirectoryRoleCollectionsValueOutput values.
// You can construct a concrete instance of `GetDirectoryRoleCollectionsValueInput` via:
//
//	GetDirectoryRoleCollectionsValueArgs{...}
type GetDirectoryRoleCollectionsValueInput interface {
	pulumi.Input

	ToGetDirectoryRoleCollectionsValueOutput() GetDirectoryRoleCollectionsValueOutput
	ToGetDirectoryRoleCollectionsValueOutputWithContext(context.Context) GetDirectoryRoleCollectionsValueOutput
}

type GetDirectoryRoleCollectionsValueArgs struct {
	// The description of the role collection.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the role collection.
	Name pulumi.StringInput `pulumi:"name"`
	// Shows whether the role collection is read-only.
	ReadOnly pulumi.BoolInput                               `pulumi:"readOnly"`
	Roles    GetDirectoryRoleCollectionsValueRoleArrayInput `pulumi:"roles"`
}

func (GetDirectoryRoleCollectionsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleCollectionsValue)(nil)).Elem()
}

func (i GetDirectoryRoleCollectionsValueArgs) ToGetDirectoryRoleCollectionsValueOutput() GetDirectoryRoleCollectionsValueOutput {
	return i.ToGetDirectoryRoleCollectionsValueOutputWithContext(context.Background())
}

func (i GetDirectoryRoleCollectionsValueArgs) ToGetDirectoryRoleCollectionsValueOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRoleCollectionsValueOutput)
}

func (i GetDirectoryRoleCollectionsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRoleCollectionsValue] {
	return pulumix.Output[GetDirectoryRoleCollectionsValue]{
		OutputState: i.ToGetDirectoryRoleCollectionsValueOutputWithContext(ctx).OutputState,
	}
}

// GetDirectoryRoleCollectionsValueArrayInput is an input type that accepts GetDirectoryRoleCollectionsValueArray and GetDirectoryRoleCollectionsValueArrayOutput values.
// You can construct a concrete instance of `GetDirectoryRoleCollectionsValueArrayInput` via:
//
//	GetDirectoryRoleCollectionsValueArray{ GetDirectoryRoleCollectionsValueArgs{...} }
type GetDirectoryRoleCollectionsValueArrayInput interface {
	pulumi.Input

	ToGetDirectoryRoleCollectionsValueArrayOutput() GetDirectoryRoleCollectionsValueArrayOutput
	ToGetDirectoryRoleCollectionsValueArrayOutputWithContext(context.Context) GetDirectoryRoleCollectionsValueArrayOutput
}

type GetDirectoryRoleCollectionsValueArray []GetDirectoryRoleCollectionsValueInput

func (GetDirectoryRoleCollectionsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRoleCollectionsValue)(nil)).Elem()
}

func (i GetDirectoryRoleCollectionsValueArray) ToGetDirectoryRoleCollectionsValueArrayOutput() GetDirectoryRoleCollectionsValueArrayOutput {
	return i.ToGetDirectoryRoleCollectionsValueArrayOutputWithContext(context.Background())
}

func (i GetDirectoryRoleCollectionsValueArray) ToGetDirectoryRoleCollectionsValueArrayOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRoleCollectionsValueArrayOutput)
}

func (i GetDirectoryRoleCollectionsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRoleCollectionsValue] {
	return pulumix.Output[[]GetDirectoryRoleCollectionsValue]{
		OutputState: i.ToGetDirectoryRoleCollectionsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDirectoryRoleCollectionsValueOutput struct{ *pulumi.OutputState }

func (GetDirectoryRoleCollectionsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleCollectionsValue)(nil)).Elem()
}

func (o GetDirectoryRoleCollectionsValueOutput) ToGetDirectoryRoleCollectionsValueOutput() GetDirectoryRoleCollectionsValueOutput {
	return o
}

func (o GetDirectoryRoleCollectionsValueOutput) ToGetDirectoryRoleCollectionsValueOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionsValueOutput {
	return o
}

func (o GetDirectoryRoleCollectionsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRoleCollectionsValue] {
	return pulumix.Output[GetDirectoryRoleCollectionsValue]{
		OutputState: o.OutputState,
	}
}

// The description of the role collection.
func (o GetDirectoryRoleCollectionsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsValue) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the role collection.
func (o GetDirectoryRoleCollectionsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsValue) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the role collection is read-only.
func (o GetDirectoryRoleCollectionsValueOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsValue) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

func (o GetDirectoryRoleCollectionsValueOutput) Roles() GetDirectoryRoleCollectionsValueRoleArrayOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsValue) []GetDirectoryRoleCollectionsValueRole { return v.Roles }).(GetDirectoryRoleCollectionsValueRoleArrayOutput)
}

type GetDirectoryRoleCollectionsValueArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryRoleCollectionsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRoleCollectionsValue)(nil)).Elem()
}

func (o GetDirectoryRoleCollectionsValueArrayOutput) ToGetDirectoryRoleCollectionsValueArrayOutput() GetDirectoryRoleCollectionsValueArrayOutput {
	return o
}

func (o GetDirectoryRoleCollectionsValueArrayOutput) ToGetDirectoryRoleCollectionsValueArrayOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionsValueArrayOutput {
	return o
}

func (o GetDirectoryRoleCollectionsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRoleCollectionsValue] {
	return pulumix.Output[[]GetDirectoryRoleCollectionsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryRoleCollectionsValueArrayOutput) Index(i pulumi.IntInput) GetDirectoryRoleCollectionsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryRoleCollectionsValue {
		return vs[0].([]GetDirectoryRoleCollectionsValue)[vs[1].(int)]
	}).(GetDirectoryRoleCollectionsValueOutput)
}

type GetDirectoryRoleCollectionsValueRole struct {
	Description       string `pulumi:"description"`
	Name              string `pulumi:"name"`
	RoleTemplateAppId string `pulumi:"roleTemplateAppId"`
	RoleTemplateName  string `pulumi:"roleTemplateName"`
}

// GetDirectoryRoleCollectionsValueRoleInput is an input type that accepts GetDirectoryRoleCollectionsValueRoleArgs and GetDirectoryRoleCollectionsValueRoleOutput values.
// You can construct a concrete instance of `GetDirectoryRoleCollectionsValueRoleInput` via:
//
//	GetDirectoryRoleCollectionsValueRoleArgs{...}
type GetDirectoryRoleCollectionsValueRoleInput interface {
	pulumi.Input

	ToGetDirectoryRoleCollectionsValueRoleOutput() GetDirectoryRoleCollectionsValueRoleOutput
	ToGetDirectoryRoleCollectionsValueRoleOutputWithContext(context.Context) GetDirectoryRoleCollectionsValueRoleOutput
}

type GetDirectoryRoleCollectionsValueRoleArgs struct {
	Description       pulumi.StringInput `pulumi:"description"`
	Name              pulumi.StringInput `pulumi:"name"`
	RoleTemplateAppId pulumi.StringInput `pulumi:"roleTemplateAppId"`
	RoleTemplateName  pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (GetDirectoryRoleCollectionsValueRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleCollectionsValueRole)(nil)).Elem()
}

func (i GetDirectoryRoleCollectionsValueRoleArgs) ToGetDirectoryRoleCollectionsValueRoleOutput() GetDirectoryRoleCollectionsValueRoleOutput {
	return i.ToGetDirectoryRoleCollectionsValueRoleOutputWithContext(context.Background())
}

func (i GetDirectoryRoleCollectionsValueRoleArgs) ToGetDirectoryRoleCollectionsValueRoleOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionsValueRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRoleCollectionsValueRoleOutput)
}

func (i GetDirectoryRoleCollectionsValueRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRoleCollectionsValueRole] {
	return pulumix.Output[GetDirectoryRoleCollectionsValueRole]{
		OutputState: i.ToGetDirectoryRoleCollectionsValueRoleOutputWithContext(ctx).OutputState,
	}
}

// GetDirectoryRoleCollectionsValueRoleArrayInput is an input type that accepts GetDirectoryRoleCollectionsValueRoleArray and GetDirectoryRoleCollectionsValueRoleArrayOutput values.
// You can construct a concrete instance of `GetDirectoryRoleCollectionsValueRoleArrayInput` via:
//
//	GetDirectoryRoleCollectionsValueRoleArray{ GetDirectoryRoleCollectionsValueRoleArgs{...} }
type GetDirectoryRoleCollectionsValueRoleArrayInput interface {
	pulumi.Input

	ToGetDirectoryRoleCollectionsValueRoleArrayOutput() GetDirectoryRoleCollectionsValueRoleArrayOutput
	ToGetDirectoryRoleCollectionsValueRoleArrayOutputWithContext(context.Context) GetDirectoryRoleCollectionsValueRoleArrayOutput
}

type GetDirectoryRoleCollectionsValueRoleArray []GetDirectoryRoleCollectionsValueRoleInput

func (GetDirectoryRoleCollectionsValueRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRoleCollectionsValueRole)(nil)).Elem()
}

func (i GetDirectoryRoleCollectionsValueRoleArray) ToGetDirectoryRoleCollectionsValueRoleArrayOutput() GetDirectoryRoleCollectionsValueRoleArrayOutput {
	return i.ToGetDirectoryRoleCollectionsValueRoleArrayOutputWithContext(context.Background())
}

func (i GetDirectoryRoleCollectionsValueRoleArray) ToGetDirectoryRoleCollectionsValueRoleArrayOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionsValueRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRoleCollectionsValueRoleArrayOutput)
}

func (i GetDirectoryRoleCollectionsValueRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRoleCollectionsValueRole] {
	return pulumix.Output[[]GetDirectoryRoleCollectionsValueRole]{
		OutputState: i.ToGetDirectoryRoleCollectionsValueRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDirectoryRoleCollectionsValueRoleOutput struct{ *pulumi.OutputState }

func (GetDirectoryRoleCollectionsValueRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleCollectionsValueRole)(nil)).Elem()
}

func (o GetDirectoryRoleCollectionsValueRoleOutput) ToGetDirectoryRoleCollectionsValueRoleOutput() GetDirectoryRoleCollectionsValueRoleOutput {
	return o
}

func (o GetDirectoryRoleCollectionsValueRoleOutput) ToGetDirectoryRoleCollectionsValueRoleOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionsValueRoleOutput {
	return o
}

func (o GetDirectoryRoleCollectionsValueRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRoleCollectionsValueRole] {
	return pulumix.Output[GetDirectoryRoleCollectionsValueRole]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryRoleCollectionsValueRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsValueRole) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetDirectoryRoleCollectionsValueRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsValueRole) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDirectoryRoleCollectionsValueRoleOutput) RoleTemplateAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsValueRole) string { return v.RoleTemplateAppId }).(pulumi.StringOutput)
}

func (o GetDirectoryRoleCollectionsValueRoleOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsValueRole) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

type GetDirectoryRoleCollectionsValueRoleArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryRoleCollectionsValueRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRoleCollectionsValueRole)(nil)).Elem()
}

func (o GetDirectoryRoleCollectionsValueRoleArrayOutput) ToGetDirectoryRoleCollectionsValueRoleArrayOutput() GetDirectoryRoleCollectionsValueRoleArrayOutput {
	return o
}

func (o GetDirectoryRoleCollectionsValueRoleArrayOutput) ToGetDirectoryRoleCollectionsValueRoleArrayOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionsValueRoleArrayOutput {
	return o
}

func (o GetDirectoryRoleCollectionsValueRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRoleCollectionsValueRole] {
	return pulumix.Output[[]GetDirectoryRoleCollectionsValueRole]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryRoleCollectionsValueRoleArrayOutput) Index(i pulumi.IntInput) GetDirectoryRoleCollectionsValueRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryRoleCollectionsValueRole {
		return vs[0].([]GetDirectoryRoleCollectionsValueRole)[vs[1].(int)]
	}).(GetDirectoryRoleCollectionsValueRoleOutput)
}

type GetDirectoryRoleScope struct {
	CustomGrantAsAuthorityToApps []string `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            []string `pulumi:"customGrantedApps"`
	// The description of the scope.
	Description            string   `pulumi:"description"`
	GrantAsAuthorityToApps []string `pulumi:"grantAsAuthorityToApps"`
	GrantedApps            []string `pulumi:"grantedApps"`
	// The name of the scope.
	Name string `pulumi:"name"`
}

// GetDirectoryRoleScopeInput is an input type that accepts GetDirectoryRoleScopeArgs and GetDirectoryRoleScopeOutput values.
// You can construct a concrete instance of `GetDirectoryRoleScopeInput` via:
//
//	GetDirectoryRoleScopeArgs{...}
type GetDirectoryRoleScopeInput interface {
	pulumi.Input

	ToGetDirectoryRoleScopeOutput() GetDirectoryRoleScopeOutput
	ToGetDirectoryRoleScopeOutputWithContext(context.Context) GetDirectoryRoleScopeOutput
}

type GetDirectoryRoleScopeArgs struct {
	CustomGrantAsAuthorityToApps pulumi.StringArrayInput `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            pulumi.StringArrayInput `pulumi:"customGrantedApps"`
	// The description of the scope.
	Description            pulumi.StringInput      `pulumi:"description"`
	GrantAsAuthorityToApps pulumi.StringArrayInput `pulumi:"grantAsAuthorityToApps"`
	GrantedApps            pulumi.StringArrayInput `pulumi:"grantedApps"`
	// The name of the scope.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetDirectoryRoleScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleScope)(nil)).Elem()
}

func (i GetDirectoryRoleScopeArgs) ToGetDirectoryRoleScopeOutput() GetDirectoryRoleScopeOutput {
	return i.ToGetDirectoryRoleScopeOutputWithContext(context.Background())
}

func (i GetDirectoryRoleScopeArgs) ToGetDirectoryRoleScopeOutputWithContext(ctx context.Context) GetDirectoryRoleScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRoleScopeOutput)
}

func (i GetDirectoryRoleScopeArgs) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRoleScope] {
	return pulumix.Output[GetDirectoryRoleScope]{
		OutputState: i.ToGetDirectoryRoleScopeOutputWithContext(ctx).OutputState,
	}
}

// GetDirectoryRoleScopeArrayInput is an input type that accepts GetDirectoryRoleScopeArray and GetDirectoryRoleScopeArrayOutput values.
// You can construct a concrete instance of `GetDirectoryRoleScopeArrayInput` via:
//
//	GetDirectoryRoleScopeArray{ GetDirectoryRoleScopeArgs{...} }
type GetDirectoryRoleScopeArrayInput interface {
	pulumi.Input

	ToGetDirectoryRoleScopeArrayOutput() GetDirectoryRoleScopeArrayOutput
	ToGetDirectoryRoleScopeArrayOutputWithContext(context.Context) GetDirectoryRoleScopeArrayOutput
}

type GetDirectoryRoleScopeArray []GetDirectoryRoleScopeInput

func (GetDirectoryRoleScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRoleScope)(nil)).Elem()
}

func (i GetDirectoryRoleScopeArray) ToGetDirectoryRoleScopeArrayOutput() GetDirectoryRoleScopeArrayOutput {
	return i.ToGetDirectoryRoleScopeArrayOutputWithContext(context.Background())
}

func (i GetDirectoryRoleScopeArray) ToGetDirectoryRoleScopeArrayOutputWithContext(ctx context.Context) GetDirectoryRoleScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRoleScopeArrayOutput)
}

func (i GetDirectoryRoleScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRoleScope] {
	return pulumix.Output[[]GetDirectoryRoleScope]{
		OutputState: i.ToGetDirectoryRoleScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDirectoryRoleScopeOutput struct{ *pulumi.OutputState }

func (GetDirectoryRoleScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleScope)(nil)).Elem()
}

func (o GetDirectoryRoleScopeOutput) ToGetDirectoryRoleScopeOutput() GetDirectoryRoleScopeOutput {
	return o
}

func (o GetDirectoryRoleScopeOutput) ToGetDirectoryRoleScopeOutputWithContext(ctx context.Context) GetDirectoryRoleScopeOutput {
	return o
}

func (o GetDirectoryRoleScopeOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRoleScope] {
	return pulumix.Output[GetDirectoryRoleScope]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryRoleScopeOutput) CustomGrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryRoleScope) []string { return v.CustomGrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetDirectoryRoleScopeOutput) CustomGrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryRoleScope) []string { return v.CustomGrantedApps }).(pulumi.StringArrayOutput)
}

// The description of the scope.
func (o GetDirectoryRoleScopeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleScope) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetDirectoryRoleScopeOutput) GrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryRoleScope) []string { return v.GrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetDirectoryRoleScopeOutput) GrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryRoleScope) []string { return v.GrantedApps }).(pulumi.StringArrayOutput)
}

// The name of the scope.
func (o GetDirectoryRoleScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleScope) string { return v.Name }).(pulumi.StringOutput)
}

type GetDirectoryRoleScopeArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryRoleScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRoleScope)(nil)).Elem()
}

func (o GetDirectoryRoleScopeArrayOutput) ToGetDirectoryRoleScopeArrayOutput() GetDirectoryRoleScopeArrayOutput {
	return o
}

func (o GetDirectoryRoleScopeArrayOutput) ToGetDirectoryRoleScopeArrayOutputWithContext(ctx context.Context) GetDirectoryRoleScopeArrayOutput {
	return o
}

func (o GetDirectoryRoleScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRoleScope] {
	return pulumix.Output[[]GetDirectoryRoleScope]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryRoleScopeArrayOutput) Index(i pulumi.IntInput) GetDirectoryRoleScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryRoleScope {
		return vs[0].([]GetDirectoryRoleScope)[vs[1].(int)]
	}).(GetDirectoryRoleScopeOutput)
}

type GetDirectoryRolesValue struct {
	// The id of the application that provides the role template and the role.
	AppId string `pulumi:"appId"`
	// The name of the application that provides the role template and the role.
	AppName string `pulumi:"appName"`
	// The description of the role.
	Description string `pulumi:"description"`
	// The name of the role.
	Name string `pulumi:"name"`
	// Shows whether the role can be modified or not.
	ReadOnly bool `pulumi:"readOnly"`
	// The name of the role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
	// The scopes available with this role.
	Scopes []GetDirectoryRolesValueScope `pulumi:"scopes"`
}

// GetDirectoryRolesValueInput is an input type that accepts GetDirectoryRolesValueArgs and GetDirectoryRolesValueOutput values.
// You can construct a concrete instance of `GetDirectoryRolesValueInput` via:
//
//	GetDirectoryRolesValueArgs{...}
type GetDirectoryRolesValueInput interface {
	pulumi.Input

	ToGetDirectoryRolesValueOutput() GetDirectoryRolesValueOutput
	ToGetDirectoryRolesValueOutputWithContext(context.Context) GetDirectoryRolesValueOutput
}

type GetDirectoryRolesValueArgs struct {
	// The id of the application that provides the role template and the role.
	AppId pulumi.StringInput `pulumi:"appId"`
	// The name of the application that provides the role template and the role.
	AppName pulumi.StringInput `pulumi:"appName"`
	// The description of the role.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the role.
	Name pulumi.StringInput `pulumi:"name"`
	// Shows whether the role can be modified or not.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`
	// The name of the role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
	// The scopes available with this role.
	Scopes GetDirectoryRolesValueScopeArrayInput `pulumi:"scopes"`
}

func (GetDirectoryRolesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRolesValue)(nil)).Elem()
}

func (i GetDirectoryRolesValueArgs) ToGetDirectoryRolesValueOutput() GetDirectoryRolesValueOutput {
	return i.ToGetDirectoryRolesValueOutputWithContext(context.Background())
}

func (i GetDirectoryRolesValueArgs) ToGetDirectoryRolesValueOutputWithContext(ctx context.Context) GetDirectoryRolesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRolesValueOutput)
}

func (i GetDirectoryRolesValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRolesValue] {
	return pulumix.Output[GetDirectoryRolesValue]{
		OutputState: i.ToGetDirectoryRolesValueOutputWithContext(ctx).OutputState,
	}
}

// GetDirectoryRolesValueArrayInput is an input type that accepts GetDirectoryRolesValueArray and GetDirectoryRolesValueArrayOutput values.
// You can construct a concrete instance of `GetDirectoryRolesValueArrayInput` via:
//
//	GetDirectoryRolesValueArray{ GetDirectoryRolesValueArgs{...} }
type GetDirectoryRolesValueArrayInput interface {
	pulumi.Input

	ToGetDirectoryRolesValueArrayOutput() GetDirectoryRolesValueArrayOutput
	ToGetDirectoryRolesValueArrayOutputWithContext(context.Context) GetDirectoryRolesValueArrayOutput
}

type GetDirectoryRolesValueArray []GetDirectoryRolesValueInput

func (GetDirectoryRolesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRolesValue)(nil)).Elem()
}

func (i GetDirectoryRolesValueArray) ToGetDirectoryRolesValueArrayOutput() GetDirectoryRolesValueArrayOutput {
	return i.ToGetDirectoryRolesValueArrayOutputWithContext(context.Background())
}

func (i GetDirectoryRolesValueArray) ToGetDirectoryRolesValueArrayOutputWithContext(ctx context.Context) GetDirectoryRolesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRolesValueArrayOutput)
}

func (i GetDirectoryRolesValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRolesValue] {
	return pulumix.Output[[]GetDirectoryRolesValue]{
		OutputState: i.ToGetDirectoryRolesValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDirectoryRolesValueOutput struct{ *pulumi.OutputState }

func (GetDirectoryRolesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRolesValue)(nil)).Elem()
}

func (o GetDirectoryRolesValueOutput) ToGetDirectoryRolesValueOutput() GetDirectoryRolesValueOutput {
	return o
}

func (o GetDirectoryRolesValueOutput) ToGetDirectoryRolesValueOutputWithContext(ctx context.Context) GetDirectoryRolesValueOutput {
	return o
}

func (o GetDirectoryRolesValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRolesValue] {
	return pulumix.Output[GetDirectoryRolesValue]{
		OutputState: o.OutputState,
	}
}

// The id of the application that provides the role template and the role.
func (o GetDirectoryRolesValueOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRolesValue) string { return v.AppId }).(pulumi.StringOutput)
}

// The name of the application that provides the role template and the role.
func (o GetDirectoryRolesValueOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRolesValue) string { return v.AppName }).(pulumi.StringOutput)
}

// The description of the role.
func (o GetDirectoryRolesValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRolesValue) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the role.
func (o GetDirectoryRolesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRolesValue) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the role can be modified or not.
func (o GetDirectoryRolesValueOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDirectoryRolesValue) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

// The name of the role template.
func (o GetDirectoryRolesValueOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRolesValue) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

// The scopes available with this role.
func (o GetDirectoryRolesValueOutput) Scopes() GetDirectoryRolesValueScopeArrayOutput {
	return o.ApplyT(func(v GetDirectoryRolesValue) []GetDirectoryRolesValueScope { return v.Scopes }).(GetDirectoryRolesValueScopeArrayOutput)
}

type GetDirectoryRolesValueArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryRolesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRolesValue)(nil)).Elem()
}

func (o GetDirectoryRolesValueArrayOutput) ToGetDirectoryRolesValueArrayOutput() GetDirectoryRolesValueArrayOutput {
	return o
}

func (o GetDirectoryRolesValueArrayOutput) ToGetDirectoryRolesValueArrayOutputWithContext(ctx context.Context) GetDirectoryRolesValueArrayOutput {
	return o
}

func (o GetDirectoryRolesValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRolesValue] {
	return pulumix.Output[[]GetDirectoryRolesValue]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryRolesValueArrayOutput) Index(i pulumi.IntInput) GetDirectoryRolesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryRolesValue {
		return vs[0].([]GetDirectoryRolesValue)[vs[1].(int)]
	}).(GetDirectoryRolesValueOutput)
}

type GetDirectoryRolesValueScope struct {
	CustomGrantAsAuthorityToApps []string `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            []string `pulumi:"customGrantedApps"`
	Description                  string   `pulumi:"description"`
	GrantAsAuthorityToApps       []string `pulumi:"grantAsAuthorityToApps"`
	GrantedApps                  []string `pulumi:"grantedApps"`
	Name                         string   `pulumi:"name"`
}

// GetDirectoryRolesValueScopeInput is an input type that accepts GetDirectoryRolesValueScopeArgs and GetDirectoryRolesValueScopeOutput values.
// You can construct a concrete instance of `GetDirectoryRolesValueScopeInput` via:
//
//	GetDirectoryRolesValueScopeArgs{...}
type GetDirectoryRolesValueScopeInput interface {
	pulumi.Input

	ToGetDirectoryRolesValueScopeOutput() GetDirectoryRolesValueScopeOutput
	ToGetDirectoryRolesValueScopeOutputWithContext(context.Context) GetDirectoryRolesValueScopeOutput
}

type GetDirectoryRolesValueScopeArgs struct {
	CustomGrantAsAuthorityToApps pulumi.StringArrayInput `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            pulumi.StringArrayInput `pulumi:"customGrantedApps"`
	Description                  pulumi.StringInput      `pulumi:"description"`
	GrantAsAuthorityToApps       pulumi.StringArrayInput `pulumi:"grantAsAuthorityToApps"`
	GrantedApps                  pulumi.StringArrayInput `pulumi:"grantedApps"`
	Name                         pulumi.StringInput      `pulumi:"name"`
}

func (GetDirectoryRolesValueScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRolesValueScope)(nil)).Elem()
}

func (i GetDirectoryRolesValueScopeArgs) ToGetDirectoryRolesValueScopeOutput() GetDirectoryRolesValueScopeOutput {
	return i.ToGetDirectoryRolesValueScopeOutputWithContext(context.Background())
}

func (i GetDirectoryRolesValueScopeArgs) ToGetDirectoryRolesValueScopeOutputWithContext(ctx context.Context) GetDirectoryRolesValueScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRolesValueScopeOutput)
}

func (i GetDirectoryRolesValueScopeArgs) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRolesValueScope] {
	return pulumix.Output[GetDirectoryRolesValueScope]{
		OutputState: i.ToGetDirectoryRolesValueScopeOutputWithContext(ctx).OutputState,
	}
}

// GetDirectoryRolesValueScopeArrayInput is an input type that accepts GetDirectoryRolesValueScopeArray and GetDirectoryRolesValueScopeArrayOutput values.
// You can construct a concrete instance of `GetDirectoryRolesValueScopeArrayInput` via:
//
//	GetDirectoryRolesValueScopeArray{ GetDirectoryRolesValueScopeArgs{...} }
type GetDirectoryRolesValueScopeArrayInput interface {
	pulumi.Input

	ToGetDirectoryRolesValueScopeArrayOutput() GetDirectoryRolesValueScopeArrayOutput
	ToGetDirectoryRolesValueScopeArrayOutputWithContext(context.Context) GetDirectoryRolesValueScopeArrayOutput
}

type GetDirectoryRolesValueScopeArray []GetDirectoryRolesValueScopeInput

func (GetDirectoryRolesValueScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRolesValueScope)(nil)).Elem()
}

func (i GetDirectoryRolesValueScopeArray) ToGetDirectoryRolesValueScopeArrayOutput() GetDirectoryRolesValueScopeArrayOutput {
	return i.ToGetDirectoryRolesValueScopeArrayOutputWithContext(context.Background())
}

func (i GetDirectoryRolesValueScopeArray) ToGetDirectoryRolesValueScopeArrayOutputWithContext(ctx context.Context) GetDirectoryRolesValueScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDirectoryRolesValueScopeArrayOutput)
}

func (i GetDirectoryRolesValueScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRolesValueScope] {
	return pulumix.Output[[]GetDirectoryRolesValueScope]{
		OutputState: i.ToGetDirectoryRolesValueScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDirectoryRolesValueScopeOutput struct{ *pulumi.OutputState }

func (GetDirectoryRolesValueScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRolesValueScope)(nil)).Elem()
}

func (o GetDirectoryRolesValueScopeOutput) ToGetDirectoryRolesValueScopeOutput() GetDirectoryRolesValueScopeOutput {
	return o
}

func (o GetDirectoryRolesValueScopeOutput) ToGetDirectoryRolesValueScopeOutputWithContext(ctx context.Context) GetDirectoryRolesValueScopeOutput {
	return o
}

func (o GetDirectoryRolesValueScopeOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRolesValueScope] {
	return pulumix.Output[GetDirectoryRolesValueScope]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryRolesValueScopeOutput) CustomGrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryRolesValueScope) []string { return v.CustomGrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetDirectoryRolesValueScopeOutput) CustomGrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryRolesValueScope) []string { return v.CustomGrantedApps }).(pulumi.StringArrayOutput)
}

func (o GetDirectoryRolesValueScopeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRolesValueScope) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetDirectoryRolesValueScopeOutput) GrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryRolesValueScope) []string { return v.GrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetDirectoryRolesValueScopeOutput) GrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDirectoryRolesValueScope) []string { return v.GrantedApps }).(pulumi.StringArrayOutput)
}

func (o GetDirectoryRolesValueScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRolesValueScope) string { return v.Name }).(pulumi.StringOutput)
}

type GetDirectoryRolesValueScopeArrayOutput struct{ *pulumi.OutputState }

func (GetDirectoryRolesValueScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDirectoryRolesValueScope)(nil)).Elem()
}

func (o GetDirectoryRolesValueScopeArrayOutput) ToGetDirectoryRolesValueScopeArrayOutput() GetDirectoryRolesValueScopeArrayOutput {
	return o
}

func (o GetDirectoryRolesValueScopeArrayOutput) ToGetDirectoryRolesValueScopeArrayOutputWithContext(ctx context.Context) GetDirectoryRolesValueScopeArrayOutput {
	return o
}

func (o GetDirectoryRolesValueScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDirectoryRolesValueScope] {
	return pulumix.Output[[]GetDirectoryRolesValueScope]{
		OutputState: o.OutputState,
	}
}

func (o GetDirectoryRolesValueScopeArrayOutput) Index(i pulumi.IntInput) GetDirectoryRolesValueScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDirectoryRolesValueScope {
		return vs[0].([]GetDirectoryRolesValueScope)[vs[1].(int)]
	}).(GetDirectoryRolesValueScopeOutput)
}

type GetGlobalaccountEntitlementsValues struct {
	// The current state of the entitlement. Possible values are:
	Category           string  `pulumi:"category"`
	PlanDescription    string  `pulumi:"planDescription"`
	PlanDisplayName    string  `pulumi:"planDisplayName"`
	PlanName           string  `pulumi:"planName"`
	QuotaAssigned      float64 `pulumi:"quotaAssigned"`
	QuotaRemaining     float64 `pulumi:"quotaRemaining"`
	ServiceDisplayName string  `pulumi:"serviceDisplayName"`
	ServiceName        string  `pulumi:"serviceName"`
}

// GetGlobalaccountEntitlementsValuesInput is an input type that accepts GetGlobalaccountEntitlementsValuesArgs and GetGlobalaccountEntitlementsValuesOutput values.
// You can construct a concrete instance of `GetGlobalaccountEntitlementsValuesInput` via:
//
//	GetGlobalaccountEntitlementsValuesArgs{...}
type GetGlobalaccountEntitlementsValuesInput interface {
	pulumi.Input

	ToGetGlobalaccountEntitlementsValuesOutput() GetGlobalaccountEntitlementsValuesOutput
	ToGetGlobalaccountEntitlementsValuesOutputWithContext(context.Context) GetGlobalaccountEntitlementsValuesOutput
}

type GetGlobalaccountEntitlementsValuesArgs struct {
	// The current state of the entitlement. Possible values are:
	Category           pulumi.StringInput  `pulumi:"category"`
	PlanDescription    pulumi.StringInput  `pulumi:"planDescription"`
	PlanDisplayName    pulumi.StringInput  `pulumi:"planDisplayName"`
	PlanName           pulumi.StringInput  `pulumi:"planName"`
	QuotaAssigned      pulumi.Float64Input `pulumi:"quotaAssigned"`
	QuotaRemaining     pulumi.Float64Input `pulumi:"quotaRemaining"`
	ServiceDisplayName pulumi.StringInput  `pulumi:"serviceDisplayName"`
	ServiceName        pulumi.StringInput  `pulumi:"serviceName"`
}

func (GetGlobalaccountEntitlementsValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountEntitlementsValues)(nil)).Elem()
}

func (i GetGlobalaccountEntitlementsValuesArgs) ToGetGlobalaccountEntitlementsValuesOutput() GetGlobalaccountEntitlementsValuesOutput {
	return i.ToGetGlobalaccountEntitlementsValuesOutputWithContext(context.Background())
}

func (i GetGlobalaccountEntitlementsValuesArgs) ToGetGlobalaccountEntitlementsValuesOutputWithContext(ctx context.Context) GetGlobalaccountEntitlementsValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountEntitlementsValuesOutput)
}

func (i GetGlobalaccountEntitlementsValuesArgs) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountEntitlementsValues] {
	return pulumix.Output[GetGlobalaccountEntitlementsValues]{
		OutputState: i.ToGetGlobalaccountEntitlementsValuesOutputWithContext(ctx).OutputState,
	}
}

// GetGlobalaccountEntitlementsValuesMapInput is an input type that accepts GetGlobalaccountEntitlementsValuesMap and GetGlobalaccountEntitlementsValuesMapOutput values.
// You can construct a concrete instance of `GetGlobalaccountEntitlementsValuesMapInput` via:
//
//	GetGlobalaccountEntitlementsValuesMap{ "key": GetGlobalaccountEntitlementsValuesArgs{...} }
type GetGlobalaccountEntitlementsValuesMapInput interface {
	pulumi.Input

	ToGetGlobalaccountEntitlementsValuesMapOutput() GetGlobalaccountEntitlementsValuesMapOutput
	ToGetGlobalaccountEntitlementsValuesMapOutputWithContext(context.Context) GetGlobalaccountEntitlementsValuesMapOutput
}

type GetGlobalaccountEntitlementsValuesMap map[string]GetGlobalaccountEntitlementsValuesInput

func (GetGlobalaccountEntitlementsValuesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGlobalaccountEntitlementsValues)(nil)).Elem()
}

func (i GetGlobalaccountEntitlementsValuesMap) ToGetGlobalaccountEntitlementsValuesMapOutput() GetGlobalaccountEntitlementsValuesMapOutput {
	return i.ToGetGlobalaccountEntitlementsValuesMapOutputWithContext(context.Background())
}

func (i GetGlobalaccountEntitlementsValuesMap) ToGetGlobalaccountEntitlementsValuesMapOutputWithContext(ctx context.Context) GetGlobalaccountEntitlementsValuesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountEntitlementsValuesMapOutput)
}

func (i GetGlobalaccountEntitlementsValuesMap) ToOutput(ctx context.Context) pulumix.Output[map[string]GetGlobalaccountEntitlementsValues] {
	return pulumix.Output[map[string]GetGlobalaccountEntitlementsValues]{
		OutputState: i.ToGetGlobalaccountEntitlementsValuesMapOutputWithContext(ctx).OutputState,
	}
}

type GetGlobalaccountEntitlementsValuesOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountEntitlementsValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountEntitlementsValues)(nil)).Elem()
}

func (o GetGlobalaccountEntitlementsValuesOutput) ToGetGlobalaccountEntitlementsValuesOutput() GetGlobalaccountEntitlementsValuesOutput {
	return o
}

func (o GetGlobalaccountEntitlementsValuesOutput) ToGetGlobalaccountEntitlementsValuesOutputWithContext(ctx context.Context) GetGlobalaccountEntitlementsValuesOutput {
	return o
}

func (o GetGlobalaccountEntitlementsValuesOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountEntitlementsValues] {
	return pulumix.Output[GetGlobalaccountEntitlementsValues]{
		OutputState: o.OutputState,
	}
}

// The current state of the entitlement. Possible values are:
func (o GetGlobalaccountEntitlementsValuesOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountEntitlementsValues) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetGlobalaccountEntitlementsValuesOutput) PlanDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountEntitlementsValues) string { return v.PlanDescription }).(pulumi.StringOutput)
}

func (o GetGlobalaccountEntitlementsValuesOutput) PlanDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountEntitlementsValues) string { return v.PlanDisplayName }).(pulumi.StringOutput)
}

func (o GetGlobalaccountEntitlementsValuesOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountEntitlementsValues) string { return v.PlanName }).(pulumi.StringOutput)
}

func (o GetGlobalaccountEntitlementsValuesOutput) QuotaAssigned() pulumi.Float64Output {
	return o.ApplyT(func(v GetGlobalaccountEntitlementsValues) float64 { return v.QuotaAssigned }).(pulumi.Float64Output)
}

func (o GetGlobalaccountEntitlementsValuesOutput) QuotaRemaining() pulumi.Float64Output {
	return o.ApplyT(func(v GetGlobalaccountEntitlementsValues) float64 { return v.QuotaRemaining }).(pulumi.Float64Output)
}

func (o GetGlobalaccountEntitlementsValuesOutput) ServiceDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountEntitlementsValues) string { return v.ServiceDisplayName }).(pulumi.StringOutput)
}

func (o GetGlobalaccountEntitlementsValuesOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountEntitlementsValues) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetGlobalaccountEntitlementsValuesMapOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountEntitlementsValuesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetGlobalaccountEntitlementsValues)(nil)).Elem()
}

func (o GetGlobalaccountEntitlementsValuesMapOutput) ToGetGlobalaccountEntitlementsValuesMapOutput() GetGlobalaccountEntitlementsValuesMapOutput {
	return o
}

func (o GetGlobalaccountEntitlementsValuesMapOutput) ToGetGlobalaccountEntitlementsValuesMapOutputWithContext(ctx context.Context) GetGlobalaccountEntitlementsValuesMapOutput {
	return o
}

func (o GetGlobalaccountEntitlementsValuesMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]GetGlobalaccountEntitlementsValues] {
	return pulumix.Output[map[string]GetGlobalaccountEntitlementsValues]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountEntitlementsValuesMapOutput) MapIndex(k pulumi.StringInput) GetGlobalaccountEntitlementsValuesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetGlobalaccountEntitlementsValues {
		return vs[0].(map[string]GetGlobalaccountEntitlementsValues)[vs[1].(string)]
	}).(GetGlobalaccountEntitlementsValuesOutput)
}

type GetGlobalaccountRoleCollectionRole struct {
	// The description of the referenced role
	Description string `pulumi:"description"`
	// The name of the referenced role.
	Name string `pulumi:"name"`
	// The name of the referenced template app id
	RoleTemplateAppId string `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
}

// GetGlobalaccountRoleCollectionRoleInput is an input type that accepts GetGlobalaccountRoleCollectionRoleArgs and GetGlobalaccountRoleCollectionRoleOutput values.
// You can construct a concrete instance of `GetGlobalaccountRoleCollectionRoleInput` via:
//
//	GetGlobalaccountRoleCollectionRoleArgs{...}
type GetGlobalaccountRoleCollectionRoleInput interface {
	pulumi.Input

	ToGetGlobalaccountRoleCollectionRoleOutput() GetGlobalaccountRoleCollectionRoleOutput
	ToGetGlobalaccountRoleCollectionRoleOutputWithContext(context.Context) GetGlobalaccountRoleCollectionRoleOutput
}

type GetGlobalaccountRoleCollectionRoleArgs struct {
	// The description of the referenced role
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the referenced role.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the referenced template app id
	RoleTemplateAppId pulumi.StringInput `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (GetGlobalaccountRoleCollectionRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleCollectionRole)(nil)).Elem()
}

func (i GetGlobalaccountRoleCollectionRoleArgs) ToGetGlobalaccountRoleCollectionRoleOutput() GetGlobalaccountRoleCollectionRoleOutput {
	return i.ToGetGlobalaccountRoleCollectionRoleOutputWithContext(context.Background())
}

func (i GetGlobalaccountRoleCollectionRoleArgs) ToGetGlobalaccountRoleCollectionRoleOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRoleCollectionRoleOutput)
}

func (i GetGlobalaccountRoleCollectionRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRoleCollectionRole] {
	return pulumix.Output[GetGlobalaccountRoleCollectionRole]{
		OutputState: i.ToGetGlobalaccountRoleCollectionRoleOutputWithContext(ctx).OutputState,
	}
}

// GetGlobalaccountRoleCollectionRoleArrayInput is an input type that accepts GetGlobalaccountRoleCollectionRoleArray and GetGlobalaccountRoleCollectionRoleArrayOutput values.
// You can construct a concrete instance of `GetGlobalaccountRoleCollectionRoleArrayInput` via:
//
//	GetGlobalaccountRoleCollectionRoleArray{ GetGlobalaccountRoleCollectionRoleArgs{...} }
type GetGlobalaccountRoleCollectionRoleArrayInput interface {
	pulumi.Input

	ToGetGlobalaccountRoleCollectionRoleArrayOutput() GetGlobalaccountRoleCollectionRoleArrayOutput
	ToGetGlobalaccountRoleCollectionRoleArrayOutputWithContext(context.Context) GetGlobalaccountRoleCollectionRoleArrayOutput
}

type GetGlobalaccountRoleCollectionRoleArray []GetGlobalaccountRoleCollectionRoleInput

func (GetGlobalaccountRoleCollectionRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRoleCollectionRole)(nil)).Elem()
}

func (i GetGlobalaccountRoleCollectionRoleArray) ToGetGlobalaccountRoleCollectionRoleArrayOutput() GetGlobalaccountRoleCollectionRoleArrayOutput {
	return i.ToGetGlobalaccountRoleCollectionRoleArrayOutputWithContext(context.Background())
}

func (i GetGlobalaccountRoleCollectionRoleArray) ToGetGlobalaccountRoleCollectionRoleArrayOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRoleCollectionRoleArrayOutput)
}

func (i GetGlobalaccountRoleCollectionRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRoleCollectionRole] {
	return pulumix.Output[[]GetGlobalaccountRoleCollectionRole]{
		OutputState: i.ToGetGlobalaccountRoleCollectionRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetGlobalaccountRoleCollectionRoleOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRoleCollectionRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleCollectionRole)(nil)).Elem()
}

func (o GetGlobalaccountRoleCollectionRoleOutput) ToGetGlobalaccountRoleCollectionRoleOutput() GetGlobalaccountRoleCollectionRoleOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionRoleOutput) ToGetGlobalaccountRoleCollectionRoleOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionRoleOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRoleCollectionRole] {
	return pulumix.Output[GetGlobalaccountRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

// The description of the referenced role
func (o GetGlobalaccountRoleCollectionRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionRole) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the referenced role.
func (o GetGlobalaccountRoleCollectionRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionRole) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the referenced template app id
func (o GetGlobalaccountRoleCollectionRoleOutput) RoleTemplateAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionRole) string { return v.RoleTemplateAppId }).(pulumi.StringOutput)
}

// The name of the referenced role template.
func (o GetGlobalaccountRoleCollectionRoleOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionRole) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

type GetGlobalaccountRoleCollectionRoleArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRoleCollectionRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRoleCollectionRole)(nil)).Elem()
}

func (o GetGlobalaccountRoleCollectionRoleArrayOutput) ToGetGlobalaccountRoleCollectionRoleArrayOutput() GetGlobalaccountRoleCollectionRoleArrayOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionRoleArrayOutput) ToGetGlobalaccountRoleCollectionRoleArrayOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionRoleArrayOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRoleCollectionRole] {
	return pulumix.Output[[]GetGlobalaccountRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountRoleCollectionRoleArrayOutput) Index(i pulumi.IntInput) GetGlobalaccountRoleCollectionRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalaccountRoleCollectionRole {
		return vs[0].([]GetGlobalaccountRoleCollectionRole)[vs[1].(int)]
	}).(GetGlobalaccountRoleCollectionRoleOutput)
}

type GetGlobalaccountRoleCollectionsValue struct {
	// The description of the role collection.
	Description string `pulumi:"description"`
	// The name of the role collection.
	Name string `pulumi:"name"`
	// Shows whether the role collection is read-only.
	ReadOnly bool                                       `pulumi:"readOnly"`
	Roles    []GetGlobalaccountRoleCollectionsValueRole `pulumi:"roles"`
}

// GetGlobalaccountRoleCollectionsValueInput is an input type that accepts GetGlobalaccountRoleCollectionsValueArgs and GetGlobalaccountRoleCollectionsValueOutput values.
// You can construct a concrete instance of `GetGlobalaccountRoleCollectionsValueInput` via:
//
//	GetGlobalaccountRoleCollectionsValueArgs{...}
type GetGlobalaccountRoleCollectionsValueInput interface {
	pulumi.Input

	ToGetGlobalaccountRoleCollectionsValueOutput() GetGlobalaccountRoleCollectionsValueOutput
	ToGetGlobalaccountRoleCollectionsValueOutputWithContext(context.Context) GetGlobalaccountRoleCollectionsValueOutput
}

type GetGlobalaccountRoleCollectionsValueArgs struct {
	// The description of the role collection.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the role collection.
	Name pulumi.StringInput `pulumi:"name"`
	// Shows whether the role collection is read-only.
	ReadOnly pulumi.BoolInput                                   `pulumi:"readOnly"`
	Roles    GetGlobalaccountRoleCollectionsValueRoleArrayInput `pulumi:"roles"`
}

func (GetGlobalaccountRoleCollectionsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleCollectionsValue)(nil)).Elem()
}

func (i GetGlobalaccountRoleCollectionsValueArgs) ToGetGlobalaccountRoleCollectionsValueOutput() GetGlobalaccountRoleCollectionsValueOutput {
	return i.ToGetGlobalaccountRoleCollectionsValueOutputWithContext(context.Background())
}

func (i GetGlobalaccountRoleCollectionsValueArgs) ToGetGlobalaccountRoleCollectionsValueOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRoleCollectionsValueOutput)
}

func (i GetGlobalaccountRoleCollectionsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRoleCollectionsValue] {
	return pulumix.Output[GetGlobalaccountRoleCollectionsValue]{
		OutputState: i.ToGetGlobalaccountRoleCollectionsValueOutputWithContext(ctx).OutputState,
	}
}

// GetGlobalaccountRoleCollectionsValueArrayInput is an input type that accepts GetGlobalaccountRoleCollectionsValueArray and GetGlobalaccountRoleCollectionsValueArrayOutput values.
// You can construct a concrete instance of `GetGlobalaccountRoleCollectionsValueArrayInput` via:
//
//	GetGlobalaccountRoleCollectionsValueArray{ GetGlobalaccountRoleCollectionsValueArgs{...} }
type GetGlobalaccountRoleCollectionsValueArrayInput interface {
	pulumi.Input

	ToGetGlobalaccountRoleCollectionsValueArrayOutput() GetGlobalaccountRoleCollectionsValueArrayOutput
	ToGetGlobalaccountRoleCollectionsValueArrayOutputWithContext(context.Context) GetGlobalaccountRoleCollectionsValueArrayOutput
}

type GetGlobalaccountRoleCollectionsValueArray []GetGlobalaccountRoleCollectionsValueInput

func (GetGlobalaccountRoleCollectionsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRoleCollectionsValue)(nil)).Elem()
}

func (i GetGlobalaccountRoleCollectionsValueArray) ToGetGlobalaccountRoleCollectionsValueArrayOutput() GetGlobalaccountRoleCollectionsValueArrayOutput {
	return i.ToGetGlobalaccountRoleCollectionsValueArrayOutputWithContext(context.Background())
}

func (i GetGlobalaccountRoleCollectionsValueArray) ToGetGlobalaccountRoleCollectionsValueArrayOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRoleCollectionsValueArrayOutput)
}

func (i GetGlobalaccountRoleCollectionsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRoleCollectionsValue] {
	return pulumix.Output[[]GetGlobalaccountRoleCollectionsValue]{
		OutputState: i.ToGetGlobalaccountRoleCollectionsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetGlobalaccountRoleCollectionsValueOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRoleCollectionsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleCollectionsValue)(nil)).Elem()
}

func (o GetGlobalaccountRoleCollectionsValueOutput) ToGetGlobalaccountRoleCollectionsValueOutput() GetGlobalaccountRoleCollectionsValueOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionsValueOutput) ToGetGlobalaccountRoleCollectionsValueOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionsValueOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRoleCollectionsValue] {
	return pulumix.Output[GetGlobalaccountRoleCollectionsValue]{
		OutputState: o.OutputState,
	}
}

// The description of the role collection.
func (o GetGlobalaccountRoleCollectionsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionsValue) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the role collection.
func (o GetGlobalaccountRoleCollectionsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionsValue) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the role collection is read-only.
func (o GetGlobalaccountRoleCollectionsValueOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionsValue) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

func (o GetGlobalaccountRoleCollectionsValueOutput) Roles() GetGlobalaccountRoleCollectionsValueRoleArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionsValue) []GetGlobalaccountRoleCollectionsValueRole {
		return v.Roles
	}).(GetGlobalaccountRoleCollectionsValueRoleArrayOutput)
}

type GetGlobalaccountRoleCollectionsValueArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRoleCollectionsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRoleCollectionsValue)(nil)).Elem()
}

func (o GetGlobalaccountRoleCollectionsValueArrayOutput) ToGetGlobalaccountRoleCollectionsValueArrayOutput() GetGlobalaccountRoleCollectionsValueArrayOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionsValueArrayOutput) ToGetGlobalaccountRoleCollectionsValueArrayOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionsValueArrayOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRoleCollectionsValue] {
	return pulumix.Output[[]GetGlobalaccountRoleCollectionsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountRoleCollectionsValueArrayOutput) Index(i pulumi.IntInput) GetGlobalaccountRoleCollectionsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalaccountRoleCollectionsValue {
		return vs[0].([]GetGlobalaccountRoleCollectionsValue)[vs[1].(int)]
	}).(GetGlobalaccountRoleCollectionsValueOutput)
}

type GetGlobalaccountRoleCollectionsValueRole struct {
	Description       string `pulumi:"description"`
	Name              string `pulumi:"name"`
	RoleTemplateAppId string `pulumi:"roleTemplateAppId"`
	RoleTemplateName  string `pulumi:"roleTemplateName"`
}

// GetGlobalaccountRoleCollectionsValueRoleInput is an input type that accepts GetGlobalaccountRoleCollectionsValueRoleArgs and GetGlobalaccountRoleCollectionsValueRoleOutput values.
// You can construct a concrete instance of `GetGlobalaccountRoleCollectionsValueRoleInput` via:
//
//	GetGlobalaccountRoleCollectionsValueRoleArgs{...}
type GetGlobalaccountRoleCollectionsValueRoleInput interface {
	pulumi.Input

	ToGetGlobalaccountRoleCollectionsValueRoleOutput() GetGlobalaccountRoleCollectionsValueRoleOutput
	ToGetGlobalaccountRoleCollectionsValueRoleOutputWithContext(context.Context) GetGlobalaccountRoleCollectionsValueRoleOutput
}

type GetGlobalaccountRoleCollectionsValueRoleArgs struct {
	Description       pulumi.StringInput `pulumi:"description"`
	Name              pulumi.StringInput `pulumi:"name"`
	RoleTemplateAppId pulumi.StringInput `pulumi:"roleTemplateAppId"`
	RoleTemplateName  pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (GetGlobalaccountRoleCollectionsValueRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleCollectionsValueRole)(nil)).Elem()
}

func (i GetGlobalaccountRoleCollectionsValueRoleArgs) ToGetGlobalaccountRoleCollectionsValueRoleOutput() GetGlobalaccountRoleCollectionsValueRoleOutput {
	return i.ToGetGlobalaccountRoleCollectionsValueRoleOutputWithContext(context.Background())
}

func (i GetGlobalaccountRoleCollectionsValueRoleArgs) ToGetGlobalaccountRoleCollectionsValueRoleOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionsValueRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRoleCollectionsValueRoleOutput)
}

func (i GetGlobalaccountRoleCollectionsValueRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRoleCollectionsValueRole] {
	return pulumix.Output[GetGlobalaccountRoleCollectionsValueRole]{
		OutputState: i.ToGetGlobalaccountRoleCollectionsValueRoleOutputWithContext(ctx).OutputState,
	}
}

// GetGlobalaccountRoleCollectionsValueRoleArrayInput is an input type that accepts GetGlobalaccountRoleCollectionsValueRoleArray and GetGlobalaccountRoleCollectionsValueRoleArrayOutput values.
// You can construct a concrete instance of `GetGlobalaccountRoleCollectionsValueRoleArrayInput` via:
//
//	GetGlobalaccountRoleCollectionsValueRoleArray{ GetGlobalaccountRoleCollectionsValueRoleArgs{...} }
type GetGlobalaccountRoleCollectionsValueRoleArrayInput interface {
	pulumi.Input

	ToGetGlobalaccountRoleCollectionsValueRoleArrayOutput() GetGlobalaccountRoleCollectionsValueRoleArrayOutput
	ToGetGlobalaccountRoleCollectionsValueRoleArrayOutputWithContext(context.Context) GetGlobalaccountRoleCollectionsValueRoleArrayOutput
}

type GetGlobalaccountRoleCollectionsValueRoleArray []GetGlobalaccountRoleCollectionsValueRoleInput

func (GetGlobalaccountRoleCollectionsValueRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRoleCollectionsValueRole)(nil)).Elem()
}

func (i GetGlobalaccountRoleCollectionsValueRoleArray) ToGetGlobalaccountRoleCollectionsValueRoleArrayOutput() GetGlobalaccountRoleCollectionsValueRoleArrayOutput {
	return i.ToGetGlobalaccountRoleCollectionsValueRoleArrayOutputWithContext(context.Background())
}

func (i GetGlobalaccountRoleCollectionsValueRoleArray) ToGetGlobalaccountRoleCollectionsValueRoleArrayOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionsValueRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRoleCollectionsValueRoleArrayOutput)
}

func (i GetGlobalaccountRoleCollectionsValueRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRoleCollectionsValueRole] {
	return pulumix.Output[[]GetGlobalaccountRoleCollectionsValueRole]{
		OutputState: i.ToGetGlobalaccountRoleCollectionsValueRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetGlobalaccountRoleCollectionsValueRoleOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRoleCollectionsValueRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleCollectionsValueRole)(nil)).Elem()
}

func (o GetGlobalaccountRoleCollectionsValueRoleOutput) ToGetGlobalaccountRoleCollectionsValueRoleOutput() GetGlobalaccountRoleCollectionsValueRoleOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionsValueRoleOutput) ToGetGlobalaccountRoleCollectionsValueRoleOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionsValueRoleOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionsValueRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRoleCollectionsValueRole] {
	return pulumix.Output[GetGlobalaccountRoleCollectionsValueRole]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountRoleCollectionsValueRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionsValueRole) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetGlobalaccountRoleCollectionsValueRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionsValueRole) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGlobalaccountRoleCollectionsValueRoleOutput) RoleTemplateAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionsValueRole) string { return v.RoleTemplateAppId }).(pulumi.StringOutput)
}

func (o GetGlobalaccountRoleCollectionsValueRoleOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleCollectionsValueRole) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

type GetGlobalaccountRoleCollectionsValueRoleArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRoleCollectionsValueRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRoleCollectionsValueRole)(nil)).Elem()
}

func (o GetGlobalaccountRoleCollectionsValueRoleArrayOutput) ToGetGlobalaccountRoleCollectionsValueRoleArrayOutput() GetGlobalaccountRoleCollectionsValueRoleArrayOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionsValueRoleArrayOutput) ToGetGlobalaccountRoleCollectionsValueRoleArrayOutputWithContext(ctx context.Context) GetGlobalaccountRoleCollectionsValueRoleArrayOutput {
	return o
}

func (o GetGlobalaccountRoleCollectionsValueRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRoleCollectionsValueRole] {
	return pulumix.Output[[]GetGlobalaccountRoleCollectionsValueRole]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountRoleCollectionsValueRoleArrayOutput) Index(i pulumi.IntInput) GetGlobalaccountRoleCollectionsValueRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalaccountRoleCollectionsValueRole {
		return vs[0].([]GetGlobalaccountRoleCollectionsValueRole)[vs[1].(int)]
	}).(GetGlobalaccountRoleCollectionsValueRoleOutput)
}

type GetGlobalaccountRoleScope struct {
	CustomGrantAsAuthorityToApps []string `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            []string `pulumi:"customGrantedApps"`
	// The description of the scope.
	Description            string   `pulumi:"description"`
	GrantAsAuthorityToApps []string `pulumi:"grantAsAuthorityToApps"`
	GrantedApps            []string `pulumi:"grantedApps"`
	// The name of the scope.
	Name string `pulumi:"name"`
}

// GetGlobalaccountRoleScopeInput is an input type that accepts GetGlobalaccountRoleScopeArgs and GetGlobalaccountRoleScopeOutput values.
// You can construct a concrete instance of `GetGlobalaccountRoleScopeInput` via:
//
//	GetGlobalaccountRoleScopeArgs{...}
type GetGlobalaccountRoleScopeInput interface {
	pulumi.Input

	ToGetGlobalaccountRoleScopeOutput() GetGlobalaccountRoleScopeOutput
	ToGetGlobalaccountRoleScopeOutputWithContext(context.Context) GetGlobalaccountRoleScopeOutput
}

type GetGlobalaccountRoleScopeArgs struct {
	CustomGrantAsAuthorityToApps pulumi.StringArrayInput `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            pulumi.StringArrayInput `pulumi:"customGrantedApps"`
	// The description of the scope.
	Description            pulumi.StringInput      `pulumi:"description"`
	GrantAsAuthorityToApps pulumi.StringArrayInput `pulumi:"grantAsAuthorityToApps"`
	GrantedApps            pulumi.StringArrayInput `pulumi:"grantedApps"`
	// The name of the scope.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetGlobalaccountRoleScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleScope)(nil)).Elem()
}

func (i GetGlobalaccountRoleScopeArgs) ToGetGlobalaccountRoleScopeOutput() GetGlobalaccountRoleScopeOutput {
	return i.ToGetGlobalaccountRoleScopeOutputWithContext(context.Background())
}

func (i GetGlobalaccountRoleScopeArgs) ToGetGlobalaccountRoleScopeOutputWithContext(ctx context.Context) GetGlobalaccountRoleScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRoleScopeOutput)
}

func (i GetGlobalaccountRoleScopeArgs) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRoleScope] {
	return pulumix.Output[GetGlobalaccountRoleScope]{
		OutputState: i.ToGetGlobalaccountRoleScopeOutputWithContext(ctx).OutputState,
	}
}

// GetGlobalaccountRoleScopeArrayInput is an input type that accepts GetGlobalaccountRoleScopeArray and GetGlobalaccountRoleScopeArrayOutput values.
// You can construct a concrete instance of `GetGlobalaccountRoleScopeArrayInput` via:
//
//	GetGlobalaccountRoleScopeArray{ GetGlobalaccountRoleScopeArgs{...} }
type GetGlobalaccountRoleScopeArrayInput interface {
	pulumi.Input

	ToGetGlobalaccountRoleScopeArrayOutput() GetGlobalaccountRoleScopeArrayOutput
	ToGetGlobalaccountRoleScopeArrayOutputWithContext(context.Context) GetGlobalaccountRoleScopeArrayOutput
}

type GetGlobalaccountRoleScopeArray []GetGlobalaccountRoleScopeInput

func (GetGlobalaccountRoleScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRoleScope)(nil)).Elem()
}

func (i GetGlobalaccountRoleScopeArray) ToGetGlobalaccountRoleScopeArrayOutput() GetGlobalaccountRoleScopeArrayOutput {
	return i.ToGetGlobalaccountRoleScopeArrayOutputWithContext(context.Background())
}

func (i GetGlobalaccountRoleScopeArray) ToGetGlobalaccountRoleScopeArrayOutputWithContext(ctx context.Context) GetGlobalaccountRoleScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRoleScopeArrayOutput)
}

func (i GetGlobalaccountRoleScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRoleScope] {
	return pulumix.Output[[]GetGlobalaccountRoleScope]{
		OutputState: i.ToGetGlobalaccountRoleScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetGlobalaccountRoleScopeOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRoleScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleScope)(nil)).Elem()
}

func (o GetGlobalaccountRoleScopeOutput) ToGetGlobalaccountRoleScopeOutput() GetGlobalaccountRoleScopeOutput {
	return o
}

func (o GetGlobalaccountRoleScopeOutput) ToGetGlobalaccountRoleScopeOutputWithContext(ctx context.Context) GetGlobalaccountRoleScopeOutput {
	return o
}

func (o GetGlobalaccountRoleScopeOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRoleScope] {
	return pulumix.Output[GetGlobalaccountRoleScope]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountRoleScopeOutput) CustomGrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleScope) []string { return v.CustomGrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetGlobalaccountRoleScopeOutput) CustomGrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleScope) []string { return v.CustomGrantedApps }).(pulumi.StringArrayOutput)
}

// The description of the scope.
func (o GetGlobalaccountRoleScopeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleScope) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetGlobalaccountRoleScopeOutput) GrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleScope) []string { return v.GrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetGlobalaccountRoleScopeOutput) GrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleScope) []string { return v.GrantedApps }).(pulumi.StringArrayOutput)
}

// The name of the scope.
func (o GetGlobalaccountRoleScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleScope) string { return v.Name }).(pulumi.StringOutput)
}

type GetGlobalaccountRoleScopeArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRoleScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRoleScope)(nil)).Elem()
}

func (o GetGlobalaccountRoleScopeArrayOutput) ToGetGlobalaccountRoleScopeArrayOutput() GetGlobalaccountRoleScopeArrayOutput {
	return o
}

func (o GetGlobalaccountRoleScopeArrayOutput) ToGetGlobalaccountRoleScopeArrayOutputWithContext(ctx context.Context) GetGlobalaccountRoleScopeArrayOutput {
	return o
}

func (o GetGlobalaccountRoleScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRoleScope] {
	return pulumix.Output[[]GetGlobalaccountRoleScope]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountRoleScopeArrayOutput) Index(i pulumi.IntInput) GetGlobalaccountRoleScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalaccountRoleScope {
		return vs[0].([]GetGlobalaccountRoleScope)[vs[1].(int)]
	}).(GetGlobalaccountRoleScopeOutput)
}

type GetGlobalaccountRolesValue struct {
	// The id of the application that provides the role template and the role.
	AppId string `pulumi:"appId"`
	// The name of the application that provides the role template and the role.
	AppName string `pulumi:"appName"`
	// The description of the role.
	Description string `pulumi:"description"`
	// The name of the role.
	Name string `pulumi:"name"`
	// Shows whether the role can be modified or not.
	ReadOnly bool `pulumi:"readOnly"`
	// The name of the role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
	// The scopes available with this role.
	Scopes []GetGlobalaccountRolesValueScope `pulumi:"scopes"`
}

// GetGlobalaccountRolesValueInput is an input type that accepts GetGlobalaccountRolesValueArgs and GetGlobalaccountRolesValueOutput values.
// You can construct a concrete instance of `GetGlobalaccountRolesValueInput` via:
//
//	GetGlobalaccountRolesValueArgs{...}
type GetGlobalaccountRolesValueInput interface {
	pulumi.Input

	ToGetGlobalaccountRolesValueOutput() GetGlobalaccountRolesValueOutput
	ToGetGlobalaccountRolesValueOutputWithContext(context.Context) GetGlobalaccountRolesValueOutput
}

type GetGlobalaccountRolesValueArgs struct {
	// The id of the application that provides the role template and the role.
	AppId pulumi.StringInput `pulumi:"appId"`
	// The name of the application that provides the role template and the role.
	AppName pulumi.StringInput `pulumi:"appName"`
	// The description of the role.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the role.
	Name pulumi.StringInput `pulumi:"name"`
	// Shows whether the role can be modified or not.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`
	// The name of the role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
	// The scopes available with this role.
	Scopes GetGlobalaccountRolesValueScopeArrayInput `pulumi:"scopes"`
}

func (GetGlobalaccountRolesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRolesValue)(nil)).Elem()
}

func (i GetGlobalaccountRolesValueArgs) ToGetGlobalaccountRolesValueOutput() GetGlobalaccountRolesValueOutput {
	return i.ToGetGlobalaccountRolesValueOutputWithContext(context.Background())
}

func (i GetGlobalaccountRolesValueArgs) ToGetGlobalaccountRolesValueOutputWithContext(ctx context.Context) GetGlobalaccountRolesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRolesValueOutput)
}

func (i GetGlobalaccountRolesValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRolesValue] {
	return pulumix.Output[GetGlobalaccountRolesValue]{
		OutputState: i.ToGetGlobalaccountRolesValueOutputWithContext(ctx).OutputState,
	}
}

// GetGlobalaccountRolesValueArrayInput is an input type that accepts GetGlobalaccountRolesValueArray and GetGlobalaccountRolesValueArrayOutput values.
// You can construct a concrete instance of `GetGlobalaccountRolesValueArrayInput` via:
//
//	GetGlobalaccountRolesValueArray{ GetGlobalaccountRolesValueArgs{...} }
type GetGlobalaccountRolesValueArrayInput interface {
	pulumi.Input

	ToGetGlobalaccountRolesValueArrayOutput() GetGlobalaccountRolesValueArrayOutput
	ToGetGlobalaccountRolesValueArrayOutputWithContext(context.Context) GetGlobalaccountRolesValueArrayOutput
}

type GetGlobalaccountRolesValueArray []GetGlobalaccountRolesValueInput

func (GetGlobalaccountRolesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRolesValue)(nil)).Elem()
}

func (i GetGlobalaccountRolesValueArray) ToGetGlobalaccountRolesValueArrayOutput() GetGlobalaccountRolesValueArrayOutput {
	return i.ToGetGlobalaccountRolesValueArrayOutputWithContext(context.Background())
}

func (i GetGlobalaccountRolesValueArray) ToGetGlobalaccountRolesValueArrayOutputWithContext(ctx context.Context) GetGlobalaccountRolesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRolesValueArrayOutput)
}

func (i GetGlobalaccountRolesValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRolesValue] {
	return pulumix.Output[[]GetGlobalaccountRolesValue]{
		OutputState: i.ToGetGlobalaccountRolesValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetGlobalaccountRolesValueOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRolesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRolesValue)(nil)).Elem()
}

func (o GetGlobalaccountRolesValueOutput) ToGetGlobalaccountRolesValueOutput() GetGlobalaccountRolesValueOutput {
	return o
}

func (o GetGlobalaccountRolesValueOutput) ToGetGlobalaccountRolesValueOutputWithContext(ctx context.Context) GetGlobalaccountRolesValueOutput {
	return o
}

func (o GetGlobalaccountRolesValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRolesValue] {
	return pulumix.Output[GetGlobalaccountRolesValue]{
		OutputState: o.OutputState,
	}
}

// The id of the application that provides the role template and the role.
func (o GetGlobalaccountRolesValueOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValue) string { return v.AppId }).(pulumi.StringOutput)
}

// The name of the application that provides the role template and the role.
func (o GetGlobalaccountRolesValueOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValue) string { return v.AppName }).(pulumi.StringOutput)
}

// The description of the role.
func (o GetGlobalaccountRolesValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValue) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the role.
func (o GetGlobalaccountRolesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValue) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the role can be modified or not.
func (o GetGlobalaccountRolesValueOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValue) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

// The name of the role template.
func (o GetGlobalaccountRolesValueOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValue) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

// The scopes available with this role.
func (o GetGlobalaccountRolesValueOutput) Scopes() GetGlobalaccountRolesValueScopeArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValue) []GetGlobalaccountRolesValueScope { return v.Scopes }).(GetGlobalaccountRolesValueScopeArrayOutput)
}

type GetGlobalaccountRolesValueArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRolesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRolesValue)(nil)).Elem()
}

func (o GetGlobalaccountRolesValueArrayOutput) ToGetGlobalaccountRolesValueArrayOutput() GetGlobalaccountRolesValueArrayOutput {
	return o
}

func (o GetGlobalaccountRolesValueArrayOutput) ToGetGlobalaccountRolesValueArrayOutputWithContext(ctx context.Context) GetGlobalaccountRolesValueArrayOutput {
	return o
}

func (o GetGlobalaccountRolesValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRolesValue] {
	return pulumix.Output[[]GetGlobalaccountRolesValue]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountRolesValueArrayOutput) Index(i pulumi.IntInput) GetGlobalaccountRolesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalaccountRolesValue {
		return vs[0].([]GetGlobalaccountRolesValue)[vs[1].(int)]
	}).(GetGlobalaccountRolesValueOutput)
}

type GetGlobalaccountRolesValueScope struct {
	CustomGrantAsAuthorityToApps []string `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            []string `pulumi:"customGrantedApps"`
	Description                  string   `pulumi:"description"`
	GrantAsAuthorityToApps       []string `pulumi:"grantAsAuthorityToApps"`
	GrantedApps                  []string `pulumi:"grantedApps"`
	Name                         string   `pulumi:"name"`
}

// GetGlobalaccountRolesValueScopeInput is an input type that accepts GetGlobalaccountRolesValueScopeArgs and GetGlobalaccountRolesValueScopeOutput values.
// You can construct a concrete instance of `GetGlobalaccountRolesValueScopeInput` via:
//
//	GetGlobalaccountRolesValueScopeArgs{...}
type GetGlobalaccountRolesValueScopeInput interface {
	pulumi.Input

	ToGetGlobalaccountRolesValueScopeOutput() GetGlobalaccountRolesValueScopeOutput
	ToGetGlobalaccountRolesValueScopeOutputWithContext(context.Context) GetGlobalaccountRolesValueScopeOutput
}

type GetGlobalaccountRolesValueScopeArgs struct {
	CustomGrantAsAuthorityToApps pulumi.StringArrayInput `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            pulumi.StringArrayInput `pulumi:"customGrantedApps"`
	Description                  pulumi.StringInput      `pulumi:"description"`
	GrantAsAuthorityToApps       pulumi.StringArrayInput `pulumi:"grantAsAuthorityToApps"`
	GrantedApps                  pulumi.StringArrayInput `pulumi:"grantedApps"`
	Name                         pulumi.StringInput      `pulumi:"name"`
}

func (GetGlobalaccountRolesValueScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRolesValueScope)(nil)).Elem()
}

func (i GetGlobalaccountRolesValueScopeArgs) ToGetGlobalaccountRolesValueScopeOutput() GetGlobalaccountRolesValueScopeOutput {
	return i.ToGetGlobalaccountRolesValueScopeOutputWithContext(context.Background())
}

func (i GetGlobalaccountRolesValueScopeArgs) ToGetGlobalaccountRolesValueScopeOutputWithContext(ctx context.Context) GetGlobalaccountRolesValueScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRolesValueScopeOutput)
}

func (i GetGlobalaccountRolesValueScopeArgs) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRolesValueScope] {
	return pulumix.Output[GetGlobalaccountRolesValueScope]{
		OutputState: i.ToGetGlobalaccountRolesValueScopeOutputWithContext(ctx).OutputState,
	}
}

// GetGlobalaccountRolesValueScopeArrayInput is an input type that accepts GetGlobalaccountRolesValueScopeArray and GetGlobalaccountRolesValueScopeArrayOutput values.
// You can construct a concrete instance of `GetGlobalaccountRolesValueScopeArrayInput` via:
//
//	GetGlobalaccountRolesValueScopeArray{ GetGlobalaccountRolesValueScopeArgs{...} }
type GetGlobalaccountRolesValueScopeArrayInput interface {
	pulumi.Input

	ToGetGlobalaccountRolesValueScopeArrayOutput() GetGlobalaccountRolesValueScopeArrayOutput
	ToGetGlobalaccountRolesValueScopeArrayOutputWithContext(context.Context) GetGlobalaccountRolesValueScopeArrayOutput
}

type GetGlobalaccountRolesValueScopeArray []GetGlobalaccountRolesValueScopeInput

func (GetGlobalaccountRolesValueScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRolesValueScope)(nil)).Elem()
}

func (i GetGlobalaccountRolesValueScopeArray) ToGetGlobalaccountRolesValueScopeArrayOutput() GetGlobalaccountRolesValueScopeArrayOutput {
	return i.ToGetGlobalaccountRolesValueScopeArrayOutputWithContext(context.Background())
}

func (i GetGlobalaccountRolesValueScopeArray) ToGetGlobalaccountRolesValueScopeArrayOutputWithContext(ctx context.Context) GetGlobalaccountRolesValueScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountRolesValueScopeArrayOutput)
}

func (i GetGlobalaccountRolesValueScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRolesValueScope] {
	return pulumix.Output[[]GetGlobalaccountRolesValueScope]{
		OutputState: i.ToGetGlobalaccountRolesValueScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetGlobalaccountRolesValueScopeOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRolesValueScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRolesValueScope)(nil)).Elem()
}

func (o GetGlobalaccountRolesValueScopeOutput) ToGetGlobalaccountRolesValueScopeOutput() GetGlobalaccountRolesValueScopeOutput {
	return o
}

func (o GetGlobalaccountRolesValueScopeOutput) ToGetGlobalaccountRolesValueScopeOutputWithContext(ctx context.Context) GetGlobalaccountRolesValueScopeOutput {
	return o
}

func (o GetGlobalaccountRolesValueScopeOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRolesValueScope] {
	return pulumix.Output[GetGlobalaccountRolesValueScope]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountRolesValueScopeOutput) CustomGrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValueScope) []string { return v.CustomGrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetGlobalaccountRolesValueScopeOutput) CustomGrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValueScope) []string { return v.CustomGrantedApps }).(pulumi.StringArrayOutput)
}

func (o GetGlobalaccountRolesValueScopeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValueScope) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetGlobalaccountRolesValueScopeOutput) GrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValueScope) []string { return v.GrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetGlobalaccountRolesValueScopeOutput) GrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValueScope) []string { return v.GrantedApps }).(pulumi.StringArrayOutput)
}

func (o GetGlobalaccountRolesValueScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRolesValueScope) string { return v.Name }).(pulumi.StringOutput)
}

type GetGlobalaccountRolesValueScopeArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRolesValueScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountRolesValueScope)(nil)).Elem()
}

func (o GetGlobalaccountRolesValueScopeArrayOutput) ToGetGlobalaccountRolesValueScopeArrayOutput() GetGlobalaccountRolesValueScopeArrayOutput {
	return o
}

func (o GetGlobalaccountRolesValueScopeArrayOutput) ToGetGlobalaccountRolesValueScopeArrayOutputWithContext(ctx context.Context) GetGlobalaccountRolesValueScopeArrayOutput {
	return o
}

func (o GetGlobalaccountRolesValueScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountRolesValueScope] {
	return pulumix.Output[[]GetGlobalaccountRolesValueScope]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountRolesValueScopeArrayOutput) Index(i pulumi.IntInput) GetGlobalaccountRolesValueScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalaccountRolesValueScope {
		return vs[0].([]GetGlobalaccountRolesValueScope)[vs[1].(int)]
	}).(GetGlobalaccountRolesValueScopeOutput)
}

type GetGlobalaccountTrustConfigurationsValue struct {
	// The description of the trust configuration.
	Description string `pulumi:"description"`
	// The tenant's domain which should be used for user logon.
	Domain string `pulumi:"domain"`
	// The origin of the identity provider.
	//
	// Deprecated: Use the `origin` attribute instead
	Id string `pulumi:"id"`
	// The name of the Identity Authentication tenant the global account is connected to.
	IdentityProvider string `pulumi:"identityProvider"`
	// The display name of the trust configuration.
	Name string `pulumi:"name"`
	// The origin of the identity provider.
	Origin string `pulumi:"origin"`
	// The protocol used to establish trust with the identity provider.
	Protocol string `pulumi:"protocol"`
	// Shows whether the trust configuration can be modified.
	ReadOnly bool `pulumi:"readOnly"`
	// Shows whether the identity provider is currently 'active' or 'inactive'.
	Status string `pulumi:"status"`
	// The trust type.
	Type string `pulumi:"type"`
}

// GetGlobalaccountTrustConfigurationsValueInput is an input type that accepts GetGlobalaccountTrustConfigurationsValueArgs and GetGlobalaccountTrustConfigurationsValueOutput values.
// You can construct a concrete instance of `GetGlobalaccountTrustConfigurationsValueInput` via:
//
//	GetGlobalaccountTrustConfigurationsValueArgs{...}
type GetGlobalaccountTrustConfigurationsValueInput interface {
	pulumi.Input

	ToGetGlobalaccountTrustConfigurationsValueOutput() GetGlobalaccountTrustConfigurationsValueOutput
	ToGetGlobalaccountTrustConfigurationsValueOutputWithContext(context.Context) GetGlobalaccountTrustConfigurationsValueOutput
}

type GetGlobalaccountTrustConfigurationsValueArgs struct {
	// The description of the trust configuration.
	Description pulumi.StringInput `pulumi:"description"`
	// The tenant's domain which should be used for user logon.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The origin of the identity provider.
	//
	// Deprecated: Use the `origin` attribute instead
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Identity Authentication tenant the global account is connected to.
	IdentityProvider pulumi.StringInput `pulumi:"identityProvider"`
	// The display name of the trust configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The origin of the identity provider.
	Origin pulumi.StringInput `pulumi:"origin"`
	// The protocol used to establish trust with the identity provider.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Shows whether the trust configuration can be modified.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`
	// Shows whether the identity provider is currently 'active' or 'inactive'.
	Status pulumi.StringInput `pulumi:"status"`
	// The trust type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetGlobalaccountTrustConfigurationsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountTrustConfigurationsValue)(nil)).Elem()
}

func (i GetGlobalaccountTrustConfigurationsValueArgs) ToGetGlobalaccountTrustConfigurationsValueOutput() GetGlobalaccountTrustConfigurationsValueOutput {
	return i.ToGetGlobalaccountTrustConfigurationsValueOutputWithContext(context.Background())
}

func (i GetGlobalaccountTrustConfigurationsValueArgs) ToGetGlobalaccountTrustConfigurationsValueOutputWithContext(ctx context.Context) GetGlobalaccountTrustConfigurationsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountTrustConfigurationsValueOutput)
}

func (i GetGlobalaccountTrustConfigurationsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountTrustConfigurationsValue] {
	return pulumix.Output[GetGlobalaccountTrustConfigurationsValue]{
		OutputState: i.ToGetGlobalaccountTrustConfigurationsValueOutputWithContext(ctx).OutputState,
	}
}

// GetGlobalaccountTrustConfigurationsValueArrayInput is an input type that accepts GetGlobalaccountTrustConfigurationsValueArray and GetGlobalaccountTrustConfigurationsValueArrayOutput values.
// You can construct a concrete instance of `GetGlobalaccountTrustConfigurationsValueArrayInput` via:
//
//	GetGlobalaccountTrustConfigurationsValueArray{ GetGlobalaccountTrustConfigurationsValueArgs{...} }
type GetGlobalaccountTrustConfigurationsValueArrayInput interface {
	pulumi.Input

	ToGetGlobalaccountTrustConfigurationsValueArrayOutput() GetGlobalaccountTrustConfigurationsValueArrayOutput
	ToGetGlobalaccountTrustConfigurationsValueArrayOutputWithContext(context.Context) GetGlobalaccountTrustConfigurationsValueArrayOutput
}

type GetGlobalaccountTrustConfigurationsValueArray []GetGlobalaccountTrustConfigurationsValueInput

func (GetGlobalaccountTrustConfigurationsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountTrustConfigurationsValue)(nil)).Elem()
}

func (i GetGlobalaccountTrustConfigurationsValueArray) ToGetGlobalaccountTrustConfigurationsValueArrayOutput() GetGlobalaccountTrustConfigurationsValueArrayOutput {
	return i.ToGetGlobalaccountTrustConfigurationsValueArrayOutputWithContext(context.Background())
}

func (i GetGlobalaccountTrustConfigurationsValueArray) ToGetGlobalaccountTrustConfigurationsValueArrayOutputWithContext(ctx context.Context) GetGlobalaccountTrustConfigurationsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGlobalaccountTrustConfigurationsValueArrayOutput)
}

func (i GetGlobalaccountTrustConfigurationsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountTrustConfigurationsValue] {
	return pulumix.Output[[]GetGlobalaccountTrustConfigurationsValue]{
		OutputState: i.ToGetGlobalaccountTrustConfigurationsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetGlobalaccountTrustConfigurationsValueOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountTrustConfigurationsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountTrustConfigurationsValue)(nil)).Elem()
}

func (o GetGlobalaccountTrustConfigurationsValueOutput) ToGetGlobalaccountTrustConfigurationsValueOutput() GetGlobalaccountTrustConfigurationsValueOutput {
	return o
}

func (o GetGlobalaccountTrustConfigurationsValueOutput) ToGetGlobalaccountTrustConfigurationsValueOutputWithContext(ctx context.Context) GetGlobalaccountTrustConfigurationsValueOutput {
	return o
}

func (o GetGlobalaccountTrustConfigurationsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountTrustConfigurationsValue] {
	return pulumix.Output[GetGlobalaccountTrustConfigurationsValue]{
		OutputState: o.OutputState,
	}
}

// The description of the trust configuration.
func (o GetGlobalaccountTrustConfigurationsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) string { return v.Description }).(pulumi.StringOutput)
}

// The tenant's domain which should be used for user logon.
func (o GetGlobalaccountTrustConfigurationsValueOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) string { return v.Domain }).(pulumi.StringOutput)
}

// The origin of the identity provider.
//
// Deprecated: Use the `origin` attribute instead
func (o GetGlobalaccountTrustConfigurationsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Identity Authentication tenant the global account is connected to.
func (o GetGlobalaccountTrustConfigurationsValueOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) string { return v.IdentityProvider }).(pulumi.StringOutput)
}

// The display name of the trust configuration.
func (o GetGlobalaccountTrustConfigurationsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) string { return v.Name }).(pulumi.StringOutput)
}

// The origin of the identity provider.
func (o GetGlobalaccountTrustConfigurationsValueOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) string { return v.Origin }).(pulumi.StringOutput)
}

// The protocol used to establish trust with the identity provider.
func (o GetGlobalaccountTrustConfigurationsValueOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) string { return v.Protocol }).(pulumi.StringOutput)
}

// Shows whether the trust configuration can be modified.
func (o GetGlobalaccountTrustConfigurationsValueOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

// Shows whether the identity provider is currently 'active' or 'inactive'.
func (o GetGlobalaccountTrustConfigurationsValueOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) string { return v.Status }).(pulumi.StringOutput)
}

// The trust type.
func (o GetGlobalaccountTrustConfigurationsValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountTrustConfigurationsValue) string { return v.Type }).(pulumi.StringOutput)
}

type GetGlobalaccountTrustConfigurationsValueArrayOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountTrustConfigurationsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGlobalaccountTrustConfigurationsValue)(nil)).Elem()
}

func (o GetGlobalaccountTrustConfigurationsValueArrayOutput) ToGetGlobalaccountTrustConfigurationsValueArrayOutput() GetGlobalaccountTrustConfigurationsValueArrayOutput {
	return o
}

func (o GetGlobalaccountTrustConfigurationsValueArrayOutput) ToGetGlobalaccountTrustConfigurationsValueArrayOutputWithContext(ctx context.Context) GetGlobalaccountTrustConfigurationsValueArrayOutput {
	return o
}

func (o GetGlobalaccountTrustConfigurationsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetGlobalaccountTrustConfigurationsValue] {
	return pulumix.Output[[]GetGlobalaccountTrustConfigurationsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetGlobalaccountTrustConfigurationsValueArrayOutput) Index(i pulumi.IntInput) GetGlobalaccountTrustConfigurationsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGlobalaccountTrustConfigurationsValue {
		return vs[0].([]GetGlobalaccountTrustConfigurationsValue)[vs[1].(int)]
	}).(GetGlobalaccountTrustConfigurationsValueOutput)
}

type GetRegionsValue struct {
	// The domain of the data center
	Domain string `pulumi:"domain"`
	// The environment that the data center supports. For example: Kubernetes, Cloud Foundry.
	Environment string `pulumi:"environment"`
	// The infrastructure provider for the data center. Possible values are:
	IaasProvider string `pulumi:"iaasProvider"`
	// The ID of the global account.
	Id                     string `pulumi:"id"`
	Name                   string `pulumi:"name"`
	ProvisioningServiceUrl string `pulumi:"provisioningServiceUrl"`
	Region                 string `pulumi:"region"`
	SaasRegistryServiceUrl string `pulumi:"saasRegistryServiceUrl"`
	SupportsTrial          bool   `pulumi:"supportsTrial"`
}

// GetRegionsValueInput is an input type that accepts GetRegionsValueArgs and GetRegionsValueOutput values.
// You can construct a concrete instance of `GetRegionsValueInput` via:
//
//	GetRegionsValueArgs{...}
type GetRegionsValueInput interface {
	pulumi.Input

	ToGetRegionsValueOutput() GetRegionsValueOutput
	ToGetRegionsValueOutputWithContext(context.Context) GetRegionsValueOutput
}

type GetRegionsValueArgs struct {
	// The domain of the data center
	Domain pulumi.StringInput `pulumi:"domain"`
	// The environment that the data center supports. For example: Kubernetes, Cloud Foundry.
	Environment pulumi.StringInput `pulumi:"environment"`
	// The infrastructure provider for the data center. Possible values are:
	IaasProvider pulumi.StringInput `pulumi:"iaasProvider"`
	// The ID of the global account.
	Id                     pulumi.StringInput `pulumi:"id"`
	Name                   pulumi.StringInput `pulumi:"name"`
	ProvisioningServiceUrl pulumi.StringInput `pulumi:"provisioningServiceUrl"`
	Region                 pulumi.StringInput `pulumi:"region"`
	SaasRegistryServiceUrl pulumi.StringInput `pulumi:"saasRegistryServiceUrl"`
	SupportsTrial          pulumi.BoolInput   `pulumi:"supportsTrial"`
}

func (GetRegionsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsValue)(nil)).Elem()
}

func (i GetRegionsValueArgs) ToGetRegionsValueOutput() GetRegionsValueOutput {
	return i.ToGetRegionsValueOutputWithContext(context.Background())
}

func (i GetRegionsValueArgs) ToGetRegionsValueOutputWithContext(ctx context.Context) GetRegionsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsValueOutput)
}

func (i GetRegionsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetRegionsValue] {
	return pulumix.Output[GetRegionsValue]{
		OutputState: i.ToGetRegionsValueOutputWithContext(ctx).OutputState,
	}
}

// GetRegionsValueArrayInput is an input type that accepts GetRegionsValueArray and GetRegionsValueArrayOutput values.
// You can construct a concrete instance of `GetRegionsValueArrayInput` via:
//
//	GetRegionsValueArray{ GetRegionsValueArgs{...} }
type GetRegionsValueArrayInput interface {
	pulumi.Input

	ToGetRegionsValueArrayOutput() GetRegionsValueArrayOutput
	ToGetRegionsValueArrayOutputWithContext(context.Context) GetRegionsValueArrayOutput
}

type GetRegionsValueArray []GetRegionsValueInput

func (GetRegionsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsValue)(nil)).Elem()
}

func (i GetRegionsValueArray) ToGetRegionsValueArrayOutput() GetRegionsValueArrayOutput {
	return i.ToGetRegionsValueArrayOutputWithContext(context.Background())
}

func (i GetRegionsValueArray) ToGetRegionsValueArrayOutputWithContext(ctx context.Context) GetRegionsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsValueArrayOutput)
}

func (i GetRegionsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionsValue] {
	return pulumix.Output[[]GetRegionsValue]{
		OutputState: i.ToGetRegionsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetRegionsValueOutput struct{ *pulumi.OutputState }

func (GetRegionsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsValue)(nil)).Elem()
}

func (o GetRegionsValueOutput) ToGetRegionsValueOutput() GetRegionsValueOutput {
	return o
}

func (o GetRegionsValueOutput) ToGetRegionsValueOutputWithContext(ctx context.Context) GetRegionsValueOutput {
	return o
}

func (o GetRegionsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetRegionsValue] {
	return pulumix.Output[GetRegionsValue]{
		OutputState: o.OutputState,
	}
}

// The domain of the data center
func (o GetRegionsValueOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsValue) string { return v.Domain }).(pulumi.StringOutput)
}

// The environment that the data center supports. For example: Kubernetes, Cloud Foundry.
func (o GetRegionsValueOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsValue) string { return v.Environment }).(pulumi.StringOutput)
}

// The infrastructure provider for the data center. Possible values are:
func (o GetRegionsValueOutput) IaasProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsValue) string { return v.IaasProvider }).(pulumi.StringOutput)
}

// The ID of the global account.
func (o GetRegionsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsValue) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRegionsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsValue) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRegionsValueOutput) ProvisioningServiceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsValue) string { return v.ProvisioningServiceUrl }).(pulumi.StringOutput)
}

func (o GetRegionsValueOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsValue) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetRegionsValueOutput) SaasRegistryServiceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsValue) string { return v.SaasRegistryServiceUrl }).(pulumi.StringOutput)
}

func (o GetRegionsValueOutput) SupportsTrial() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRegionsValue) bool { return v.SupportsTrial }).(pulumi.BoolOutput)
}

type GetRegionsValueArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsValue)(nil)).Elem()
}

func (o GetRegionsValueArrayOutput) ToGetRegionsValueArrayOutput() GetRegionsValueArrayOutput {
	return o
}

func (o GetRegionsValueArrayOutput) ToGetRegionsValueArrayOutputWithContext(ctx context.Context) GetRegionsValueArrayOutput {
	return o
}

func (o GetRegionsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetRegionsValue] {
	return pulumix.Output[[]GetRegionsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetRegionsValueArrayOutput) Index(i pulumi.IntInput) GetRegionsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsValue {
		return vs[0].([]GetRegionsValue)[vs[1].(int)]
	}).(GetRegionsValueOutput)
}

type GetSubaccountAppOauth2Configuration struct {
	Allowedproviders     []string `pulumi:"allowedproviders"`
	Autoapprove          bool     `pulumi:"autoapprove"`
	GrantTypes           []string `pulumi:"grantTypes"`
	RedirectUris         []string `pulumi:"redirectUris"`
	RefreshTokenValidity int      `pulumi:"refreshTokenValidity"`
	SystemAttributes     []string `pulumi:"systemAttributes"`
	TokenValidity        int      `pulumi:"tokenValidity"`
}

// GetSubaccountAppOauth2ConfigurationInput is an input type that accepts GetSubaccountAppOauth2ConfigurationArgs and GetSubaccountAppOauth2ConfigurationOutput values.
// You can construct a concrete instance of `GetSubaccountAppOauth2ConfigurationInput` via:
//
//	GetSubaccountAppOauth2ConfigurationArgs{...}
type GetSubaccountAppOauth2ConfigurationInput interface {
	pulumi.Input

	ToGetSubaccountAppOauth2ConfigurationOutput() GetSubaccountAppOauth2ConfigurationOutput
	ToGetSubaccountAppOauth2ConfigurationOutputWithContext(context.Context) GetSubaccountAppOauth2ConfigurationOutput
}

type GetSubaccountAppOauth2ConfigurationArgs struct {
	Allowedproviders     pulumi.StringArrayInput `pulumi:"allowedproviders"`
	Autoapprove          pulumi.BoolInput        `pulumi:"autoapprove"`
	GrantTypes           pulumi.StringArrayInput `pulumi:"grantTypes"`
	RedirectUris         pulumi.StringArrayInput `pulumi:"redirectUris"`
	RefreshTokenValidity pulumi.IntInput         `pulumi:"refreshTokenValidity"`
	SystemAttributes     pulumi.StringArrayInput `pulumi:"systemAttributes"`
	TokenValidity        pulumi.IntInput         `pulumi:"tokenValidity"`
}

func (GetSubaccountAppOauth2ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountAppOauth2Configuration)(nil)).Elem()
}

func (i GetSubaccountAppOauth2ConfigurationArgs) ToGetSubaccountAppOauth2ConfigurationOutput() GetSubaccountAppOauth2ConfigurationOutput {
	return i.ToGetSubaccountAppOauth2ConfigurationOutputWithContext(context.Background())
}

func (i GetSubaccountAppOauth2ConfigurationArgs) ToGetSubaccountAppOauth2ConfigurationOutputWithContext(ctx context.Context) GetSubaccountAppOauth2ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountAppOauth2ConfigurationOutput)
}

func (i GetSubaccountAppOauth2ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountAppOauth2Configuration] {
	return pulumix.Output[GetSubaccountAppOauth2Configuration]{
		OutputState: i.ToGetSubaccountAppOauth2ConfigurationOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountAppOauth2ConfigurationOutput struct{ *pulumi.OutputState }

func (GetSubaccountAppOauth2ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountAppOauth2Configuration)(nil)).Elem()
}

func (o GetSubaccountAppOauth2ConfigurationOutput) ToGetSubaccountAppOauth2ConfigurationOutput() GetSubaccountAppOauth2ConfigurationOutput {
	return o
}

func (o GetSubaccountAppOauth2ConfigurationOutput) ToGetSubaccountAppOauth2ConfigurationOutputWithContext(ctx context.Context) GetSubaccountAppOauth2ConfigurationOutput {
	return o
}

func (o GetSubaccountAppOauth2ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountAppOauth2Configuration] {
	return pulumix.Output[GetSubaccountAppOauth2Configuration]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountAppOauth2ConfigurationOutput) Allowedproviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppOauth2Configuration) []string { return v.Allowedproviders }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountAppOauth2ConfigurationOutput) Autoapprove() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountAppOauth2Configuration) bool { return v.Autoapprove }).(pulumi.BoolOutput)
}

func (o GetSubaccountAppOauth2ConfigurationOutput) GrantTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppOauth2Configuration) []string { return v.GrantTypes }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountAppOauth2ConfigurationOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppOauth2Configuration) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountAppOauth2ConfigurationOutput) RefreshTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubaccountAppOauth2Configuration) int { return v.RefreshTokenValidity }).(pulumi.IntOutput)
}

func (o GetSubaccountAppOauth2ConfigurationOutput) SystemAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppOauth2Configuration) []string { return v.SystemAttributes }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountAppOauth2ConfigurationOutput) TokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubaccountAppOauth2Configuration) int { return v.TokenValidity }).(pulumi.IntOutput)
}

type GetSubaccountAppsValue struct {
	Authorities []string `pulumi:"authorities"`
	// The description of the app.
	Description            string   `pulumi:"description"`
	ForeignScopeReferences []string `pulumi:"foreignScopeReferences"`
	// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
	Id                  string                                    `pulumi:"id"`
	MasterAppId         string                                    `pulumi:"masterAppId"`
	Oauth2Configuration GetSubaccountAppsValueOauth2Configuration `pulumi:"oauth2Configuration"`
	OrgId               string                                    `pulumi:"orgId"`
	PlanId              string                                    `pulumi:"planId"`
	PlanName            string                                    `pulumi:"planName"`
	ServiceinstanceId   string                                    `pulumi:"serviceinstanceId"`
	SpaceId             string                                    `pulumi:"spaceId"`
	TenantMode          string                                    `pulumi:"tenantMode"`
	Username            string                                    `pulumi:"username"`
	Xsappname           string                                    `pulumi:"xsappname"`
}

// GetSubaccountAppsValueInput is an input type that accepts GetSubaccountAppsValueArgs and GetSubaccountAppsValueOutput values.
// You can construct a concrete instance of `GetSubaccountAppsValueInput` via:
//
//	GetSubaccountAppsValueArgs{...}
type GetSubaccountAppsValueInput interface {
	pulumi.Input

	ToGetSubaccountAppsValueOutput() GetSubaccountAppsValueOutput
	ToGetSubaccountAppsValueOutputWithContext(context.Context) GetSubaccountAppsValueOutput
}

type GetSubaccountAppsValueArgs struct {
	Authorities pulumi.StringArrayInput `pulumi:"authorities"`
	// The description of the app.
	Description            pulumi.StringInput      `pulumi:"description"`
	ForeignScopeReferences pulumi.StringArrayInput `pulumi:"foreignScopeReferences"`
	// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
	Id                  pulumi.StringInput                             `pulumi:"id"`
	MasterAppId         pulumi.StringInput                             `pulumi:"masterAppId"`
	Oauth2Configuration GetSubaccountAppsValueOauth2ConfigurationInput `pulumi:"oauth2Configuration"`
	OrgId               pulumi.StringInput                             `pulumi:"orgId"`
	PlanId              pulumi.StringInput                             `pulumi:"planId"`
	PlanName            pulumi.StringInput                             `pulumi:"planName"`
	ServiceinstanceId   pulumi.StringInput                             `pulumi:"serviceinstanceId"`
	SpaceId             pulumi.StringInput                             `pulumi:"spaceId"`
	TenantMode          pulumi.StringInput                             `pulumi:"tenantMode"`
	Username            pulumi.StringInput                             `pulumi:"username"`
	Xsappname           pulumi.StringInput                             `pulumi:"xsappname"`
}

func (GetSubaccountAppsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountAppsValue)(nil)).Elem()
}

func (i GetSubaccountAppsValueArgs) ToGetSubaccountAppsValueOutput() GetSubaccountAppsValueOutput {
	return i.ToGetSubaccountAppsValueOutputWithContext(context.Background())
}

func (i GetSubaccountAppsValueArgs) ToGetSubaccountAppsValueOutputWithContext(ctx context.Context) GetSubaccountAppsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountAppsValueOutput)
}

func (i GetSubaccountAppsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountAppsValue] {
	return pulumix.Output[GetSubaccountAppsValue]{
		OutputState: i.ToGetSubaccountAppsValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountAppsValueArrayInput is an input type that accepts GetSubaccountAppsValueArray and GetSubaccountAppsValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountAppsValueArrayInput` via:
//
//	GetSubaccountAppsValueArray{ GetSubaccountAppsValueArgs{...} }
type GetSubaccountAppsValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountAppsValueArrayOutput() GetSubaccountAppsValueArrayOutput
	ToGetSubaccountAppsValueArrayOutputWithContext(context.Context) GetSubaccountAppsValueArrayOutput
}

type GetSubaccountAppsValueArray []GetSubaccountAppsValueInput

func (GetSubaccountAppsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountAppsValue)(nil)).Elem()
}

func (i GetSubaccountAppsValueArray) ToGetSubaccountAppsValueArrayOutput() GetSubaccountAppsValueArrayOutput {
	return i.ToGetSubaccountAppsValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountAppsValueArray) ToGetSubaccountAppsValueArrayOutputWithContext(ctx context.Context) GetSubaccountAppsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountAppsValueArrayOutput)
}

func (i GetSubaccountAppsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountAppsValue] {
	return pulumix.Output[[]GetSubaccountAppsValue]{
		OutputState: i.ToGetSubaccountAppsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountAppsValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountAppsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountAppsValue)(nil)).Elem()
}

func (o GetSubaccountAppsValueOutput) ToGetSubaccountAppsValueOutput() GetSubaccountAppsValueOutput {
	return o
}

func (o GetSubaccountAppsValueOutput) ToGetSubaccountAppsValueOutputWithContext(ctx context.Context) GetSubaccountAppsValueOutput {
	return o
}

func (o GetSubaccountAppsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountAppsValue] {
	return pulumix.Output[GetSubaccountAppsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountAppsValueOutput) Authorities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) []string { return v.Authorities }).(pulumi.StringArrayOutput)
}

// The description of the app.
func (o GetSubaccountAppsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) ForeignScopeReferences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) []string { return v.ForeignScopeReferences }).(pulumi.StringArrayOutput)
}

// The application ID is the xsappname plus the identifier, which consists of an exclamation mark (!), an identifier for the plan under which the application is deployed, and an index number.
func (o GetSubaccountAppsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) MasterAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.MasterAppId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) Oauth2Configuration() GetSubaccountAppsValueOauth2ConfigurationOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) GetSubaccountAppsValueOauth2Configuration { return v.Oauth2Configuration }).(GetSubaccountAppsValueOauth2ConfigurationOutput)
}

func (o GetSubaccountAppsValueOutput) OrgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.OrgId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.PlanId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.PlanName }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) ServiceinstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.ServiceinstanceId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) SpaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.SpaceId }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) TenantMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.TenantMode }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.Username }).(pulumi.StringOutput)
}

func (o GetSubaccountAppsValueOutput) Xsappname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountAppsValue) string { return v.Xsappname }).(pulumi.StringOutput)
}

type GetSubaccountAppsValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountAppsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountAppsValue)(nil)).Elem()
}

func (o GetSubaccountAppsValueArrayOutput) ToGetSubaccountAppsValueArrayOutput() GetSubaccountAppsValueArrayOutput {
	return o
}

func (o GetSubaccountAppsValueArrayOutput) ToGetSubaccountAppsValueArrayOutputWithContext(ctx context.Context) GetSubaccountAppsValueArrayOutput {
	return o
}

func (o GetSubaccountAppsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountAppsValue] {
	return pulumix.Output[[]GetSubaccountAppsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountAppsValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountAppsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountAppsValue {
		return vs[0].([]GetSubaccountAppsValue)[vs[1].(int)]
	}).(GetSubaccountAppsValueOutput)
}

type GetSubaccountAppsValueOauth2Configuration struct {
	Allowedproviders     []string `pulumi:"allowedproviders"`
	Autoapprove          bool     `pulumi:"autoapprove"`
	GrantTypes           []string `pulumi:"grantTypes"`
	RedirectUris         []string `pulumi:"redirectUris"`
	RefreshTokenValidity int      `pulumi:"refreshTokenValidity"`
	SystemAttributes     []string `pulumi:"systemAttributes"`
	TokenValidity        int      `pulumi:"tokenValidity"`
}

// GetSubaccountAppsValueOauth2ConfigurationInput is an input type that accepts GetSubaccountAppsValueOauth2ConfigurationArgs and GetSubaccountAppsValueOauth2ConfigurationOutput values.
// You can construct a concrete instance of `GetSubaccountAppsValueOauth2ConfigurationInput` via:
//
//	GetSubaccountAppsValueOauth2ConfigurationArgs{...}
type GetSubaccountAppsValueOauth2ConfigurationInput interface {
	pulumi.Input

	ToGetSubaccountAppsValueOauth2ConfigurationOutput() GetSubaccountAppsValueOauth2ConfigurationOutput
	ToGetSubaccountAppsValueOauth2ConfigurationOutputWithContext(context.Context) GetSubaccountAppsValueOauth2ConfigurationOutput
}

type GetSubaccountAppsValueOauth2ConfigurationArgs struct {
	Allowedproviders     pulumi.StringArrayInput `pulumi:"allowedproviders"`
	Autoapprove          pulumi.BoolInput        `pulumi:"autoapprove"`
	GrantTypes           pulumi.StringArrayInput `pulumi:"grantTypes"`
	RedirectUris         pulumi.StringArrayInput `pulumi:"redirectUris"`
	RefreshTokenValidity pulumi.IntInput         `pulumi:"refreshTokenValidity"`
	SystemAttributes     pulumi.StringArrayInput `pulumi:"systemAttributes"`
	TokenValidity        pulumi.IntInput         `pulumi:"tokenValidity"`
}

func (GetSubaccountAppsValueOauth2ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountAppsValueOauth2Configuration)(nil)).Elem()
}

func (i GetSubaccountAppsValueOauth2ConfigurationArgs) ToGetSubaccountAppsValueOauth2ConfigurationOutput() GetSubaccountAppsValueOauth2ConfigurationOutput {
	return i.ToGetSubaccountAppsValueOauth2ConfigurationOutputWithContext(context.Background())
}

func (i GetSubaccountAppsValueOauth2ConfigurationArgs) ToGetSubaccountAppsValueOauth2ConfigurationOutputWithContext(ctx context.Context) GetSubaccountAppsValueOauth2ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountAppsValueOauth2ConfigurationOutput)
}

func (i GetSubaccountAppsValueOauth2ConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountAppsValueOauth2Configuration] {
	return pulumix.Output[GetSubaccountAppsValueOauth2Configuration]{
		OutputState: i.ToGetSubaccountAppsValueOauth2ConfigurationOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountAppsValueOauth2ConfigurationOutput struct{ *pulumi.OutputState }

func (GetSubaccountAppsValueOauth2ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountAppsValueOauth2Configuration)(nil)).Elem()
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) ToGetSubaccountAppsValueOauth2ConfigurationOutput() GetSubaccountAppsValueOauth2ConfigurationOutput {
	return o
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) ToGetSubaccountAppsValueOauth2ConfigurationOutputWithContext(ctx context.Context) GetSubaccountAppsValueOauth2ConfigurationOutput {
	return o
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountAppsValueOauth2Configuration] {
	return pulumix.Output[GetSubaccountAppsValueOauth2Configuration]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) Allowedproviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppsValueOauth2Configuration) []string { return v.Allowedproviders }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) Autoapprove() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountAppsValueOauth2Configuration) bool { return v.Autoapprove }).(pulumi.BoolOutput)
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) GrantTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppsValueOauth2Configuration) []string { return v.GrantTypes }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) RedirectUris() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppsValueOauth2Configuration) []string { return v.RedirectUris }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) RefreshTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubaccountAppsValueOauth2Configuration) int { return v.RefreshTokenValidity }).(pulumi.IntOutput)
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) SystemAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountAppsValueOauth2Configuration) []string { return v.SystemAttributes }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountAppsValueOauth2ConfigurationOutput) TokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubaccountAppsValueOauth2Configuration) int { return v.TokenValidity }).(pulumi.IntOutput)
}

type GetSubaccountEntitlementsValues struct {
	// The current state of the entitlement. Possible values are:
	Category           string  `pulumi:"category"`
	PlanDescription    string  `pulumi:"planDescription"`
	PlanDisplayName    string  `pulumi:"planDisplayName"`
	PlanName           string  `pulumi:"planName"`
	QuotaAssigned      float64 `pulumi:"quotaAssigned"`
	QuotaRemaining     float64 `pulumi:"quotaRemaining"`
	ServiceDisplayName string  `pulumi:"serviceDisplayName"`
	ServiceName        string  `pulumi:"serviceName"`
}

// GetSubaccountEntitlementsValuesInput is an input type that accepts GetSubaccountEntitlementsValuesArgs and GetSubaccountEntitlementsValuesOutput values.
// You can construct a concrete instance of `GetSubaccountEntitlementsValuesInput` via:
//
//	GetSubaccountEntitlementsValuesArgs{...}
type GetSubaccountEntitlementsValuesInput interface {
	pulumi.Input

	ToGetSubaccountEntitlementsValuesOutput() GetSubaccountEntitlementsValuesOutput
	ToGetSubaccountEntitlementsValuesOutputWithContext(context.Context) GetSubaccountEntitlementsValuesOutput
}

type GetSubaccountEntitlementsValuesArgs struct {
	// The current state of the entitlement. Possible values are:
	Category           pulumi.StringInput  `pulumi:"category"`
	PlanDescription    pulumi.StringInput  `pulumi:"planDescription"`
	PlanDisplayName    pulumi.StringInput  `pulumi:"planDisplayName"`
	PlanName           pulumi.StringInput  `pulumi:"planName"`
	QuotaAssigned      pulumi.Float64Input `pulumi:"quotaAssigned"`
	QuotaRemaining     pulumi.Float64Input `pulumi:"quotaRemaining"`
	ServiceDisplayName pulumi.StringInput  `pulumi:"serviceDisplayName"`
	ServiceName        pulumi.StringInput  `pulumi:"serviceName"`
}

func (GetSubaccountEntitlementsValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountEntitlementsValues)(nil)).Elem()
}

func (i GetSubaccountEntitlementsValuesArgs) ToGetSubaccountEntitlementsValuesOutput() GetSubaccountEntitlementsValuesOutput {
	return i.ToGetSubaccountEntitlementsValuesOutputWithContext(context.Background())
}

func (i GetSubaccountEntitlementsValuesArgs) ToGetSubaccountEntitlementsValuesOutputWithContext(ctx context.Context) GetSubaccountEntitlementsValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountEntitlementsValuesOutput)
}

func (i GetSubaccountEntitlementsValuesArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountEntitlementsValues] {
	return pulumix.Output[GetSubaccountEntitlementsValues]{
		OutputState: i.ToGetSubaccountEntitlementsValuesOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountEntitlementsValuesMapInput is an input type that accepts GetSubaccountEntitlementsValuesMap and GetSubaccountEntitlementsValuesMapOutput values.
// You can construct a concrete instance of `GetSubaccountEntitlementsValuesMapInput` via:
//
//	GetSubaccountEntitlementsValuesMap{ "key": GetSubaccountEntitlementsValuesArgs{...} }
type GetSubaccountEntitlementsValuesMapInput interface {
	pulumi.Input

	ToGetSubaccountEntitlementsValuesMapOutput() GetSubaccountEntitlementsValuesMapOutput
	ToGetSubaccountEntitlementsValuesMapOutputWithContext(context.Context) GetSubaccountEntitlementsValuesMapOutput
}

type GetSubaccountEntitlementsValuesMap map[string]GetSubaccountEntitlementsValuesInput

func (GetSubaccountEntitlementsValuesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSubaccountEntitlementsValues)(nil)).Elem()
}

func (i GetSubaccountEntitlementsValuesMap) ToGetSubaccountEntitlementsValuesMapOutput() GetSubaccountEntitlementsValuesMapOutput {
	return i.ToGetSubaccountEntitlementsValuesMapOutputWithContext(context.Background())
}

func (i GetSubaccountEntitlementsValuesMap) ToGetSubaccountEntitlementsValuesMapOutputWithContext(ctx context.Context) GetSubaccountEntitlementsValuesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountEntitlementsValuesMapOutput)
}

func (i GetSubaccountEntitlementsValuesMap) ToOutput(ctx context.Context) pulumix.Output[map[string]GetSubaccountEntitlementsValues] {
	return pulumix.Output[map[string]GetSubaccountEntitlementsValues]{
		OutputState: i.ToGetSubaccountEntitlementsValuesMapOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountEntitlementsValuesOutput struct{ *pulumi.OutputState }

func (GetSubaccountEntitlementsValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountEntitlementsValues)(nil)).Elem()
}

func (o GetSubaccountEntitlementsValuesOutput) ToGetSubaccountEntitlementsValuesOutput() GetSubaccountEntitlementsValuesOutput {
	return o
}

func (o GetSubaccountEntitlementsValuesOutput) ToGetSubaccountEntitlementsValuesOutputWithContext(ctx context.Context) GetSubaccountEntitlementsValuesOutput {
	return o
}

func (o GetSubaccountEntitlementsValuesOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountEntitlementsValues] {
	return pulumix.Output[GetSubaccountEntitlementsValues]{
		OutputState: o.OutputState,
	}
}

// The current state of the entitlement. Possible values are:
func (o GetSubaccountEntitlementsValuesOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEntitlementsValues) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetSubaccountEntitlementsValuesOutput) PlanDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEntitlementsValues) string { return v.PlanDescription }).(pulumi.StringOutput)
}

func (o GetSubaccountEntitlementsValuesOutput) PlanDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEntitlementsValues) string { return v.PlanDisplayName }).(pulumi.StringOutput)
}

func (o GetSubaccountEntitlementsValuesOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEntitlementsValues) string { return v.PlanName }).(pulumi.StringOutput)
}

func (o GetSubaccountEntitlementsValuesOutput) QuotaAssigned() pulumi.Float64Output {
	return o.ApplyT(func(v GetSubaccountEntitlementsValues) float64 { return v.QuotaAssigned }).(pulumi.Float64Output)
}

func (o GetSubaccountEntitlementsValuesOutput) QuotaRemaining() pulumi.Float64Output {
	return o.ApplyT(func(v GetSubaccountEntitlementsValues) float64 { return v.QuotaRemaining }).(pulumi.Float64Output)
}

func (o GetSubaccountEntitlementsValuesOutput) ServiceDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEntitlementsValues) string { return v.ServiceDisplayName }).(pulumi.StringOutput)
}

func (o GetSubaccountEntitlementsValuesOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEntitlementsValues) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetSubaccountEntitlementsValuesMapOutput struct{ *pulumi.OutputState }

func (GetSubaccountEntitlementsValuesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]GetSubaccountEntitlementsValues)(nil)).Elem()
}

func (o GetSubaccountEntitlementsValuesMapOutput) ToGetSubaccountEntitlementsValuesMapOutput() GetSubaccountEntitlementsValuesMapOutput {
	return o
}

func (o GetSubaccountEntitlementsValuesMapOutput) ToGetSubaccountEntitlementsValuesMapOutputWithContext(ctx context.Context) GetSubaccountEntitlementsValuesMapOutput {
	return o
}

func (o GetSubaccountEntitlementsValuesMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]GetSubaccountEntitlementsValues] {
	return pulumix.Output[map[string]GetSubaccountEntitlementsValues]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountEntitlementsValuesMapOutput) MapIndex(k pulumi.StringInput) GetSubaccountEntitlementsValuesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) GetSubaccountEntitlementsValues {
		return vs[0].(map[string]GetSubaccountEntitlementsValues)[vs[1].(string)]
	}).(GetSubaccountEntitlementsValuesOutput)
}

type GetSubaccountEnvironmentInstancesValue struct {
	// The ID of the associated environment broker.
	BrokerId string `pulumi:"brokerId"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate  string              `pulumi:"createdDate"`
	CustomLabels map[string][]string `pulumi:"customLabels"`
	// The URL of the service dashboard, which is a web-based management user interface for the service instances.
	DashboardUrl string `pulumi:"dashboardUrl"`
	// The description of the environment instance.
	Description string `pulumi:"description"`
	// The type of the environment instance that is used.
	EnvironmentType string `pulumi:"environmentType"`
	// The ID of the environment instance.
	Id string `pulumi:"id"`
	// The Broker-specified key-value pairs that specify attributes of an environment instance.
	Labels string `pulumi:"labels"`
	// The name of the landscape within the logged-in region on which the environment instance is created.
	LandscapeLabel string `pulumi:"landscapeLabel"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified string `pulumi:"lastModified"`
	// The name of the environment instance.
	Name string `pulumi:"name"`
	// An identifier that represents the last operation. This ID is returned by the environment brokers.
	Operation string `pulumi:"operation"`
	// The configuration parameters for the environment instance.
	Parameters string `pulumi:"parameters"`
	// The ID of the service plan for the environment instance in the corresponding service broker's catalog.
	PlanId string `pulumi:"planId"`
	// The name of the service plan for the environment instance in the corresponding service broker's catalog.
	PlanName string `pulumi:"planName"`
	// The ID of the platform for the environment instance in the corresponding service broker's catalog.
	PlatformId string `pulumi:"platformId"`
	// The ID of the service for the environment instance in the corresponding service broker's catalog.
	ServiceId string `pulumi:"serviceId"`
	// The name of the service for the environment instance in the corresponding service broker's catalog.
	ServiceName string `pulumi:"serviceName"`
	// The current state of the environment instance. Possible values are:
	State    string `pulumi:"state"`
	TenantId string `pulumi:"tenantId"`
	Type     string `pulumi:"type"`
}

// GetSubaccountEnvironmentInstancesValueInput is an input type that accepts GetSubaccountEnvironmentInstancesValueArgs and GetSubaccountEnvironmentInstancesValueOutput values.
// You can construct a concrete instance of `GetSubaccountEnvironmentInstancesValueInput` via:
//
//	GetSubaccountEnvironmentInstancesValueArgs{...}
type GetSubaccountEnvironmentInstancesValueInput interface {
	pulumi.Input

	ToGetSubaccountEnvironmentInstancesValueOutput() GetSubaccountEnvironmentInstancesValueOutput
	ToGetSubaccountEnvironmentInstancesValueOutputWithContext(context.Context) GetSubaccountEnvironmentInstancesValueOutput
}

type GetSubaccountEnvironmentInstancesValueArgs struct {
	// The ID of the associated environment broker.
	BrokerId pulumi.StringInput `pulumi:"brokerId"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate  pulumi.StringInput         `pulumi:"createdDate"`
	CustomLabels pulumi.StringArrayMapInput `pulumi:"customLabels"`
	// The URL of the service dashboard, which is a web-based management user interface for the service instances.
	DashboardUrl pulumi.StringInput `pulumi:"dashboardUrl"`
	// The description of the environment instance.
	Description pulumi.StringInput `pulumi:"description"`
	// The type of the environment instance that is used.
	EnvironmentType pulumi.StringInput `pulumi:"environmentType"`
	// The ID of the environment instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The Broker-specified key-value pairs that specify attributes of an environment instance.
	Labels pulumi.StringInput `pulumi:"labels"`
	// The name of the landscape within the logged-in region on which the environment instance is created.
	LandscapeLabel pulumi.StringInput `pulumi:"landscapeLabel"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringInput `pulumi:"lastModified"`
	// The name of the environment instance.
	Name pulumi.StringInput `pulumi:"name"`
	// An identifier that represents the last operation. This ID is returned by the environment brokers.
	Operation pulumi.StringInput `pulumi:"operation"`
	// The configuration parameters for the environment instance.
	Parameters pulumi.StringInput `pulumi:"parameters"`
	// The ID of the service plan for the environment instance in the corresponding service broker's catalog.
	PlanId pulumi.StringInput `pulumi:"planId"`
	// The name of the service plan for the environment instance in the corresponding service broker's catalog.
	PlanName pulumi.StringInput `pulumi:"planName"`
	// The ID of the platform for the environment instance in the corresponding service broker's catalog.
	PlatformId pulumi.StringInput `pulumi:"platformId"`
	// The ID of the service for the environment instance in the corresponding service broker's catalog.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
	// The name of the service for the environment instance in the corresponding service broker's catalog.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The current state of the environment instance. Possible values are:
	State    pulumi.StringInput `pulumi:"state"`
	TenantId pulumi.StringInput `pulumi:"tenantId"`
	Type     pulumi.StringInput `pulumi:"type"`
}

func (GetSubaccountEnvironmentInstancesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountEnvironmentInstancesValue)(nil)).Elem()
}

func (i GetSubaccountEnvironmentInstancesValueArgs) ToGetSubaccountEnvironmentInstancesValueOutput() GetSubaccountEnvironmentInstancesValueOutput {
	return i.ToGetSubaccountEnvironmentInstancesValueOutputWithContext(context.Background())
}

func (i GetSubaccountEnvironmentInstancesValueArgs) ToGetSubaccountEnvironmentInstancesValueOutputWithContext(ctx context.Context) GetSubaccountEnvironmentInstancesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountEnvironmentInstancesValueOutput)
}

func (i GetSubaccountEnvironmentInstancesValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountEnvironmentInstancesValue] {
	return pulumix.Output[GetSubaccountEnvironmentInstancesValue]{
		OutputState: i.ToGetSubaccountEnvironmentInstancesValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountEnvironmentInstancesValueArrayInput is an input type that accepts GetSubaccountEnvironmentInstancesValueArray and GetSubaccountEnvironmentInstancesValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountEnvironmentInstancesValueArrayInput` via:
//
//	GetSubaccountEnvironmentInstancesValueArray{ GetSubaccountEnvironmentInstancesValueArgs{...} }
type GetSubaccountEnvironmentInstancesValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountEnvironmentInstancesValueArrayOutput() GetSubaccountEnvironmentInstancesValueArrayOutput
	ToGetSubaccountEnvironmentInstancesValueArrayOutputWithContext(context.Context) GetSubaccountEnvironmentInstancesValueArrayOutput
}

type GetSubaccountEnvironmentInstancesValueArray []GetSubaccountEnvironmentInstancesValueInput

func (GetSubaccountEnvironmentInstancesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountEnvironmentInstancesValue)(nil)).Elem()
}

func (i GetSubaccountEnvironmentInstancesValueArray) ToGetSubaccountEnvironmentInstancesValueArrayOutput() GetSubaccountEnvironmentInstancesValueArrayOutput {
	return i.ToGetSubaccountEnvironmentInstancesValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountEnvironmentInstancesValueArray) ToGetSubaccountEnvironmentInstancesValueArrayOutputWithContext(ctx context.Context) GetSubaccountEnvironmentInstancesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountEnvironmentInstancesValueArrayOutput)
}

func (i GetSubaccountEnvironmentInstancesValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountEnvironmentInstancesValue] {
	return pulumix.Output[[]GetSubaccountEnvironmentInstancesValue]{
		OutputState: i.ToGetSubaccountEnvironmentInstancesValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountEnvironmentInstancesValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountEnvironmentInstancesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountEnvironmentInstancesValue)(nil)).Elem()
}

func (o GetSubaccountEnvironmentInstancesValueOutput) ToGetSubaccountEnvironmentInstancesValueOutput() GetSubaccountEnvironmentInstancesValueOutput {
	return o
}

func (o GetSubaccountEnvironmentInstancesValueOutput) ToGetSubaccountEnvironmentInstancesValueOutputWithContext(ctx context.Context) GetSubaccountEnvironmentInstancesValueOutput {
	return o
}

func (o GetSubaccountEnvironmentInstancesValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountEnvironmentInstancesValue] {
	return pulumix.Output[GetSubaccountEnvironmentInstancesValue]{
		OutputState: o.OutputState,
	}
}

// The ID of the associated environment broker.
func (o GetSubaccountEnvironmentInstancesValueOutput) BrokerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.BrokerId }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountEnvironmentInstancesValueOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.CreatedDate }).(pulumi.StringOutput)
}

func (o GetSubaccountEnvironmentInstancesValueOutput) CustomLabels() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) map[string][]string { return v.CustomLabels }).(pulumi.StringArrayMapOutput)
}

// The URL of the service dashboard, which is a web-based management user interface for the service instances.
func (o GetSubaccountEnvironmentInstancesValueOutput) DashboardUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.DashboardUrl }).(pulumi.StringOutput)
}

// The description of the environment instance.
func (o GetSubaccountEnvironmentInstancesValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.Description }).(pulumi.StringOutput)
}

// The type of the environment instance that is used.
func (o GetSubaccountEnvironmentInstancesValueOutput) EnvironmentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.EnvironmentType }).(pulumi.StringOutput)
}

// The ID of the environment instance.
func (o GetSubaccountEnvironmentInstancesValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.Id }).(pulumi.StringOutput)
}

// The Broker-specified key-value pairs that specify attributes of an environment instance.
func (o GetSubaccountEnvironmentInstancesValueOutput) Labels() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.Labels }).(pulumi.StringOutput)
}

// The name of the landscape within the logged-in region on which the environment instance is created.
func (o GetSubaccountEnvironmentInstancesValueOutput) LandscapeLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.LandscapeLabel }).(pulumi.StringOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountEnvironmentInstancesValueOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the environment instance.
func (o GetSubaccountEnvironmentInstancesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.Name }).(pulumi.StringOutput)
}

// An identifier that represents the last operation. This ID is returned by the environment brokers.
func (o GetSubaccountEnvironmentInstancesValueOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.Operation }).(pulumi.StringOutput)
}

// The configuration parameters for the environment instance.
func (o GetSubaccountEnvironmentInstancesValueOutput) Parameters() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.Parameters }).(pulumi.StringOutput)
}

// The ID of the service plan for the environment instance in the corresponding service broker's catalog.
func (o GetSubaccountEnvironmentInstancesValueOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.PlanId }).(pulumi.StringOutput)
}

// The name of the service plan for the environment instance in the corresponding service broker's catalog.
func (o GetSubaccountEnvironmentInstancesValueOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.PlanName }).(pulumi.StringOutput)
}

// The ID of the platform for the environment instance in the corresponding service broker's catalog.
func (o GetSubaccountEnvironmentInstancesValueOutput) PlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.PlatformId }).(pulumi.StringOutput)
}

// The ID of the service for the environment instance in the corresponding service broker's catalog.
func (o GetSubaccountEnvironmentInstancesValueOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.ServiceId }).(pulumi.StringOutput)
}

// The name of the service for the environment instance in the corresponding service broker's catalog.
func (o GetSubaccountEnvironmentInstancesValueOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The current state of the environment instance. Possible values are:
func (o GetSubaccountEnvironmentInstancesValueOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.State }).(pulumi.StringOutput)
}

func (o GetSubaccountEnvironmentInstancesValueOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.TenantId }).(pulumi.StringOutput)
}

func (o GetSubaccountEnvironmentInstancesValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentInstancesValue) string { return v.Type }).(pulumi.StringOutput)
}

type GetSubaccountEnvironmentInstancesValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountEnvironmentInstancesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountEnvironmentInstancesValue)(nil)).Elem()
}

func (o GetSubaccountEnvironmentInstancesValueArrayOutput) ToGetSubaccountEnvironmentInstancesValueArrayOutput() GetSubaccountEnvironmentInstancesValueArrayOutput {
	return o
}

func (o GetSubaccountEnvironmentInstancesValueArrayOutput) ToGetSubaccountEnvironmentInstancesValueArrayOutputWithContext(ctx context.Context) GetSubaccountEnvironmentInstancesValueArrayOutput {
	return o
}

func (o GetSubaccountEnvironmentInstancesValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountEnvironmentInstancesValue] {
	return pulumix.Output[[]GetSubaccountEnvironmentInstancesValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountEnvironmentInstancesValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountEnvironmentInstancesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountEnvironmentInstancesValue {
		return vs[0].([]GetSubaccountEnvironmentInstancesValue)[vs[1].(int)]
	}).(GetSubaccountEnvironmentInstancesValueOutput)
}

type GetSubaccountEnvironmentsValue struct {
	// The availability level of the environment broker.
	AvailabilityLevel string `pulumi:"availabilityLevel"`
	// The description of the environment.
	Description string `pulumi:"description"`
	// The type of environment that is available (for example: cloudfoundry).
	EnvironmentType string `pulumi:"environmentType"`
	// The landscape label of the environment broker.
	LandscapeLabel string `pulumi:"landscapeLabel"`
	// The name of the service plan for the available environment.
	PlanName string `pulumi:"planName"`
	// Specifies if the consumer can change the plan of an existing instance of the environment.
	PlanUpdateable bool `pulumi:"planUpdateable"`
	// The create schema of the environment broker.
	SchemaCreate string `pulumi:"schemaCreate"`
	// The update schema of the environment broker.
	SchemaUpdate string `pulumi:"schemaUpdate"`
	// The short description of the service.
	ServiceDescription string `pulumi:"serviceDescription"`
	// The display name of the service.
	ServiceDisplayName string `pulumi:"serviceDisplayName"`
	// The name of the service offered in the catalog of the corresponding environment broker (for example: cloudfoundry).
	ServiceName string `pulumi:"serviceName"`
	// The technical key of the corresponding environment broker.
	TechnicalKey string `pulumi:"technicalKey"`
}

// GetSubaccountEnvironmentsValueInput is an input type that accepts GetSubaccountEnvironmentsValueArgs and GetSubaccountEnvironmentsValueOutput values.
// You can construct a concrete instance of `GetSubaccountEnvironmentsValueInput` via:
//
//	GetSubaccountEnvironmentsValueArgs{...}
type GetSubaccountEnvironmentsValueInput interface {
	pulumi.Input

	ToGetSubaccountEnvironmentsValueOutput() GetSubaccountEnvironmentsValueOutput
	ToGetSubaccountEnvironmentsValueOutputWithContext(context.Context) GetSubaccountEnvironmentsValueOutput
}

type GetSubaccountEnvironmentsValueArgs struct {
	// The availability level of the environment broker.
	AvailabilityLevel pulumi.StringInput `pulumi:"availabilityLevel"`
	// The description of the environment.
	Description pulumi.StringInput `pulumi:"description"`
	// The type of environment that is available (for example: cloudfoundry).
	EnvironmentType pulumi.StringInput `pulumi:"environmentType"`
	// The landscape label of the environment broker.
	LandscapeLabel pulumi.StringInput `pulumi:"landscapeLabel"`
	// The name of the service plan for the available environment.
	PlanName pulumi.StringInput `pulumi:"planName"`
	// Specifies if the consumer can change the plan of an existing instance of the environment.
	PlanUpdateable pulumi.BoolInput `pulumi:"planUpdateable"`
	// The create schema of the environment broker.
	SchemaCreate pulumi.StringInput `pulumi:"schemaCreate"`
	// The update schema of the environment broker.
	SchemaUpdate pulumi.StringInput `pulumi:"schemaUpdate"`
	// The short description of the service.
	ServiceDescription pulumi.StringInput `pulumi:"serviceDescription"`
	// The display name of the service.
	ServiceDisplayName pulumi.StringInput `pulumi:"serviceDisplayName"`
	// The name of the service offered in the catalog of the corresponding environment broker (for example: cloudfoundry).
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	// The technical key of the corresponding environment broker.
	TechnicalKey pulumi.StringInput `pulumi:"technicalKey"`
}

func (GetSubaccountEnvironmentsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountEnvironmentsValue)(nil)).Elem()
}

func (i GetSubaccountEnvironmentsValueArgs) ToGetSubaccountEnvironmentsValueOutput() GetSubaccountEnvironmentsValueOutput {
	return i.ToGetSubaccountEnvironmentsValueOutputWithContext(context.Background())
}

func (i GetSubaccountEnvironmentsValueArgs) ToGetSubaccountEnvironmentsValueOutputWithContext(ctx context.Context) GetSubaccountEnvironmentsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountEnvironmentsValueOutput)
}

func (i GetSubaccountEnvironmentsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountEnvironmentsValue] {
	return pulumix.Output[GetSubaccountEnvironmentsValue]{
		OutputState: i.ToGetSubaccountEnvironmentsValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountEnvironmentsValueArrayInput is an input type that accepts GetSubaccountEnvironmentsValueArray and GetSubaccountEnvironmentsValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountEnvironmentsValueArrayInput` via:
//
//	GetSubaccountEnvironmentsValueArray{ GetSubaccountEnvironmentsValueArgs{...} }
type GetSubaccountEnvironmentsValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountEnvironmentsValueArrayOutput() GetSubaccountEnvironmentsValueArrayOutput
	ToGetSubaccountEnvironmentsValueArrayOutputWithContext(context.Context) GetSubaccountEnvironmentsValueArrayOutput
}

type GetSubaccountEnvironmentsValueArray []GetSubaccountEnvironmentsValueInput

func (GetSubaccountEnvironmentsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountEnvironmentsValue)(nil)).Elem()
}

func (i GetSubaccountEnvironmentsValueArray) ToGetSubaccountEnvironmentsValueArrayOutput() GetSubaccountEnvironmentsValueArrayOutput {
	return i.ToGetSubaccountEnvironmentsValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountEnvironmentsValueArray) ToGetSubaccountEnvironmentsValueArrayOutputWithContext(ctx context.Context) GetSubaccountEnvironmentsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountEnvironmentsValueArrayOutput)
}

func (i GetSubaccountEnvironmentsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountEnvironmentsValue] {
	return pulumix.Output[[]GetSubaccountEnvironmentsValue]{
		OutputState: i.ToGetSubaccountEnvironmentsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountEnvironmentsValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountEnvironmentsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountEnvironmentsValue)(nil)).Elem()
}

func (o GetSubaccountEnvironmentsValueOutput) ToGetSubaccountEnvironmentsValueOutput() GetSubaccountEnvironmentsValueOutput {
	return o
}

func (o GetSubaccountEnvironmentsValueOutput) ToGetSubaccountEnvironmentsValueOutputWithContext(ctx context.Context) GetSubaccountEnvironmentsValueOutput {
	return o
}

func (o GetSubaccountEnvironmentsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountEnvironmentsValue] {
	return pulumix.Output[GetSubaccountEnvironmentsValue]{
		OutputState: o.OutputState,
	}
}

// The availability level of the environment broker.
func (o GetSubaccountEnvironmentsValueOutput) AvailabilityLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.AvailabilityLevel }).(pulumi.StringOutput)
}

// The description of the environment.
func (o GetSubaccountEnvironmentsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.Description }).(pulumi.StringOutput)
}

// The type of environment that is available (for example: cloudfoundry).
func (o GetSubaccountEnvironmentsValueOutput) EnvironmentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.EnvironmentType }).(pulumi.StringOutput)
}

// The landscape label of the environment broker.
func (o GetSubaccountEnvironmentsValueOutput) LandscapeLabel() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.LandscapeLabel }).(pulumi.StringOutput)
}

// The name of the service plan for the available environment.
func (o GetSubaccountEnvironmentsValueOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.PlanName }).(pulumi.StringOutput)
}

// Specifies if the consumer can change the plan of an existing instance of the environment.
func (o GetSubaccountEnvironmentsValueOutput) PlanUpdateable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) bool { return v.PlanUpdateable }).(pulumi.BoolOutput)
}

// The create schema of the environment broker.
func (o GetSubaccountEnvironmentsValueOutput) SchemaCreate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.SchemaCreate }).(pulumi.StringOutput)
}

// The update schema of the environment broker.
func (o GetSubaccountEnvironmentsValueOutput) SchemaUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.SchemaUpdate }).(pulumi.StringOutput)
}

// The short description of the service.
func (o GetSubaccountEnvironmentsValueOutput) ServiceDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.ServiceDescription }).(pulumi.StringOutput)
}

// The display name of the service.
func (o GetSubaccountEnvironmentsValueOutput) ServiceDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.ServiceDisplayName }).(pulumi.StringOutput)
}

// The name of the service offered in the catalog of the corresponding environment broker (for example: cloudfoundry).
func (o GetSubaccountEnvironmentsValueOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.ServiceName }).(pulumi.StringOutput)
}

// The technical key of the corresponding environment broker.
func (o GetSubaccountEnvironmentsValueOutput) TechnicalKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountEnvironmentsValue) string { return v.TechnicalKey }).(pulumi.StringOutput)
}

type GetSubaccountEnvironmentsValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountEnvironmentsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountEnvironmentsValue)(nil)).Elem()
}

func (o GetSubaccountEnvironmentsValueArrayOutput) ToGetSubaccountEnvironmentsValueArrayOutput() GetSubaccountEnvironmentsValueArrayOutput {
	return o
}

func (o GetSubaccountEnvironmentsValueArrayOutput) ToGetSubaccountEnvironmentsValueArrayOutputWithContext(ctx context.Context) GetSubaccountEnvironmentsValueArrayOutput {
	return o
}

func (o GetSubaccountEnvironmentsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountEnvironmentsValue] {
	return pulumix.Output[[]GetSubaccountEnvironmentsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountEnvironmentsValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountEnvironmentsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountEnvironmentsValue {
		return vs[0].([]GetSubaccountEnvironmentsValue)[vs[1].(int)]
	}).(GetSubaccountEnvironmentsValueOutput)
}

type GetSubaccountRoleCollectionRole struct {
	// The description of the referenced role
	Description string `pulumi:"description"`
	// The name of the referenced role.
	Name string `pulumi:"name"`
	// The name of the referenced template app id
	RoleTemplateAppId string `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
}

// GetSubaccountRoleCollectionRoleInput is an input type that accepts GetSubaccountRoleCollectionRoleArgs and GetSubaccountRoleCollectionRoleOutput values.
// You can construct a concrete instance of `GetSubaccountRoleCollectionRoleInput` via:
//
//	GetSubaccountRoleCollectionRoleArgs{...}
type GetSubaccountRoleCollectionRoleInput interface {
	pulumi.Input

	ToGetSubaccountRoleCollectionRoleOutput() GetSubaccountRoleCollectionRoleOutput
	ToGetSubaccountRoleCollectionRoleOutputWithContext(context.Context) GetSubaccountRoleCollectionRoleOutput
}

type GetSubaccountRoleCollectionRoleArgs struct {
	// The description of the referenced role
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the referenced role.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the referenced template app id
	RoleTemplateAppId pulumi.StringInput `pulumi:"roleTemplateAppId"`
	// The name of the referenced role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (GetSubaccountRoleCollectionRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRoleCollectionRole)(nil)).Elem()
}

func (i GetSubaccountRoleCollectionRoleArgs) ToGetSubaccountRoleCollectionRoleOutput() GetSubaccountRoleCollectionRoleOutput {
	return i.ToGetSubaccountRoleCollectionRoleOutputWithContext(context.Background())
}

func (i GetSubaccountRoleCollectionRoleArgs) ToGetSubaccountRoleCollectionRoleOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRoleCollectionRoleOutput)
}

func (i GetSubaccountRoleCollectionRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRoleCollectionRole] {
	return pulumix.Output[GetSubaccountRoleCollectionRole]{
		OutputState: i.ToGetSubaccountRoleCollectionRoleOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountRoleCollectionRoleArrayInput is an input type that accepts GetSubaccountRoleCollectionRoleArray and GetSubaccountRoleCollectionRoleArrayOutput values.
// You can construct a concrete instance of `GetSubaccountRoleCollectionRoleArrayInput` via:
//
//	GetSubaccountRoleCollectionRoleArray{ GetSubaccountRoleCollectionRoleArgs{...} }
type GetSubaccountRoleCollectionRoleArrayInput interface {
	pulumi.Input

	ToGetSubaccountRoleCollectionRoleArrayOutput() GetSubaccountRoleCollectionRoleArrayOutput
	ToGetSubaccountRoleCollectionRoleArrayOutputWithContext(context.Context) GetSubaccountRoleCollectionRoleArrayOutput
}

type GetSubaccountRoleCollectionRoleArray []GetSubaccountRoleCollectionRoleInput

func (GetSubaccountRoleCollectionRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRoleCollectionRole)(nil)).Elem()
}

func (i GetSubaccountRoleCollectionRoleArray) ToGetSubaccountRoleCollectionRoleArrayOutput() GetSubaccountRoleCollectionRoleArrayOutput {
	return i.ToGetSubaccountRoleCollectionRoleArrayOutputWithContext(context.Background())
}

func (i GetSubaccountRoleCollectionRoleArray) ToGetSubaccountRoleCollectionRoleArrayOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRoleCollectionRoleArrayOutput)
}

func (i GetSubaccountRoleCollectionRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRoleCollectionRole] {
	return pulumix.Output[[]GetSubaccountRoleCollectionRole]{
		OutputState: i.ToGetSubaccountRoleCollectionRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountRoleCollectionRoleOutput struct{ *pulumi.OutputState }

func (GetSubaccountRoleCollectionRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRoleCollectionRole)(nil)).Elem()
}

func (o GetSubaccountRoleCollectionRoleOutput) ToGetSubaccountRoleCollectionRoleOutput() GetSubaccountRoleCollectionRoleOutput {
	return o
}

func (o GetSubaccountRoleCollectionRoleOutput) ToGetSubaccountRoleCollectionRoleOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionRoleOutput {
	return o
}

func (o GetSubaccountRoleCollectionRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRoleCollectionRole] {
	return pulumix.Output[GetSubaccountRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

// The description of the referenced role
func (o GetSubaccountRoleCollectionRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionRole) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the referenced role.
func (o GetSubaccountRoleCollectionRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionRole) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the referenced template app id
func (o GetSubaccountRoleCollectionRoleOutput) RoleTemplateAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionRole) string { return v.RoleTemplateAppId }).(pulumi.StringOutput)
}

// The name of the referenced role template.
func (o GetSubaccountRoleCollectionRoleOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionRole) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

type GetSubaccountRoleCollectionRoleArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountRoleCollectionRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRoleCollectionRole)(nil)).Elem()
}

func (o GetSubaccountRoleCollectionRoleArrayOutput) ToGetSubaccountRoleCollectionRoleArrayOutput() GetSubaccountRoleCollectionRoleArrayOutput {
	return o
}

func (o GetSubaccountRoleCollectionRoleArrayOutput) ToGetSubaccountRoleCollectionRoleArrayOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionRoleArrayOutput {
	return o
}

func (o GetSubaccountRoleCollectionRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRoleCollectionRole] {
	return pulumix.Output[[]GetSubaccountRoleCollectionRole]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountRoleCollectionRoleArrayOutput) Index(i pulumi.IntInput) GetSubaccountRoleCollectionRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountRoleCollectionRole {
		return vs[0].([]GetSubaccountRoleCollectionRole)[vs[1].(int)]
	}).(GetSubaccountRoleCollectionRoleOutput)
}

type GetSubaccountRoleCollectionsValue struct {
	// The description of the role collection.
	Description string `pulumi:"description"`
	// The name of the role collection.
	Name string `pulumi:"name"`
	// Shows whether the role collection is read-only.
	ReadOnly bool                                    `pulumi:"readOnly"`
	Roles    []GetSubaccountRoleCollectionsValueRole `pulumi:"roles"`
}

// GetSubaccountRoleCollectionsValueInput is an input type that accepts GetSubaccountRoleCollectionsValueArgs and GetSubaccountRoleCollectionsValueOutput values.
// You can construct a concrete instance of `GetSubaccountRoleCollectionsValueInput` via:
//
//	GetSubaccountRoleCollectionsValueArgs{...}
type GetSubaccountRoleCollectionsValueInput interface {
	pulumi.Input

	ToGetSubaccountRoleCollectionsValueOutput() GetSubaccountRoleCollectionsValueOutput
	ToGetSubaccountRoleCollectionsValueOutputWithContext(context.Context) GetSubaccountRoleCollectionsValueOutput
}

type GetSubaccountRoleCollectionsValueArgs struct {
	// The description of the role collection.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the role collection.
	Name pulumi.StringInput `pulumi:"name"`
	// Shows whether the role collection is read-only.
	ReadOnly pulumi.BoolInput                                `pulumi:"readOnly"`
	Roles    GetSubaccountRoleCollectionsValueRoleArrayInput `pulumi:"roles"`
}

func (GetSubaccountRoleCollectionsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRoleCollectionsValue)(nil)).Elem()
}

func (i GetSubaccountRoleCollectionsValueArgs) ToGetSubaccountRoleCollectionsValueOutput() GetSubaccountRoleCollectionsValueOutput {
	return i.ToGetSubaccountRoleCollectionsValueOutputWithContext(context.Background())
}

func (i GetSubaccountRoleCollectionsValueArgs) ToGetSubaccountRoleCollectionsValueOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRoleCollectionsValueOutput)
}

func (i GetSubaccountRoleCollectionsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRoleCollectionsValue] {
	return pulumix.Output[GetSubaccountRoleCollectionsValue]{
		OutputState: i.ToGetSubaccountRoleCollectionsValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountRoleCollectionsValueArrayInput is an input type that accepts GetSubaccountRoleCollectionsValueArray and GetSubaccountRoleCollectionsValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountRoleCollectionsValueArrayInput` via:
//
//	GetSubaccountRoleCollectionsValueArray{ GetSubaccountRoleCollectionsValueArgs{...} }
type GetSubaccountRoleCollectionsValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountRoleCollectionsValueArrayOutput() GetSubaccountRoleCollectionsValueArrayOutput
	ToGetSubaccountRoleCollectionsValueArrayOutputWithContext(context.Context) GetSubaccountRoleCollectionsValueArrayOutput
}

type GetSubaccountRoleCollectionsValueArray []GetSubaccountRoleCollectionsValueInput

func (GetSubaccountRoleCollectionsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRoleCollectionsValue)(nil)).Elem()
}

func (i GetSubaccountRoleCollectionsValueArray) ToGetSubaccountRoleCollectionsValueArrayOutput() GetSubaccountRoleCollectionsValueArrayOutput {
	return i.ToGetSubaccountRoleCollectionsValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountRoleCollectionsValueArray) ToGetSubaccountRoleCollectionsValueArrayOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRoleCollectionsValueArrayOutput)
}

func (i GetSubaccountRoleCollectionsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRoleCollectionsValue] {
	return pulumix.Output[[]GetSubaccountRoleCollectionsValue]{
		OutputState: i.ToGetSubaccountRoleCollectionsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountRoleCollectionsValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountRoleCollectionsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRoleCollectionsValue)(nil)).Elem()
}

func (o GetSubaccountRoleCollectionsValueOutput) ToGetSubaccountRoleCollectionsValueOutput() GetSubaccountRoleCollectionsValueOutput {
	return o
}

func (o GetSubaccountRoleCollectionsValueOutput) ToGetSubaccountRoleCollectionsValueOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionsValueOutput {
	return o
}

func (o GetSubaccountRoleCollectionsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRoleCollectionsValue] {
	return pulumix.Output[GetSubaccountRoleCollectionsValue]{
		OutputState: o.OutputState,
	}
}

// The description of the role collection.
func (o GetSubaccountRoleCollectionsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionsValue) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the role collection.
func (o GetSubaccountRoleCollectionsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionsValue) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the role collection is read-only.
func (o GetSubaccountRoleCollectionsValueOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionsValue) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

func (o GetSubaccountRoleCollectionsValueOutput) Roles() GetSubaccountRoleCollectionsValueRoleArrayOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionsValue) []GetSubaccountRoleCollectionsValueRole { return v.Roles }).(GetSubaccountRoleCollectionsValueRoleArrayOutput)
}

type GetSubaccountRoleCollectionsValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountRoleCollectionsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRoleCollectionsValue)(nil)).Elem()
}

func (o GetSubaccountRoleCollectionsValueArrayOutput) ToGetSubaccountRoleCollectionsValueArrayOutput() GetSubaccountRoleCollectionsValueArrayOutput {
	return o
}

func (o GetSubaccountRoleCollectionsValueArrayOutput) ToGetSubaccountRoleCollectionsValueArrayOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionsValueArrayOutput {
	return o
}

func (o GetSubaccountRoleCollectionsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRoleCollectionsValue] {
	return pulumix.Output[[]GetSubaccountRoleCollectionsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountRoleCollectionsValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountRoleCollectionsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountRoleCollectionsValue {
		return vs[0].([]GetSubaccountRoleCollectionsValue)[vs[1].(int)]
	}).(GetSubaccountRoleCollectionsValueOutput)
}

type GetSubaccountRoleCollectionsValueRole struct {
	Description       string `pulumi:"description"`
	Name              string `pulumi:"name"`
	RoleTemplateAppId string `pulumi:"roleTemplateAppId"`
	RoleTemplateName  string `pulumi:"roleTemplateName"`
}

// GetSubaccountRoleCollectionsValueRoleInput is an input type that accepts GetSubaccountRoleCollectionsValueRoleArgs and GetSubaccountRoleCollectionsValueRoleOutput values.
// You can construct a concrete instance of `GetSubaccountRoleCollectionsValueRoleInput` via:
//
//	GetSubaccountRoleCollectionsValueRoleArgs{...}
type GetSubaccountRoleCollectionsValueRoleInput interface {
	pulumi.Input

	ToGetSubaccountRoleCollectionsValueRoleOutput() GetSubaccountRoleCollectionsValueRoleOutput
	ToGetSubaccountRoleCollectionsValueRoleOutputWithContext(context.Context) GetSubaccountRoleCollectionsValueRoleOutput
}

type GetSubaccountRoleCollectionsValueRoleArgs struct {
	Description       pulumi.StringInput `pulumi:"description"`
	Name              pulumi.StringInput `pulumi:"name"`
	RoleTemplateAppId pulumi.StringInput `pulumi:"roleTemplateAppId"`
	RoleTemplateName  pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (GetSubaccountRoleCollectionsValueRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRoleCollectionsValueRole)(nil)).Elem()
}

func (i GetSubaccountRoleCollectionsValueRoleArgs) ToGetSubaccountRoleCollectionsValueRoleOutput() GetSubaccountRoleCollectionsValueRoleOutput {
	return i.ToGetSubaccountRoleCollectionsValueRoleOutputWithContext(context.Background())
}

func (i GetSubaccountRoleCollectionsValueRoleArgs) ToGetSubaccountRoleCollectionsValueRoleOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionsValueRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRoleCollectionsValueRoleOutput)
}

func (i GetSubaccountRoleCollectionsValueRoleArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRoleCollectionsValueRole] {
	return pulumix.Output[GetSubaccountRoleCollectionsValueRole]{
		OutputState: i.ToGetSubaccountRoleCollectionsValueRoleOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountRoleCollectionsValueRoleArrayInput is an input type that accepts GetSubaccountRoleCollectionsValueRoleArray and GetSubaccountRoleCollectionsValueRoleArrayOutput values.
// You can construct a concrete instance of `GetSubaccountRoleCollectionsValueRoleArrayInput` via:
//
//	GetSubaccountRoleCollectionsValueRoleArray{ GetSubaccountRoleCollectionsValueRoleArgs{...} }
type GetSubaccountRoleCollectionsValueRoleArrayInput interface {
	pulumi.Input

	ToGetSubaccountRoleCollectionsValueRoleArrayOutput() GetSubaccountRoleCollectionsValueRoleArrayOutput
	ToGetSubaccountRoleCollectionsValueRoleArrayOutputWithContext(context.Context) GetSubaccountRoleCollectionsValueRoleArrayOutput
}

type GetSubaccountRoleCollectionsValueRoleArray []GetSubaccountRoleCollectionsValueRoleInput

func (GetSubaccountRoleCollectionsValueRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRoleCollectionsValueRole)(nil)).Elem()
}

func (i GetSubaccountRoleCollectionsValueRoleArray) ToGetSubaccountRoleCollectionsValueRoleArrayOutput() GetSubaccountRoleCollectionsValueRoleArrayOutput {
	return i.ToGetSubaccountRoleCollectionsValueRoleArrayOutputWithContext(context.Background())
}

func (i GetSubaccountRoleCollectionsValueRoleArray) ToGetSubaccountRoleCollectionsValueRoleArrayOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionsValueRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRoleCollectionsValueRoleArrayOutput)
}

func (i GetSubaccountRoleCollectionsValueRoleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRoleCollectionsValueRole] {
	return pulumix.Output[[]GetSubaccountRoleCollectionsValueRole]{
		OutputState: i.ToGetSubaccountRoleCollectionsValueRoleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountRoleCollectionsValueRoleOutput struct{ *pulumi.OutputState }

func (GetSubaccountRoleCollectionsValueRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRoleCollectionsValueRole)(nil)).Elem()
}

func (o GetSubaccountRoleCollectionsValueRoleOutput) ToGetSubaccountRoleCollectionsValueRoleOutput() GetSubaccountRoleCollectionsValueRoleOutput {
	return o
}

func (o GetSubaccountRoleCollectionsValueRoleOutput) ToGetSubaccountRoleCollectionsValueRoleOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionsValueRoleOutput {
	return o
}

func (o GetSubaccountRoleCollectionsValueRoleOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRoleCollectionsValueRole] {
	return pulumix.Output[GetSubaccountRoleCollectionsValueRole]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountRoleCollectionsValueRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionsValueRole) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSubaccountRoleCollectionsValueRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionsValueRole) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSubaccountRoleCollectionsValueRoleOutput) RoleTemplateAppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionsValueRole) string { return v.RoleTemplateAppId }).(pulumi.StringOutput)
}

func (o GetSubaccountRoleCollectionsValueRoleOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleCollectionsValueRole) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

type GetSubaccountRoleCollectionsValueRoleArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountRoleCollectionsValueRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRoleCollectionsValueRole)(nil)).Elem()
}

func (o GetSubaccountRoleCollectionsValueRoleArrayOutput) ToGetSubaccountRoleCollectionsValueRoleArrayOutput() GetSubaccountRoleCollectionsValueRoleArrayOutput {
	return o
}

func (o GetSubaccountRoleCollectionsValueRoleArrayOutput) ToGetSubaccountRoleCollectionsValueRoleArrayOutputWithContext(ctx context.Context) GetSubaccountRoleCollectionsValueRoleArrayOutput {
	return o
}

func (o GetSubaccountRoleCollectionsValueRoleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRoleCollectionsValueRole] {
	return pulumix.Output[[]GetSubaccountRoleCollectionsValueRole]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountRoleCollectionsValueRoleArrayOutput) Index(i pulumi.IntInput) GetSubaccountRoleCollectionsValueRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountRoleCollectionsValueRole {
		return vs[0].([]GetSubaccountRoleCollectionsValueRole)[vs[1].(int)]
	}).(GetSubaccountRoleCollectionsValueRoleOutput)
}

type GetSubaccountRoleScope struct {
	CustomGrantAsAuthorityToApps []string `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            []string `pulumi:"customGrantedApps"`
	// The description of the scope.
	Description            string   `pulumi:"description"`
	GrantAsAuthorityToApps []string `pulumi:"grantAsAuthorityToApps"`
	GrantedApps            []string `pulumi:"grantedApps"`
	// The name of the scope.
	Name string `pulumi:"name"`
}

// GetSubaccountRoleScopeInput is an input type that accepts GetSubaccountRoleScopeArgs and GetSubaccountRoleScopeOutput values.
// You can construct a concrete instance of `GetSubaccountRoleScopeInput` via:
//
//	GetSubaccountRoleScopeArgs{...}
type GetSubaccountRoleScopeInput interface {
	pulumi.Input

	ToGetSubaccountRoleScopeOutput() GetSubaccountRoleScopeOutput
	ToGetSubaccountRoleScopeOutputWithContext(context.Context) GetSubaccountRoleScopeOutput
}

type GetSubaccountRoleScopeArgs struct {
	CustomGrantAsAuthorityToApps pulumi.StringArrayInput `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            pulumi.StringArrayInput `pulumi:"customGrantedApps"`
	// The description of the scope.
	Description            pulumi.StringInput      `pulumi:"description"`
	GrantAsAuthorityToApps pulumi.StringArrayInput `pulumi:"grantAsAuthorityToApps"`
	GrantedApps            pulumi.StringArrayInput `pulumi:"grantedApps"`
	// The name of the scope.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetSubaccountRoleScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRoleScope)(nil)).Elem()
}

func (i GetSubaccountRoleScopeArgs) ToGetSubaccountRoleScopeOutput() GetSubaccountRoleScopeOutput {
	return i.ToGetSubaccountRoleScopeOutputWithContext(context.Background())
}

func (i GetSubaccountRoleScopeArgs) ToGetSubaccountRoleScopeOutputWithContext(ctx context.Context) GetSubaccountRoleScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRoleScopeOutput)
}

func (i GetSubaccountRoleScopeArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRoleScope] {
	return pulumix.Output[GetSubaccountRoleScope]{
		OutputState: i.ToGetSubaccountRoleScopeOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountRoleScopeArrayInput is an input type that accepts GetSubaccountRoleScopeArray and GetSubaccountRoleScopeArrayOutput values.
// You can construct a concrete instance of `GetSubaccountRoleScopeArrayInput` via:
//
//	GetSubaccountRoleScopeArray{ GetSubaccountRoleScopeArgs{...} }
type GetSubaccountRoleScopeArrayInput interface {
	pulumi.Input

	ToGetSubaccountRoleScopeArrayOutput() GetSubaccountRoleScopeArrayOutput
	ToGetSubaccountRoleScopeArrayOutputWithContext(context.Context) GetSubaccountRoleScopeArrayOutput
}

type GetSubaccountRoleScopeArray []GetSubaccountRoleScopeInput

func (GetSubaccountRoleScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRoleScope)(nil)).Elem()
}

func (i GetSubaccountRoleScopeArray) ToGetSubaccountRoleScopeArrayOutput() GetSubaccountRoleScopeArrayOutput {
	return i.ToGetSubaccountRoleScopeArrayOutputWithContext(context.Background())
}

func (i GetSubaccountRoleScopeArray) ToGetSubaccountRoleScopeArrayOutputWithContext(ctx context.Context) GetSubaccountRoleScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRoleScopeArrayOutput)
}

func (i GetSubaccountRoleScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRoleScope] {
	return pulumix.Output[[]GetSubaccountRoleScope]{
		OutputState: i.ToGetSubaccountRoleScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountRoleScopeOutput struct{ *pulumi.OutputState }

func (GetSubaccountRoleScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRoleScope)(nil)).Elem()
}

func (o GetSubaccountRoleScopeOutput) ToGetSubaccountRoleScopeOutput() GetSubaccountRoleScopeOutput {
	return o
}

func (o GetSubaccountRoleScopeOutput) ToGetSubaccountRoleScopeOutputWithContext(ctx context.Context) GetSubaccountRoleScopeOutput {
	return o
}

func (o GetSubaccountRoleScopeOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRoleScope] {
	return pulumix.Output[GetSubaccountRoleScope]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountRoleScopeOutput) CustomGrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountRoleScope) []string { return v.CustomGrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountRoleScopeOutput) CustomGrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountRoleScope) []string { return v.CustomGrantedApps }).(pulumi.StringArrayOutput)
}

// The description of the scope.
func (o GetSubaccountRoleScopeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleScope) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSubaccountRoleScopeOutput) GrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountRoleScope) []string { return v.GrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountRoleScopeOutput) GrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountRoleScope) []string { return v.GrantedApps }).(pulumi.StringArrayOutput)
}

// The name of the scope.
func (o GetSubaccountRoleScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRoleScope) string { return v.Name }).(pulumi.StringOutput)
}

type GetSubaccountRoleScopeArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountRoleScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRoleScope)(nil)).Elem()
}

func (o GetSubaccountRoleScopeArrayOutput) ToGetSubaccountRoleScopeArrayOutput() GetSubaccountRoleScopeArrayOutput {
	return o
}

func (o GetSubaccountRoleScopeArrayOutput) ToGetSubaccountRoleScopeArrayOutputWithContext(ctx context.Context) GetSubaccountRoleScopeArrayOutput {
	return o
}

func (o GetSubaccountRoleScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRoleScope] {
	return pulumix.Output[[]GetSubaccountRoleScope]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountRoleScopeArrayOutput) Index(i pulumi.IntInput) GetSubaccountRoleScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountRoleScope {
		return vs[0].([]GetSubaccountRoleScope)[vs[1].(int)]
	}).(GetSubaccountRoleScopeOutput)
}

type GetSubaccountRolesValue struct {
	// The id of the application that provides the role template and the role.
	AppId string `pulumi:"appId"`
	// The name of the application that provides the role template and the role.
	AppName string `pulumi:"appName"`
	// The description of the role.
	Description string `pulumi:"description"`
	// The name of the role.
	Name string `pulumi:"name"`
	// Shows whether the role can be modified or not.
	ReadOnly bool `pulumi:"readOnly"`
	// The name of the role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
	// The scopes available with this role.
	Scopes []GetSubaccountRolesValueScope `pulumi:"scopes"`
}

// GetSubaccountRolesValueInput is an input type that accepts GetSubaccountRolesValueArgs and GetSubaccountRolesValueOutput values.
// You can construct a concrete instance of `GetSubaccountRolesValueInput` via:
//
//	GetSubaccountRolesValueArgs{...}
type GetSubaccountRolesValueInput interface {
	pulumi.Input

	ToGetSubaccountRolesValueOutput() GetSubaccountRolesValueOutput
	ToGetSubaccountRolesValueOutputWithContext(context.Context) GetSubaccountRolesValueOutput
}

type GetSubaccountRolesValueArgs struct {
	// The id of the application that provides the role template and the role.
	AppId pulumi.StringInput `pulumi:"appId"`
	// The name of the application that provides the role template and the role.
	AppName pulumi.StringInput `pulumi:"appName"`
	// The description of the role.
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the role.
	Name pulumi.StringInput `pulumi:"name"`
	// Shows whether the role can be modified or not.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`
	// The name of the role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
	// The scopes available with this role.
	Scopes GetSubaccountRolesValueScopeArrayInput `pulumi:"scopes"`
}

func (GetSubaccountRolesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRolesValue)(nil)).Elem()
}

func (i GetSubaccountRolesValueArgs) ToGetSubaccountRolesValueOutput() GetSubaccountRolesValueOutput {
	return i.ToGetSubaccountRolesValueOutputWithContext(context.Background())
}

func (i GetSubaccountRolesValueArgs) ToGetSubaccountRolesValueOutputWithContext(ctx context.Context) GetSubaccountRolesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRolesValueOutput)
}

func (i GetSubaccountRolesValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRolesValue] {
	return pulumix.Output[GetSubaccountRolesValue]{
		OutputState: i.ToGetSubaccountRolesValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountRolesValueArrayInput is an input type that accepts GetSubaccountRolesValueArray and GetSubaccountRolesValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountRolesValueArrayInput` via:
//
//	GetSubaccountRolesValueArray{ GetSubaccountRolesValueArgs{...} }
type GetSubaccountRolesValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountRolesValueArrayOutput() GetSubaccountRolesValueArrayOutput
	ToGetSubaccountRolesValueArrayOutputWithContext(context.Context) GetSubaccountRolesValueArrayOutput
}

type GetSubaccountRolesValueArray []GetSubaccountRolesValueInput

func (GetSubaccountRolesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRolesValue)(nil)).Elem()
}

func (i GetSubaccountRolesValueArray) ToGetSubaccountRolesValueArrayOutput() GetSubaccountRolesValueArrayOutput {
	return i.ToGetSubaccountRolesValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountRolesValueArray) ToGetSubaccountRolesValueArrayOutputWithContext(ctx context.Context) GetSubaccountRolesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRolesValueArrayOutput)
}

func (i GetSubaccountRolesValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRolesValue] {
	return pulumix.Output[[]GetSubaccountRolesValue]{
		OutputState: i.ToGetSubaccountRolesValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountRolesValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountRolesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRolesValue)(nil)).Elem()
}

func (o GetSubaccountRolesValueOutput) ToGetSubaccountRolesValueOutput() GetSubaccountRolesValueOutput {
	return o
}

func (o GetSubaccountRolesValueOutput) ToGetSubaccountRolesValueOutputWithContext(ctx context.Context) GetSubaccountRolesValueOutput {
	return o
}

func (o GetSubaccountRolesValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRolesValue] {
	return pulumix.Output[GetSubaccountRolesValue]{
		OutputState: o.OutputState,
	}
}

// The id of the application that provides the role template and the role.
func (o GetSubaccountRolesValueOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRolesValue) string { return v.AppId }).(pulumi.StringOutput)
}

// The name of the application that provides the role template and the role.
func (o GetSubaccountRolesValueOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRolesValue) string { return v.AppName }).(pulumi.StringOutput)
}

// The description of the role.
func (o GetSubaccountRolesValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRolesValue) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the role.
func (o GetSubaccountRolesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRolesValue) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the role can be modified or not.
func (o GetSubaccountRolesValueOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountRolesValue) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

// The name of the role template.
func (o GetSubaccountRolesValueOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRolesValue) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

// The scopes available with this role.
func (o GetSubaccountRolesValueOutput) Scopes() GetSubaccountRolesValueScopeArrayOutput {
	return o.ApplyT(func(v GetSubaccountRolesValue) []GetSubaccountRolesValueScope { return v.Scopes }).(GetSubaccountRolesValueScopeArrayOutput)
}

type GetSubaccountRolesValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountRolesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRolesValue)(nil)).Elem()
}

func (o GetSubaccountRolesValueArrayOutput) ToGetSubaccountRolesValueArrayOutput() GetSubaccountRolesValueArrayOutput {
	return o
}

func (o GetSubaccountRolesValueArrayOutput) ToGetSubaccountRolesValueArrayOutputWithContext(ctx context.Context) GetSubaccountRolesValueArrayOutput {
	return o
}

func (o GetSubaccountRolesValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRolesValue] {
	return pulumix.Output[[]GetSubaccountRolesValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountRolesValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountRolesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountRolesValue {
		return vs[0].([]GetSubaccountRolesValue)[vs[1].(int)]
	}).(GetSubaccountRolesValueOutput)
}

type GetSubaccountRolesValueScope struct {
	CustomGrantAsAuthorityToApps []string `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            []string `pulumi:"customGrantedApps"`
	Description                  string   `pulumi:"description"`
	GrantAsAuthorityToApps       []string `pulumi:"grantAsAuthorityToApps"`
	GrantedApps                  []string `pulumi:"grantedApps"`
	Name                         string   `pulumi:"name"`
}

// GetSubaccountRolesValueScopeInput is an input type that accepts GetSubaccountRolesValueScopeArgs and GetSubaccountRolesValueScopeOutput values.
// You can construct a concrete instance of `GetSubaccountRolesValueScopeInput` via:
//
//	GetSubaccountRolesValueScopeArgs{...}
type GetSubaccountRolesValueScopeInput interface {
	pulumi.Input

	ToGetSubaccountRolesValueScopeOutput() GetSubaccountRolesValueScopeOutput
	ToGetSubaccountRolesValueScopeOutputWithContext(context.Context) GetSubaccountRolesValueScopeOutput
}

type GetSubaccountRolesValueScopeArgs struct {
	CustomGrantAsAuthorityToApps pulumi.StringArrayInput `pulumi:"customGrantAsAuthorityToApps"`
	CustomGrantedApps            pulumi.StringArrayInput `pulumi:"customGrantedApps"`
	Description                  pulumi.StringInput      `pulumi:"description"`
	GrantAsAuthorityToApps       pulumi.StringArrayInput `pulumi:"grantAsAuthorityToApps"`
	GrantedApps                  pulumi.StringArrayInput `pulumi:"grantedApps"`
	Name                         pulumi.StringInput      `pulumi:"name"`
}

func (GetSubaccountRolesValueScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRolesValueScope)(nil)).Elem()
}

func (i GetSubaccountRolesValueScopeArgs) ToGetSubaccountRolesValueScopeOutput() GetSubaccountRolesValueScopeOutput {
	return i.ToGetSubaccountRolesValueScopeOutputWithContext(context.Background())
}

func (i GetSubaccountRolesValueScopeArgs) ToGetSubaccountRolesValueScopeOutputWithContext(ctx context.Context) GetSubaccountRolesValueScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRolesValueScopeOutput)
}

func (i GetSubaccountRolesValueScopeArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRolesValueScope] {
	return pulumix.Output[GetSubaccountRolesValueScope]{
		OutputState: i.ToGetSubaccountRolesValueScopeOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountRolesValueScopeArrayInput is an input type that accepts GetSubaccountRolesValueScopeArray and GetSubaccountRolesValueScopeArrayOutput values.
// You can construct a concrete instance of `GetSubaccountRolesValueScopeArrayInput` via:
//
//	GetSubaccountRolesValueScopeArray{ GetSubaccountRolesValueScopeArgs{...} }
type GetSubaccountRolesValueScopeArrayInput interface {
	pulumi.Input

	ToGetSubaccountRolesValueScopeArrayOutput() GetSubaccountRolesValueScopeArrayOutput
	ToGetSubaccountRolesValueScopeArrayOutputWithContext(context.Context) GetSubaccountRolesValueScopeArrayOutput
}

type GetSubaccountRolesValueScopeArray []GetSubaccountRolesValueScopeInput

func (GetSubaccountRolesValueScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRolesValueScope)(nil)).Elem()
}

func (i GetSubaccountRolesValueScopeArray) ToGetSubaccountRolesValueScopeArrayOutput() GetSubaccountRolesValueScopeArrayOutput {
	return i.ToGetSubaccountRolesValueScopeArrayOutputWithContext(context.Background())
}

func (i GetSubaccountRolesValueScopeArray) ToGetSubaccountRolesValueScopeArrayOutputWithContext(ctx context.Context) GetSubaccountRolesValueScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountRolesValueScopeArrayOutput)
}

func (i GetSubaccountRolesValueScopeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRolesValueScope] {
	return pulumix.Output[[]GetSubaccountRolesValueScope]{
		OutputState: i.ToGetSubaccountRolesValueScopeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountRolesValueScopeOutput struct{ *pulumi.OutputState }

func (GetSubaccountRolesValueScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountRolesValueScope)(nil)).Elem()
}

func (o GetSubaccountRolesValueScopeOutput) ToGetSubaccountRolesValueScopeOutput() GetSubaccountRolesValueScopeOutput {
	return o
}

func (o GetSubaccountRolesValueScopeOutput) ToGetSubaccountRolesValueScopeOutputWithContext(ctx context.Context) GetSubaccountRolesValueScopeOutput {
	return o
}

func (o GetSubaccountRolesValueScopeOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountRolesValueScope] {
	return pulumix.Output[GetSubaccountRolesValueScope]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountRolesValueScopeOutput) CustomGrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountRolesValueScope) []string { return v.CustomGrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountRolesValueScopeOutput) CustomGrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountRolesValueScope) []string { return v.CustomGrantedApps }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountRolesValueScopeOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRolesValueScope) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetSubaccountRolesValueScopeOutput) GrantAsAuthorityToApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountRolesValueScope) []string { return v.GrantAsAuthorityToApps }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountRolesValueScopeOutput) GrantedApps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountRolesValueScope) []string { return v.GrantedApps }).(pulumi.StringArrayOutput)
}

func (o GetSubaccountRolesValueScopeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountRolesValueScope) string { return v.Name }).(pulumi.StringOutput)
}

type GetSubaccountRolesValueScopeArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountRolesValueScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountRolesValueScope)(nil)).Elem()
}

func (o GetSubaccountRolesValueScopeArrayOutput) ToGetSubaccountRolesValueScopeArrayOutput() GetSubaccountRolesValueScopeArrayOutput {
	return o
}

func (o GetSubaccountRolesValueScopeArrayOutput) ToGetSubaccountRolesValueScopeArrayOutputWithContext(ctx context.Context) GetSubaccountRolesValueScopeArrayOutput {
	return o
}

func (o GetSubaccountRolesValueScopeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountRolesValueScope] {
	return pulumix.Output[[]GetSubaccountRolesValueScope]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountRolesValueScopeArrayOutput) Index(i pulumi.IntInput) GetSubaccountRolesValueScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountRolesValueScope {
		return vs[0].([]GetSubaccountRolesValueScope)[vs[1].(int)]
	}).(GetSubaccountRolesValueScopeOutput)
}

type GetSubaccountServiceBindingsValue struct {
	// Contains the resources associated with the binding.
	BindResource map[string]string `pulumi:"bindResource"`
	// Contextual data for the resource.
	Context string `pulumi:"context"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// The credentials to access the binding.
	Credentials string `pulumi:"credentials"`
	// The ID of the service binding.
	Id string `pulumi:"id"`
	// The set of words or phrases assigned to the binding.
	Labels map[string][]string `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified string `pulumi:"lastModified"`
	// The name of the service binding.
	Name string `pulumi:"name"`
	// Shows whether the service binding is ready.
	Ready bool `pulumi:"ready"`
	// The ID of the service instance associated with the binding.
	ServiceInstanceId string `pulumi:"serviceInstanceId"`
}

// GetSubaccountServiceBindingsValueInput is an input type that accepts GetSubaccountServiceBindingsValueArgs and GetSubaccountServiceBindingsValueOutput values.
// You can construct a concrete instance of `GetSubaccountServiceBindingsValueInput` via:
//
//	GetSubaccountServiceBindingsValueArgs{...}
type GetSubaccountServiceBindingsValueInput interface {
	pulumi.Input

	ToGetSubaccountServiceBindingsValueOutput() GetSubaccountServiceBindingsValueOutput
	ToGetSubaccountServiceBindingsValueOutputWithContext(context.Context) GetSubaccountServiceBindingsValueOutput
}

type GetSubaccountServiceBindingsValueArgs struct {
	// Contains the resources associated with the binding.
	BindResource pulumi.StringMapInput `pulumi:"bindResource"`
	// Contextual data for the resource.
	Context pulumi.StringInput `pulumi:"context"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The credentials to access the binding.
	Credentials pulumi.StringInput `pulumi:"credentials"`
	// The ID of the service binding.
	Id pulumi.StringInput `pulumi:"id"`
	// The set of words or phrases assigned to the binding.
	Labels pulumi.StringArrayMapInput `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringInput `pulumi:"lastModified"`
	// The name of the service binding.
	Name pulumi.StringInput `pulumi:"name"`
	// Shows whether the service binding is ready.
	Ready pulumi.BoolInput `pulumi:"ready"`
	// The ID of the service instance associated with the binding.
	ServiceInstanceId pulumi.StringInput `pulumi:"serviceInstanceId"`
}

func (GetSubaccountServiceBindingsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceBindingsValue)(nil)).Elem()
}

func (i GetSubaccountServiceBindingsValueArgs) ToGetSubaccountServiceBindingsValueOutput() GetSubaccountServiceBindingsValueOutput {
	return i.ToGetSubaccountServiceBindingsValueOutputWithContext(context.Background())
}

func (i GetSubaccountServiceBindingsValueArgs) ToGetSubaccountServiceBindingsValueOutputWithContext(ctx context.Context) GetSubaccountServiceBindingsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountServiceBindingsValueOutput)
}

func (i GetSubaccountServiceBindingsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServiceBindingsValue] {
	return pulumix.Output[GetSubaccountServiceBindingsValue]{
		OutputState: i.ToGetSubaccountServiceBindingsValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountServiceBindingsValueArrayInput is an input type that accepts GetSubaccountServiceBindingsValueArray and GetSubaccountServiceBindingsValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountServiceBindingsValueArrayInput` via:
//
//	GetSubaccountServiceBindingsValueArray{ GetSubaccountServiceBindingsValueArgs{...} }
type GetSubaccountServiceBindingsValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountServiceBindingsValueArrayOutput() GetSubaccountServiceBindingsValueArrayOutput
	ToGetSubaccountServiceBindingsValueArrayOutputWithContext(context.Context) GetSubaccountServiceBindingsValueArrayOutput
}

type GetSubaccountServiceBindingsValueArray []GetSubaccountServiceBindingsValueInput

func (GetSubaccountServiceBindingsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountServiceBindingsValue)(nil)).Elem()
}

func (i GetSubaccountServiceBindingsValueArray) ToGetSubaccountServiceBindingsValueArrayOutput() GetSubaccountServiceBindingsValueArrayOutput {
	return i.ToGetSubaccountServiceBindingsValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountServiceBindingsValueArray) ToGetSubaccountServiceBindingsValueArrayOutputWithContext(ctx context.Context) GetSubaccountServiceBindingsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountServiceBindingsValueArrayOutput)
}

func (i GetSubaccountServiceBindingsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountServiceBindingsValue] {
	return pulumix.Output[[]GetSubaccountServiceBindingsValue]{
		OutputState: i.ToGetSubaccountServiceBindingsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountServiceBindingsValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountServiceBindingsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceBindingsValue)(nil)).Elem()
}

func (o GetSubaccountServiceBindingsValueOutput) ToGetSubaccountServiceBindingsValueOutput() GetSubaccountServiceBindingsValueOutput {
	return o
}

func (o GetSubaccountServiceBindingsValueOutput) ToGetSubaccountServiceBindingsValueOutputWithContext(ctx context.Context) GetSubaccountServiceBindingsValueOutput {
	return o
}

func (o GetSubaccountServiceBindingsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServiceBindingsValue] {
	return pulumix.Output[GetSubaccountServiceBindingsValue]{
		OutputState: o.OutputState,
	}
}

// Contains the resources associated with the binding.
func (o GetSubaccountServiceBindingsValueOutput) BindResource() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) map[string]string { return v.BindResource }).(pulumi.StringMapOutput)
}

// Contextual data for the resource.
func (o GetSubaccountServiceBindingsValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) string { return v.Context }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServiceBindingsValueOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The credentials to access the binding.
func (o GetSubaccountServiceBindingsValueOutput) Credentials() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) string { return v.Credentials }).(pulumi.StringOutput)
}

// The ID of the service binding.
func (o GetSubaccountServiceBindingsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) string { return v.Id }).(pulumi.StringOutput)
}

// The set of words or phrases assigned to the binding.
func (o GetSubaccountServiceBindingsValueOutput) Labels() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) map[string][]string { return v.Labels }).(pulumi.StringArrayMapOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServiceBindingsValueOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) string { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the service binding.
func (o GetSubaccountServiceBindingsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the service binding is ready.
func (o GetSubaccountServiceBindingsValueOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) bool { return v.Ready }).(pulumi.BoolOutput)
}

// The ID of the service instance associated with the binding.
func (o GetSubaccountServiceBindingsValueOutput) ServiceInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsValue) string { return v.ServiceInstanceId }).(pulumi.StringOutput)
}

type GetSubaccountServiceBindingsValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountServiceBindingsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountServiceBindingsValue)(nil)).Elem()
}

func (o GetSubaccountServiceBindingsValueArrayOutput) ToGetSubaccountServiceBindingsValueArrayOutput() GetSubaccountServiceBindingsValueArrayOutput {
	return o
}

func (o GetSubaccountServiceBindingsValueArrayOutput) ToGetSubaccountServiceBindingsValueArrayOutputWithContext(ctx context.Context) GetSubaccountServiceBindingsValueArrayOutput {
	return o
}

func (o GetSubaccountServiceBindingsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountServiceBindingsValue] {
	return pulumix.Output[[]GetSubaccountServiceBindingsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountServiceBindingsValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountServiceBindingsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountServiceBindingsValue {
		return vs[0].([]GetSubaccountServiceBindingsValue)[vs[1].(int)]
	}).(GetSubaccountServiceBindingsValueOutput)
}

type GetSubaccountServiceInstancesValue struct {
	// Contextual data for the resource.
	Context string `pulumi:"context"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// The ID of the service instance.
	Id string `pulumi:"id"`
	// The set of words or phrases assigned to the service instance.
	Labels map[string][]string `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified string `pulumi:"lastModified"`
	// The name of the service instance.
	Name string `pulumi:"name"`
	// The platform ID.
	PlatformId string `pulumi:"platformId"`
	Ready      bool   `pulumi:"ready"`
	// The ID of the service plan.
	ServiceplanId string `pulumi:"serviceplanId"`
	// Shows whether the resource can be used.
	Usable bool `pulumi:"usable"`
}

// GetSubaccountServiceInstancesValueInput is an input type that accepts GetSubaccountServiceInstancesValueArgs and GetSubaccountServiceInstancesValueOutput values.
// You can construct a concrete instance of `GetSubaccountServiceInstancesValueInput` via:
//
//	GetSubaccountServiceInstancesValueArgs{...}
type GetSubaccountServiceInstancesValueInput interface {
	pulumi.Input

	ToGetSubaccountServiceInstancesValueOutput() GetSubaccountServiceInstancesValueOutput
	ToGetSubaccountServiceInstancesValueOutputWithContext(context.Context) GetSubaccountServiceInstancesValueOutput
}

type GetSubaccountServiceInstancesValueArgs struct {
	// Contextual data for the resource.
	Context pulumi.StringInput `pulumi:"context"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The ID of the service instance.
	Id pulumi.StringInput `pulumi:"id"`
	// The set of words or phrases assigned to the service instance.
	Labels pulumi.StringArrayMapInput `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringInput `pulumi:"lastModified"`
	// The name of the service instance.
	Name pulumi.StringInput `pulumi:"name"`
	// The platform ID.
	PlatformId pulumi.StringInput `pulumi:"platformId"`
	Ready      pulumi.BoolInput   `pulumi:"ready"`
	// The ID of the service plan.
	ServiceplanId pulumi.StringInput `pulumi:"serviceplanId"`
	// Shows whether the resource can be used.
	Usable pulumi.BoolInput `pulumi:"usable"`
}

func (GetSubaccountServiceInstancesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceInstancesValue)(nil)).Elem()
}

func (i GetSubaccountServiceInstancesValueArgs) ToGetSubaccountServiceInstancesValueOutput() GetSubaccountServiceInstancesValueOutput {
	return i.ToGetSubaccountServiceInstancesValueOutputWithContext(context.Background())
}

func (i GetSubaccountServiceInstancesValueArgs) ToGetSubaccountServiceInstancesValueOutputWithContext(ctx context.Context) GetSubaccountServiceInstancesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountServiceInstancesValueOutput)
}

func (i GetSubaccountServiceInstancesValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServiceInstancesValue] {
	return pulumix.Output[GetSubaccountServiceInstancesValue]{
		OutputState: i.ToGetSubaccountServiceInstancesValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountServiceInstancesValueArrayInput is an input type that accepts GetSubaccountServiceInstancesValueArray and GetSubaccountServiceInstancesValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountServiceInstancesValueArrayInput` via:
//
//	GetSubaccountServiceInstancesValueArray{ GetSubaccountServiceInstancesValueArgs{...} }
type GetSubaccountServiceInstancesValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountServiceInstancesValueArrayOutput() GetSubaccountServiceInstancesValueArrayOutput
	ToGetSubaccountServiceInstancesValueArrayOutputWithContext(context.Context) GetSubaccountServiceInstancesValueArrayOutput
}

type GetSubaccountServiceInstancesValueArray []GetSubaccountServiceInstancesValueInput

func (GetSubaccountServiceInstancesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountServiceInstancesValue)(nil)).Elem()
}

func (i GetSubaccountServiceInstancesValueArray) ToGetSubaccountServiceInstancesValueArrayOutput() GetSubaccountServiceInstancesValueArrayOutput {
	return i.ToGetSubaccountServiceInstancesValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountServiceInstancesValueArray) ToGetSubaccountServiceInstancesValueArrayOutputWithContext(ctx context.Context) GetSubaccountServiceInstancesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountServiceInstancesValueArrayOutput)
}

func (i GetSubaccountServiceInstancesValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountServiceInstancesValue] {
	return pulumix.Output[[]GetSubaccountServiceInstancesValue]{
		OutputState: i.ToGetSubaccountServiceInstancesValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountServiceInstancesValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountServiceInstancesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceInstancesValue)(nil)).Elem()
}

func (o GetSubaccountServiceInstancesValueOutput) ToGetSubaccountServiceInstancesValueOutput() GetSubaccountServiceInstancesValueOutput {
	return o
}

func (o GetSubaccountServiceInstancesValueOutput) ToGetSubaccountServiceInstancesValueOutputWithContext(ctx context.Context) GetSubaccountServiceInstancesValueOutput {
	return o
}

func (o GetSubaccountServiceInstancesValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServiceInstancesValue] {
	return pulumix.Output[GetSubaccountServiceInstancesValue]{
		OutputState: o.OutputState,
	}
}

// Contextual data for the resource.
func (o GetSubaccountServiceInstancesValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) string { return v.Context }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServiceInstancesValueOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The ID of the service instance.
func (o GetSubaccountServiceInstancesValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) string { return v.Id }).(pulumi.StringOutput)
}

// The set of words or phrases assigned to the service instance.
func (o GetSubaccountServiceInstancesValueOutput) Labels() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) map[string][]string { return v.Labels }).(pulumi.StringArrayMapOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServiceInstancesValueOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) string { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the service instance.
func (o GetSubaccountServiceInstancesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) string { return v.Name }).(pulumi.StringOutput)
}

// The platform ID.
func (o GetSubaccountServiceInstancesValueOutput) PlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) string { return v.PlatformId }).(pulumi.StringOutput)
}

func (o GetSubaccountServiceInstancesValueOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) bool { return v.Ready }).(pulumi.BoolOutput)
}

// The ID of the service plan.
func (o GetSubaccountServiceInstancesValueOutput) ServiceplanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) string { return v.ServiceplanId }).(pulumi.StringOutput)
}

// Shows whether the resource can be used.
func (o GetSubaccountServiceInstancesValueOutput) Usable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceInstancesValue) bool { return v.Usable }).(pulumi.BoolOutput)
}

type GetSubaccountServiceInstancesValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountServiceInstancesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountServiceInstancesValue)(nil)).Elem()
}

func (o GetSubaccountServiceInstancesValueArrayOutput) ToGetSubaccountServiceInstancesValueArrayOutput() GetSubaccountServiceInstancesValueArrayOutput {
	return o
}

func (o GetSubaccountServiceInstancesValueArrayOutput) ToGetSubaccountServiceInstancesValueArrayOutputWithContext(ctx context.Context) GetSubaccountServiceInstancesValueArrayOutput {
	return o
}

func (o GetSubaccountServiceInstancesValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountServiceInstancesValue] {
	return pulumix.Output[[]GetSubaccountServiceInstancesValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountServiceInstancesValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountServiceInstancesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountServiceInstancesValue {
		return vs[0].([]GetSubaccountServiceInstancesValue)[vs[1].(int)]
	}).(GetSubaccountServiceInstancesValueOutput)
}

type GetSubaccountServiceOfferingsValue struct {
	// Shows whether the context for the service offering can be updated.
	AllowContextUpdates bool `pulumi:"allowContextUpdates"`
	// Shows whether the service offering is bindable.
	Bindable bool `pulumi:"bindable"`
	// Shows whether the bindings associated with the service offering can be retrieved.
	BindingsRetrievable bool `pulumi:"bindingsRetrievable"`
	// The ID of the broker that provides the service plan.
	BrokerId string `pulumi:"brokerId"`
	// The ID of the service offering as provided by the catalog.
	CatalogId string `pulumi:"catalogId"`
	// The catalog name of the service offering.
	CatalogName string `pulumi:"catalogName"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// The description of the service offering.
	Description string `pulumi:"description"`
	// The ID of the service offering.
	Id string `pulumi:"id"`
	// Shows whether the service instances associated with the service offering can be retrieved.
	InstancesRetrievable bool `pulumi:"instancesRetrievable"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified string `pulumi:"lastModified"`
	// The name of the service offering.
	Name string `pulumi:"name"`
	// Shows whether the offered plan can be updated.
	PlanUpdateable bool `pulumi:"planUpdateable"`
	// Shows whether the service offering is ready to be advertised.
	Ready bool `pulumi:"ready"`
	// The list of tags for the service offering.
	Tags []string `pulumi:"tags"`
}

// GetSubaccountServiceOfferingsValueInput is an input type that accepts GetSubaccountServiceOfferingsValueArgs and GetSubaccountServiceOfferingsValueOutput values.
// You can construct a concrete instance of `GetSubaccountServiceOfferingsValueInput` via:
//
//	GetSubaccountServiceOfferingsValueArgs{...}
type GetSubaccountServiceOfferingsValueInput interface {
	pulumi.Input

	ToGetSubaccountServiceOfferingsValueOutput() GetSubaccountServiceOfferingsValueOutput
	ToGetSubaccountServiceOfferingsValueOutputWithContext(context.Context) GetSubaccountServiceOfferingsValueOutput
}

type GetSubaccountServiceOfferingsValueArgs struct {
	// Shows whether the context for the service offering can be updated.
	AllowContextUpdates pulumi.BoolInput `pulumi:"allowContextUpdates"`
	// Shows whether the service offering is bindable.
	Bindable pulumi.BoolInput `pulumi:"bindable"`
	// Shows whether the bindings associated with the service offering can be retrieved.
	BindingsRetrievable pulumi.BoolInput `pulumi:"bindingsRetrievable"`
	// The ID of the broker that provides the service plan.
	BrokerId pulumi.StringInput `pulumi:"brokerId"`
	// The ID of the service offering as provided by the catalog.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
	// The catalog name of the service offering.
	CatalogName pulumi.StringInput `pulumi:"catalogName"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The description of the service offering.
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the service offering.
	Id pulumi.StringInput `pulumi:"id"`
	// Shows whether the service instances associated with the service offering can be retrieved.
	InstancesRetrievable pulumi.BoolInput `pulumi:"instancesRetrievable"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringInput `pulumi:"lastModified"`
	// The name of the service offering.
	Name pulumi.StringInput `pulumi:"name"`
	// Shows whether the offered plan can be updated.
	PlanUpdateable pulumi.BoolInput `pulumi:"planUpdateable"`
	// Shows whether the service offering is ready to be advertised.
	Ready pulumi.BoolInput `pulumi:"ready"`
	// The list of tags for the service offering.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetSubaccountServiceOfferingsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceOfferingsValue)(nil)).Elem()
}

func (i GetSubaccountServiceOfferingsValueArgs) ToGetSubaccountServiceOfferingsValueOutput() GetSubaccountServiceOfferingsValueOutput {
	return i.ToGetSubaccountServiceOfferingsValueOutputWithContext(context.Background())
}

func (i GetSubaccountServiceOfferingsValueArgs) ToGetSubaccountServiceOfferingsValueOutputWithContext(ctx context.Context) GetSubaccountServiceOfferingsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountServiceOfferingsValueOutput)
}

func (i GetSubaccountServiceOfferingsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServiceOfferingsValue] {
	return pulumix.Output[GetSubaccountServiceOfferingsValue]{
		OutputState: i.ToGetSubaccountServiceOfferingsValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountServiceOfferingsValueArrayInput is an input type that accepts GetSubaccountServiceOfferingsValueArray and GetSubaccountServiceOfferingsValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountServiceOfferingsValueArrayInput` via:
//
//	GetSubaccountServiceOfferingsValueArray{ GetSubaccountServiceOfferingsValueArgs{...} }
type GetSubaccountServiceOfferingsValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountServiceOfferingsValueArrayOutput() GetSubaccountServiceOfferingsValueArrayOutput
	ToGetSubaccountServiceOfferingsValueArrayOutputWithContext(context.Context) GetSubaccountServiceOfferingsValueArrayOutput
}

type GetSubaccountServiceOfferingsValueArray []GetSubaccountServiceOfferingsValueInput

func (GetSubaccountServiceOfferingsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountServiceOfferingsValue)(nil)).Elem()
}

func (i GetSubaccountServiceOfferingsValueArray) ToGetSubaccountServiceOfferingsValueArrayOutput() GetSubaccountServiceOfferingsValueArrayOutput {
	return i.ToGetSubaccountServiceOfferingsValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountServiceOfferingsValueArray) ToGetSubaccountServiceOfferingsValueArrayOutputWithContext(ctx context.Context) GetSubaccountServiceOfferingsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountServiceOfferingsValueArrayOutput)
}

func (i GetSubaccountServiceOfferingsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountServiceOfferingsValue] {
	return pulumix.Output[[]GetSubaccountServiceOfferingsValue]{
		OutputState: i.ToGetSubaccountServiceOfferingsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountServiceOfferingsValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountServiceOfferingsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceOfferingsValue)(nil)).Elem()
}

func (o GetSubaccountServiceOfferingsValueOutput) ToGetSubaccountServiceOfferingsValueOutput() GetSubaccountServiceOfferingsValueOutput {
	return o
}

func (o GetSubaccountServiceOfferingsValueOutput) ToGetSubaccountServiceOfferingsValueOutputWithContext(ctx context.Context) GetSubaccountServiceOfferingsValueOutput {
	return o
}

func (o GetSubaccountServiceOfferingsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServiceOfferingsValue] {
	return pulumix.Output[GetSubaccountServiceOfferingsValue]{
		OutputState: o.OutputState,
	}
}

// Shows whether the context for the service offering can be updated.
func (o GetSubaccountServiceOfferingsValueOutput) AllowContextUpdates() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) bool { return v.AllowContextUpdates }).(pulumi.BoolOutput)
}

// Shows whether the service offering is bindable.
func (o GetSubaccountServiceOfferingsValueOutput) Bindable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) bool { return v.Bindable }).(pulumi.BoolOutput)
}

// Shows whether the bindings associated with the service offering can be retrieved.
func (o GetSubaccountServiceOfferingsValueOutput) BindingsRetrievable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) bool { return v.BindingsRetrievable }).(pulumi.BoolOutput)
}

// The ID of the broker that provides the service plan.
func (o GetSubaccountServiceOfferingsValueOutput) BrokerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) string { return v.BrokerId }).(pulumi.StringOutput)
}

// The ID of the service offering as provided by the catalog.
func (o GetSubaccountServiceOfferingsValueOutput) CatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) string { return v.CatalogId }).(pulumi.StringOutput)
}

// The catalog name of the service offering.
func (o GetSubaccountServiceOfferingsValueOutput) CatalogName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) string { return v.CatalogName }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServiceOfferingsValueOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The description of the service offering.
func (o GetSubaccountServiceOfferingsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the service offering.
func (o GetSubaccountServiceOfferingsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) string { return v.Id }).(pulumi.StringOutput)
}

// Shows whether the service instances associated with the service offering can be retrieved.
func (o GetSubaccountServiceOfferingsValueOutput) InstancesRetrievable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) bool { return v.InstancesRetrievable }).(pulumi.BoolOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServiceOfferingsValueOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) string { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the service offering.
func (o GetSubaccountServiceOfferingsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the offered plan can be updated.
func (o GetSubaccountServiceOfferingsValueOutput) PlanUpdateable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) bool { return v.PlanUpdateable }).(pulumi.BoolOutput)
}

// Shows whether the service offering is ready to be advertised.
func (o GetSubaccountServiceOfferingsValueOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) bool { return v.Ready }).(pulumi.BoolOutput)
}

// The list of tags for the service offering.
func (o GetSubaccountServiceOfferingsValueOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingsValue) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetSubaccountServiceOfferingsValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountServiceOfferingsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountServiceOfferingsValue)(nil)).Elem()
}

func (o GetSubaccountServiceOfferingsValueArrayOutput) ToGetSubaccountServiceOfferingsValueArrayOutput() GetSubaccountServiceOfferingsValueArrayOutput {
	return o
}

func (o GetSubaccountServiceOfferingsValueArrayOutput) ToGetSubaccountServiceOfferingsValueArrayOutputWithContext(ctx context.Context) GetSubaccountServiceOfferingsValueArrayOutput {
	return o
}

func (o GetSubaccountServiceOfferingsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountServiceOfferingsValue] {
	return pulumix.Output[[]GetSubaccountServiceOfferingsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountServiceOfferingsValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountServiceOfferingsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountServiceOfferingsValue {
		return vs[0].([]GetSubaccountServiceOfferingsValue)[vs[1].(int)]
	}).(GetSubaccountServiceOfferingsValueOutput)
}

type GetSubaccountServicePlansValue struct {
	// Shows whether the service plan is bindable.
	Bindable bool `pulumi:"bindable"`
	// The ID of the service plan in the service broker catalog.
	CatalogId string `pulumi:"catalogId"`
	// The name of the associated service broker catalog.
	CatalogName string `pulumi:"catalogName"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// The description of the service plan.
	Description string `pulumi:"description"`
	// Shows whether the service plan is free.
	Free bool `pulumi:"free"`
	// The ID of the service plan.
	Id string `pulumi:"id"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified string `pulumi:"lastModified"`
	// The name of the service plan.
	Name string `pulumi:"name"`
	// Shows whether the service plan is ready.
	Ready bool `pulumi:"ready"`
	// The ID of the service offering.
	ServiceofferingId string `pulumi:"serviceofferingId"`
}

// GetSubaccountServicePlansValueInput is an input type that accepts GetSubaccountServicePlansValueArgs and GetSubaccountServicePlansValueOutput values.
// You can construct a concrete instance of `GetSubaccountServicePlansValueInput` via:
//
//	GetSubaccountServicePlansValueArgs{...}
type GetSubaccountServicePlansValueInput interface {
	pulumi.Input

	ToGetSubaccountServicePlansValueOutput() GetSubaccountServicePlansValueOutput
	ToGetSubaccountServicePlansValueOutputWithContext(context.Context) GetSubaccountServicePlansValueOutput
}

type GetSubaccountServicePlansValueArgs struct {
	// Shows whether the service plan is bindable.
	Bindable pulumi.BoolInput `pulumi:"bindable"`
	// The ID of the service plan in the service broker catalog.
	CatalogId pulumi.StringInput `pulumi:"catalogId"`
	// The name of the associated service broker catalog.
	CatalogName pulumi.StringInput `pulumi:"catalogName"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The description of the service plan.
	Description pulumi.StringInput `pulumi:"description"`
	// Shows whether the service plan is free.
	Free pulumi.BoolInput `pulumi:"free"`
	// The ID of the service plan.
	Id pulumi.StringInput `pulumi:"id"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringInput `pulumi:"lastModified"`
	// The name of the service plan.
	Name pulumi.StringInput `pulumi:"name"`
	// Shows whether the service plan is ready.
	Ready pulumi.BoolInput `pulumi:"ready"`
	// The ID of the service offering.
	ServiceofferingId pulumi.StringInput `pulumi:"serviceofferingId"`
}

func (GetSubaccountServicePlansValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServicePlansValue)(nil)).Elem()
}

func (i GetSubaccountServicePlansValueArgs) ToGetSubaccountServicePlansValueOutput() GetSubaccountServicePlansValueOutput {
	return i.ToGetSubaccountServicePlansValueOutputWithContext(context.Background())
}

func (i GetSubaccountServicePlansValueArgs) ToGetSubaccountServicePlansValueOutputWithContext(ctx context.Context) GetSubaccountServicePlansValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountServicePlansValueOutput)
}

func (i GetSubaccountServicePlansValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServicePlansValue] {
	return pulumix.Output[GetSubaccountServicePlansValue]{
		OutputState: i.ToGetSubaccountServicePlansValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountServicePlansValueArrayInput is an input type that accepts GetSubaccountServicePlansValueArray and GetSubaccountServicePlansValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountServicePlansValueArrayInput` via:
//
//	GetSubaccountServicePlansValueArray{ GetSubaccountServicePlansValueArgs{...} }
type GetSubaccountServicePlansValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountServicePlansValueArrayOutput() GetSubaccountServicePlansValueArrayOutput
	ToGetSubaccountServicePlansValueArrayOutputWithContext(context.Context) GetSubaccountServicePlansValueArrayOutput
}

type GetSubaccountServicePlansValueArray []GetSubaccountServicePlansValueInput

func (GetSubaccountServicePlansValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountServicePlansValue)(nil)).Elem()
}

func (i GetSubaccountServicePlansValueArray) ToGetSubaccountServicePlansValueArrayOutput() GetSubaccountServicePlansValueArrayOutput {
	return i.ToGetSubaccountServicePlansValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountServicePlansValueArray) ToGetSubaccountServicePlansValueArrayOutputWithContext(ctx context.Context) GetSubaccountServicePlansValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountServicePlansValueArrayOutput)
}

func (i GetSubaccountServicePlansValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountServicePlansValue] {
	return pulumix.Output[[]GetSubaccountServicePlansValue]{
		OutputState: i.ToGetSubaccountServicePlansValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountServicePlansValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountServicePlansValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServicePlansValue)(nil)).Elem()
}

func (o GetSubaccountServicePlansValueOutput) ToGetSubaccountServicePlansValueOutput() GetSubaccountServicePlansValueOutput {
	return o
}

func (o GetSubaccountServicePlansValueOutput) ToGetSubaccountServicePlansValueOutputWithContext(ctx context.Context) GetSubaccountServicePlansValueOutput {
	return o
}

func (o GetSubaccountServicePlansValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServicePlansValue] {
	return pulumix.Output[GetSubaccountServicePlansValue]{
		OutputState: o.OutputState,
	}
}

// Shows whether the service plan is bindable.
func (o GetSubaccountServicePlansValueOutput) Bindable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) bool { return v.Bindable }).(pulumi.BoolOutput)
}

// The ID of the service plan in the service broker catalog.
func (o GetSubaccountServicePlansValueOutput) CatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) string { return v.CatalogId }).(pulumi.StringOutput)
}

// The name of the associated service broker catalog.
func (o GetSubaccountServicePlansValueOutput) CatalogName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) string { return v.CatalogName }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServicePlansValueOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The description of the service plan.
func (o GetSubaccountServicePlansValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) string { return v.Description }).(pulumi.StringOutput)
}

// Shows whether the service plan is free.
func (o GetSubaccountServicePlansValueOutput) Free() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) bool { return v.Free }).(pulumi.BoolOutput)
}

// The ID of the service plan.
func (o GetSubaccountServicePlansValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) string { return v.Id }).(pulumi.StringOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServicePlansValueOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) string { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the service plan.
func (o GetSubaccountServicePlansValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the service plan is ready.
func (o GetSubaccountServicePlansValueOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) bool { return v.Ready }).(pulumi.BoolOutput)
}

// The ID of the service offering.
func (o GetSubaccountServicePlansValueOutput) ServiceofferingId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlansValue) string { return v.ServiceofferingId }).(pulumi.StringOutput)
}

type GetSubaccountServicePlansValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountServicePlansValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountServicePlansValue)(nil)).Elem()
}

func (o GetSubaccountServicePlansValueArrayOutput) ToGetSubaccountServicePlansValueArrayOutput() GetSubaccountServicePlansValueArrayOutput {
	return o
}

func (o GetSubaccountServicePlansValueArrayOutput) ToGetSubaccountServicePlansValueArrayOutputWithContext(ctx context.Context) GetSubaccountServicePlansValueArrayOutput {
	return o
}

func (o GetSubaccountServicePlansValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountServicePlansValue] {
	return pulumix.Output[[]GetSubaccountServicePlansValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountServicePlansValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountServicePlansValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountServicePlansValue {
		return vs[0].([]GetSubaccountServicePlansValue)[vs[1].(int)]
	}).(GetSubaccountServicePlansValueOutput)
}

type GetSubaccountSubscriptionsValue struct {
	// The list of features specific to this plan.
	AdditionalPlanFeatures []string `pulumi:"additionalPlanFeatures"`
	// The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to a XSUAA service instance.
	AppId string `pulumi:"appId"`
	// The unique registration name of the deployed multitenant application as defined by the app developer.
	AppName string `pulumi:"appName"`
	// The authentication provider of the multitenant application. * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level. * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).
	AuthenticationProvider string `pulumi:"authenticationProvider"`
	// The state of the automation solution.
	AutomationState string `pulumi:"automationState"`
	// The message that describes the automation solution state.
	AutomationStateMessage string `pulumi:"automationStateMessage"`
	// The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs.
	Category string `pulumi:"category"`
	// The display name of the category for customer-facing UIs.
	CategoryDisplayName string `pulumi:"categoryDisplayName"`
	// The commercial name of the deployed multitenant application as defined by the app developer.
	CommercialAppName string `pulumi:"commercialAppName"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// Shows whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP.
	CustomerDeveloped bool `pulumi:"customerDeveloped"`
	// The description of the multitenant application.
	Description string `pulumi:"description"`
	// The display name of the application for customer-facing UIs.
	DisplayName string `pulumi:"displayName"`
	// The name of the formations solution associated with the multitenant application.
	FormationSolutionName string `pulumi:"formationSolutionName"`
	// The ID of the associated global account.
	GlobalaccountId string `pulumi:"globalaccountId"`
	// The technical ID generated by XSUAA for a multitenant application when a consumer subscribes to the application.
	Id string `pulumi:"id"`
	// The application's incident-tracking component provided in metadata for customer-facing UIs.
	IncidentTrackingComponent string `pulumi:"incidentTrackingComponent"`
	// The set of words or phrases assigned to the multitenant application subscription.
	Labels map[string][]string `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified string `pulumi:"lastModified"`
	// The description of the plan for customer-facing UIs.
	PlanDescription string `pulumi:"planDescription"`
	// The plan name of the application to which the consumer has subscribed.
	PlanName string `pulumi:"planName"`
	// The ID of the landscape-specific environment.
	PlatformEntityId string `pulumi:"platformEntityId"`
	// The total amount the subscribed subaccount is entitled to consume.
	Quota int `pulumi:"quota"`
	// The short description of the multitenant application for customer-facing UIs.
	ShortDescription string `pulumi:"shortDescription"`
	// The subscription state of the subaccount regarding the multitenant application.
	State string `pulumi:"state"`
	// The ID of the subaccount which is subscribed to the multitenant application.
	SubscribedSubaccountId string `pulumi:"subscribedSubaccountId"`
	// The ID of the tenant which is subscribed to a multitenant application.
	SubscribedTenantId string `pulumi:"subscribedTenantId"`
	// The URL for app users to launch the subscribed application.
	SubscriptionUrl string `pulumi:"subscriptionUrl"`
	// Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters.
	SupportsParametersUpdates bool `pulumi:"supportsParametersUpdates"`
	// Specifies whether a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount.
	SupportsPlanUpdates bool `pulumi:"supportsPlanUpdates"`
	// The tenant ID of the application provider.
	TenantId string `pulumi:"tenantId"`
}

// GetSubaccountSubscriptionsValueInput is an input type that accepts GetSubaccountSubscriptionsValueArgs and GetSubaccountSubscriptionsValueOutput values.
// You can construct a concrete instance of `GetSubaccountSubscriptionsValueInput` via:
//
//	GetSubaccountSubscriptionsValueArgs{...}
type GetSubaccountSubscriptionsValueInput interface {
	pulumi.Input

	ToGetSubaccountSubscriptionsValueOutput() GetSubaccountSubscriptionsValueOutput
	ToGetSubaccountSubscriptionsValueOutputWithContext(context.Context) GetSubaccountSubscriptionsValueOutput
}

type GetSubaccountSubscriptionsValueArgs struct {
	// The list of features specific to this plan.
	AdditionalPlanFeatures pulumi.StringArrayInput `pulumi:"additionalPlanFeatures"`
	// The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to a XSUAA service instance.
	AppId pulumi.StringInput `pulumi:"appId"`
	// The unique registration name of the deployed multitenant application as defined by the app developer.
	AppName pulumi.StringInput `pulumi:"appName"`
	// The authentication provider of the multitenant application. * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level. * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).
	AuthenticationProvider pulumi.StringInput `pulumi:"authenticationProvider"`
	// The state of the automation solution.
	AutomationState pulumi.StringInput `pulumi:"automationState"`
	// The message that describes the automation solution state.
	AutomationStateMessage pulumi.StringInput `pulumi:"automationStateMessage"`
	// The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs.
	Category pulumi.StringInput `pulumi:"category"`
	// The display name of the category for customer-facing UIs.
	CategoryDisplayName pulumi.StringInput `pulumi:"categoryDisplayName"`
	// The commercial name of the deployed multitenant application as defined by the app developer.
	CommercialAppName pulumi.StringInput `pulumi:"commercialAppName"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// Shows whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP.
	CustomerDeveloped pulumi.BoolInput `pulumi:"customerDeveloped"`
	// The description of the multitenant application.
	Description pulumi.StringInput `pulumi:"description"`
	// The display name of the application for customer-facing UIs.
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// The name of the formations solution associated with the multitenant application.
	FormationSolutionName pulumi.StringInput `pulumi:"formationSolutionName"`
	// The ID of the associated global account.
	GlobalaccountId pulumi.StringInput `pulumi:"globalaccountId"`
	// The technical ID generated by XSUAA for a multitenant application when a consumer subscribes to the application.
	Id pulumi.StringInput `pulumi:"id"`
	// The application's incident-tracking component provided in metadata for customer-facing UIs.
	IncidentTrackingComponent pulumi.StringInput `pulumi:"incidentTrackingComponent"`
	// The set of words or phrases assigned to the multitenant application subscription.
	Labels pulumi.StringArrayMapInput `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringInput `pulumi:"lastModified"`
	// The description of the plan for customer-facing UIs.
	PlanDescription pulumi.StringInput `pulumi:"planDescription"`
	// The plan name of the application to which the consumer has subscribed.
	PlanName pulumi.StringInput `pulumi:"planName"`
	// The ID of the landscape-specific environment.
	PlatformEntityId pulumi.StringInput `pulumi:"platformEntityId"`
	// The total amount the subscribed subaccount is entitled to consume.
	Quota pulumi.IntInput `pulumi:"quota"`
	// The short description of the multitenant application for customer-facing UIs.
	ShortDescription pulumi.StringInput `pulumi:"shortDescription"`
	// The subscription state of the subaccount regarding the multitenant application.
	State pulumi.StringInput `pulumi:"state"`
	// The ID of the subaccount which is subscribed to the multitenant application.
	SubscribedSubaccountId pulumi.StringInput `pulumi:"subscribedSubaccountId"`
	// The ID of the tenant which is subscribed to a multitenant application.
	SubscribedTenantId pulumi.StringInput `pulumi:"subscribedTenantId"`
	// The URL for app users to launch the subscribed application.
	SubscriptionUrl pulumi.StringInput `pulumi:"subscriptionUrl"`
	// Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters.
	SupportsParametersUpdates pulumi.BoolInput `pulumi:"supportsParametersUpdates"`
	// Specifies whether a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount.
	SupportsPlanUpdates pulumi.BoolInput `pulumi:"supportsPlanUpdates"`
	// The tenant ID of the application provider.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (GetSubaccountSubscriptionsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountSubscriptionsValue)(nil)).Elem()
}

func (i GetSubaccountSubscriptionsValueArgs) ToGetSubaccountSubscriptionsValueOutput() GetSubaccountSubscriptionsValueOutput {
	return i.ToGetSubaccountSubscriptionsValueOutputWithContext(context.Background())
}

func (i GetSubaccountSubscriptionsValueArgs) ToGetSubaccountSubscriptionsValueOutputWithContext(ctx context.Context) GetSubaccountSubscriptionsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountSubscriptionsValueOutput)
}

func (i GetSubaccountSubscriptionsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountSubscriptionsValue] {
	return pulumix.Output[GetSubaccountSubscriptionsValue]{
		OutputState: i.ToGetSubaccountSubscriptionsValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountSubscriptionsValueArrayInput is an input type that accepts GetSubaccountSubscriptionsValueArray and GetSubaccountSubscriptionsValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountSubscriptionsValueArrayInput` via:
//
//	GetSubaccountSubscriptionsValueArray{ GetSubaccountSubscriptionsValueArgs{...} }
type GetSubaccountSubscriptionsValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountSubscriptionsValueArrayOutput() GetSubaccountSubscriptionsValueArrayOutput
	ToGetSubaccountSubscriptionsValueArrayOutputWithContext(context.Context) GetSubaccountSubscriptionsValueArrayOutput
}

type GetSubaccountSubscriptionsValueArray []GetSubaccountSubscriptionsValueInput

func (GetSubaccountSubscriptionsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountSubscriptionsValue)(nil)).Elem()
}

func (i GetSubaccountSubscriptionsValueArray) ToGetSubaccountSubscriptionsValueArrayOutput() GetSubaccountSubscriptionsValueArrayOutput {
	return i.ToGetSubaccountSubscriptionsValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountSubscriptionsValueArray) ToGetSubaccountSubscriptionsValueArrayOutputWithContext(ctx context.Context) GetSubaccountSubscriptionsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountSubscriptionsValueArrayOutput)
}

func (i GetSubaccountSubscriptionsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountSubscriptionsValue] {
	return pulumix.Output[[]GetSubaccountSubscriptionsValue]{
		OutputState: i.ToGetSubaccountSubscriptionsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountSubscriptionsValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountSubscriptionsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountSubscriptionsValue)(nil)).Elem()
}

func (o GetSubaccountSubscriptionsValueOutput) ToGetSubaccountSubscriptionsValueOutput() GetSubaccountSubscriptionsValueOutput {
	return o
}

func (o GetSubaccountSubscriptionsValueOutput) ToGetSubaccountSubscriptionsValueOutputWithContext(ctx context.Context) GetSubaccountSubscriptionsValueOutput {
	return o
}

func (o GetSubaccountSubscriptionsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountSubscriptionsValue] {
	return pulumix.Output[GetSubaccountSubscriptionsValue]{
		OutputState: o.OutputState,
	}
}

// The list of features specific to this plan.
func (o GetSubaccountSubscriptionsValueOutput) AdditionalPlanFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) []string { return v.AdditionalPlanFeatures }).(pulumi.StringArrayOutput)
}

// The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to a XSUAA service instance.
func (o GetSubaccountSubscriptionsValueOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.AppId }).(pulumi.StringOutput)
}

// The unique registration name of the deployed multitenant application as defined by the app developer.
func (o GetSubaccountSubscriptionsValueOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.AppName }).(pulumi.StringOutput)
}

// The authentication provider of the multitenant application. * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level. * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).
func (o GetSubaccountSubscriptionsValueOutput) AuthenticationProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.AuthenticationProvider }).(pulumi.StringOutput)
}

// The state of the automation solution.
func (o GetSubaccountSubscriptionsValueOutput) AutomationState() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.AutomationState }).(pulumi.StringOutput)
}

// The message that describes the automation solution state.
func (o GetSubaccountSubscriptionsValueOutput) AutomationStateMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.AutomationStateMessage }).(pulumi.StringOutput)
}

// The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs.
func (o GetSubaccountSubscriptionsValueOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.Category }).(pulumi.StringOutput)
}

// The display name of the category for customer-facing UIs.
func (o GetSubaccountSubscriptionsValueOutput) CategoryDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.CategoryDisplayName }).(pulumi.StringOutput)
}

// The commercial name of the deployed multitenant application as defined by the app developer.
func (o GetSubaccountSubscriptionsValueOutput) CommercialAppName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.CommercialAppName }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountSubscriptionsValueOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Shows whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP.
func (o GetSubaccountSubscriptionsValueOutput) CustomerDeveloped() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) bool { return v.CustomerDeveloped }).(pulumi.BoolOutput)
}

// The description of the multitenant application.
func (o GetSubaccountSubscriptionsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.Description }).(pulumi.StringOutput)
}

// The display name of the application for customer-facing UIs.
func (o GetSubaccountSubscriptionsValueOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The name of the formations solution associated with the multitenant application.
func (o GetSubaccountSubscriptionsValueOutput) FormationSolutionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.FormationSolutionName }).(pulumi.StringOutput)
}

// The ID of the associated global account.
func (o GetSubaccountSubscriptionsValueOutput) GlobalaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.GlobalaccountId }).(pulumi.StringOutput)
}

// The technical ID generated by XSUAA for a multitenant application when a consumer subscribes to the application.
func (o GetSubaccountSubscriptionsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.Id }).(pulumi.StringOutput)
}

// The application's incident-tracking component provided in metadata for customer-facing UIs.
func (o GetSubaccountSubscriptionsValueOutput) IncidentTrackingComponent() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.IncidentTrackingComponent }).(pulumi.StringOutput)
}

// The set of words or phrases assigned to the multitenant application subscription.
func (o GetSubaccountSubscriptionsValueOutput) Labels() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) map[string][]string { return v.Labels }).(pulumi.StringArrayMapOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountSubscriptionsValueOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.LastModified }).(pulumi.StringOutput)
}

// The description of the plan for customer-facing UIs.
func (o GetSubaccountSubscriptionsValueOutput) PlanDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.PlanDescription }).(pulumi.StringOutput)
}

// The plan name of the application to which the consumer has subscribed.
func (o GetSubaccountSubscriptionsValueOutput) PlanName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.PlanName }).(pulumi.StringOutput)
}

// The ID of the landscape-specific environment.
func (o GetSubaccountSubscriptionsValueOutput) PlatformEntityId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.PlatformEntityId }).(pulumi.StringOutput)
}

// The total amount the subscribed subaccount is entitled to consume.
func (o GetSubaccountSubscriptionsValueOutput) Quota() pulumi.IntOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) int { return v.Quota }).(pulumi.IntOutput)
}

// The short description of the multitenant application for customer-facing UIs.
func (o GetSubaccountSubscriptionsValueOutput) ShortDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.ShortDescription }).(pulumi.StringOutput)
}

// The subscription state of the subaccount regarding the multitenant application.
func (o GetSubaccountSubscriptionsValueOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.State }).(pulumi.StringOutput)
}

// The ID of the subaccount which is subscribed to the multitenant application.
func (o GetSubaccountSubscriptionsValueOutput) SubscribedSubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.SubscribedSubaccountId }).(pulumi.StringOutput)
}

// The ID of the tenant which is subscribed to a multitenant application.
func (o GetSubaccountSubscriptionsValueOutput) SubscribedTenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.SubscribedTenantId }).(pulumi.StringOutput)
}

// The URL for app users to launch the subscribed application.
func (o GetSubaccountSubscriptionsValueOutput) SubscriptionUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.SubscriptionUrl }).(pulumi.StringOutput)
}

// Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters.
func (o GetSubaccountSubscriptionsValueOutput) SupportsParametersUpdates() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) bool { return v.SupportsParametersUpdates }).(pulumi.BoolOutput)
}

// Specifies whether a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount.
func (o GetSubaccountSubscriptionsValueOutput) SupportsPlanUpdates() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) bool { return v.SupportsPlanUpdates }).(pulumi.BoolOutput)
}

// The tenant ID of the application provider.
func (o GetSubaccountSubscriptionsValueOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsValue) string { return v.TenantId }).(pulumi.StringOutput)
}

type GetSubaccountSubscriptionsValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountSubscriptionsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountSubscriptionsValue)(nil)).Elem()
}

func (o GetSubaccountSubscriptionsValueArrayOutput) ToGetSubaccountSubscriptionsValueArrayOutput() GetSubaccountSubscriptionsValueArrayOutput {
	return o
}

func (o GetSubaccountSubscriptionsValueArrayOutput) ToGetSubaccountSubscriptionsValueArrayOutputWithContext(ctx context.Context) GetSubaccountSubscriptionsValueArrayOutput {
	return o
}

func (o GetSubaccountSubscriptionsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountSubscriptionsValue] {
	return pulumix.Output[[]GetSubaccountSubscriptionsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountSubscriptionsValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountSubscriptionsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountSubscriptionsValue {
		return vs[0].([]GetSubaccountSubscriptionsValue)[vs[1].(int)]
	}).(GetSubaccountSubscriptionsValueOutput)
}

type GetSubaccountTrustConfigurationsValue struct {
	// Shows whether any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.
	AutoCreateShadowUsers bool `pulumi:"autoCreateShadowUsers"`
	// Shows whether end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.
	AvailableForUserLogon bool `pulumi:"availableForUserLogon"`
	// The description of the trust configuration.
	Description string `pulumi:"description"`
	// The tenant's domain which should be used for user logon.
	Domain string `pulumi:"domain"`
	// The origin of the identity provider.
	//
	// Deprecated: Use the `origin` attribute instead
	Id string `pulumi:"id"`
	// The name of the Identity Authentication tenant the subaccount is connected to.
	IdentityProvider string `pulumi:"identityProvider"`
	// Short string that helps users to identify the link for login.
	LinkText string `pulumi:"linkText"`
	// The display name of the trust configuration.
	Name string `pulumi:"name"`
	// The origin of the identity provider.
	Origin string `pulumi:"origin"`
	// The protocol used to establish trust with the identity provider.
	Protocol string `pulumi:"protocol"`
	// Shows whether the trust configuration can be modified.
	ReadOnly bool `pulumi:"readOnly"`
	// Shows whether the identity provider is currently 'active' or 'inactive'.
	Status string `pulumi:"status"`
	// The trust type.
	Type string `pulumi:"type"`
}

// GetSubaccountTrustConfigurationsValueInput is an input type that accepts GetSubaccountTrustConfigurationsValueArgs and GetSubaccountTrustConfigurationsValueOutput values.
// You can construct a concrete instance of `GetSubaccountTrustConfigurationsValueInput` via:
//
//	GetSubaccountTrustConfigurationsValueArgs{...}
type GetSubaccountTrustConfigurationsValueInput interface {
	pulumi.Input

	ToGetSubaccountTrustConfigurationsValueOutput() GetSubaccountTrustConfigurationsValueOutput
	ToGetSubaccountTrustConfigurationsValueOutputWithContext(context.Context) GetSubaccountTrustConfigurationsValueOutput
}

type GetSubaccountTrustConfigurationsValueArgs struct {
	// Shows whether any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.
	AutoCreateShadowUsers pulumi.BoolInput `pulumi:"autoCreateShadowUsers"`
	// Shows whether end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.
	AvailableForUserLogon pulumi.BoolInput `pulumi:"availableForUserLogon"`
	// The description of the trust configuration.
	Description pulumi.StringInput `pulumi:"description"`
	// The tenant's domain which should be used for user logon.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The origin of the identity provider.
	//
	// Deprecated: Use the `origin` attribute instead
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Identity Authentication tenant the subaccount is connected to.
	IdentityProvider pulumi.StringInput `pulumi:"identityProvider"`
	// Short string that helps users to identify the link for login.
	LinkText pulumi.StringInput `pulumi:"linkText"`
	// The display name of the trust configuration.
	Name pulumi.StringInput `pulumi:"name"`
	// The origin of the identity provider.
	Origin pulumi.StringInput `pulumi:"origin"`
	// The protocol used to establish trust with the identity provider.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Shows whether the trust configuration can be modified.
	ReadOnly pulumi.BoolInput `pulumi:"readOnly"`
	// Shows whether the identity provider is currently 'active' or 'inactive'.
	Status pulumi.StringInput `pulumi:"status"`
	// The trust type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetSubaccountTrustConfigurationsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountTrustConfigurationsValue)(nil)).Elem()
}

func (i GetSubaccountTrustConfigurationsValueArgs) ToGetSubaccountTrustConfigurationsValueOutput() GetSubaccountTrustConfigurationsValueOutput {
	return i.ToGetSubaccountTrustConfigurationsValueOutputWithContext(context.Background())
}

func (i GetSubaccountTrustConfigurationsValueArgs) ToGetSubaccountTrustConfigurationsValueOutputWithContext(ctx context.Context) GetSubaccountTrustConfigurationsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountTrustConfigurationsValueOutput)
}

func (i GetSubaccountTrustConfigurationsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountTrustConfigurationsValue] {
	return pulumix.Output[GetSubaccountTrustConfigurationsValue]{
		OutputState: i.ToGetSubaccountTrustConfigurationsValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountTrustConfigurationsValueArrayInput is an input type that accepts GetSubaccountTrustConfigurationsValueArray and GetSubaccountTrustConfigurationsValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountTrustConfigurationsValueArrayInput` via:
//
//	GetSubaccountTrustConfigurationsValueArray{ GetSubaccountTrustConfigurationsValueArgs{...} }
type GetSubaccountTrustConfigurationsValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountTrustConfigurationsValueArrayOutput() GetSubaccountTrustConfigurationsValueArrayOutput
	ToGetSubaccountTrustConfigurationsValueArrayOutputWithContext(context.Context) GetSubaccountTrustConfigurationsValueArrayOutput
}

type GetSubaccountTrustConfigurationsValueArray []GetSubaccountTrustConfigurationsValueInput

func (GetSubaccountTrustConfigurationsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountTrustConfigurationsValue)(nil)).Elem()
}

func (i GetSubaccountTrustConfigurationsValueArray) ToGetSubaccountTrustConfigurationsValueArrayOutput() GetSubaccountTrustConfigurationsValueArrayOutput {
	return i.ToGetSubaccountTrustConfigurationsValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountTrustConfigurationsValueArray) ToGetSubaccountTrustConfigurationsValueArrayOutputWithContext(ctx context.Context) GetSubaccountTrustConfigurationsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountTrustConfigurationsValueArrayOutput)
}

func (i GetSubaccountTrustConfigurationsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountTrustConfigurationsValue] {
	return pulumix.Output[[]GetSubaccountTrustConfigurationsValue]{
		OutputState: i.ToGetSubaccountTrustConfigurationsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountTrustConfigurationsValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountTrustConfigurationsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountTrustConfigurationsValue)(nil)).Elem()
}

func (o GetSubaccountTrustConfigurationsValueOutput) ToGetSubaccountTrustConfigurationsValueOutput() GetSubaccountTrustConfigurationsValueOutput {
	return o
}

func (o GetSubaccountTrustConfigurationsValueOutput) ToGetSubaccountTrustConfigurationsValueOutputWithContext(ctx context.Context) GetSubaccountTrustConfigurationsValueOutput {
	return o
}

func (o GetSubaccountTrustConfigurationsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountTrustConfigurationsValue] {
	return pulumix.Output[GetSubaccountTrustConfigurationsValue]{
		OutputState: o.OutputState,
	}
}

// Shows whether any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.
func (o GetSubaccountTrustConfigurationsValueOutput) AutoCreateShadowUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) bool { return v.AutoCreateShadowUsers }).(pulumi.BoolOutput)
}

// Shows whether end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.
func (o GetSubaccountTrustConfigurationsValueOutput) AvailableForUserLogon() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) bool { return v.AvailableForUserLogon }).(pulumi.BoolOutput)
}

// The description of the trust configuration.
func (o GetSubaccountTrustConfigurationsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.Description }).(pulumi.StringOutput)
}

// The tenant's domain which should be used for user logon.
func (o GetSubaccountTrustConfigurationsValueOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.Domain }).(pulumi.StringOutput)
}

// The origin of the identity provider.
//
// Deprecated: Use the `origin` attribute instead
func (o GetSubaccountTrustConfigurationsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Identity Authentication tenant the subaccount is connected to.
func (o GetSubaccountTrustConfigurationsValueOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.IdentityProvider }).(pulumi.StringOutput)
}

// Short string that helps users to identify the link for login.
func (o GetSubaccountTrustConfigurationsValueOutput) LinkText() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.LinkText }).(pulumi.StringOutput)
}

// The display name of the trust configuration.
func (o GetSubaccountTrustConfigurationsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.Name }).(pulumi.StringOutput)
}

// The origin of the identity provider.
func (o GetSubaccountTrustConfigurationsValueOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.Origin }).(pulumi.StringOutput)
}

// The protocol used to establish trust with the identity provider.
func (o GetSubaccountTrustConfigurationsValueOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.Protocol }).(pulumi.StringOutput)
}

// Shows whether the trust configuration can be modified.
func (o GetSubaccountTrustConfigurationsValueOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

// Shows whether the identity provider is currently 'active' or 'inactive'.
func (o GetSubaccountTrustConfigurationsValueOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.Status }).(pulumi.StringOutput)
}

// The trust type.
func (o GetSubaccountTrustConfigurationsValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountTrustConfigurationsValue) string { return v.Type }).(pulumi.StringOutput)
}

type GetSubaccountTrustConfigurationsValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountTrustConfigurationsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountTrustConfigurationsValue)(nil)).Elem()
}

func (o GetSubaccountTrustConfigurationsValueArrayOutput) ToGetSubaccountTrustConfigurationsValueArrayOutput() GetSubaccountTrustConfigurationsValueArrayOutput {
	return o
}

func (o GetSubaccountTrustConfigurationsValueArrayOutput) ToGetSubaccountTrustConfigurationsValueArrayOutputWithContext(ctx context.Context) GetSubaccountTrustConfigurationsValueArrayOutput {
	return o
}

func (o GetSubaccountTrustConfigurationsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountTrustConfigurationsValue] {
	return pulumix.Output[[]GetSubaccountTrustConfigurationsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountTrustConfigurationsValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountTrustConfigurationsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountTrustConfigurationsValue {
		return vs[0].([]GetSubaccountTrustConfigurationsValue)[vs[1].(int)]
	}).(GetSubaccountTrustConfigurationsValueOutput)
}

type GetSubaccountsValue struct {
	// Shows whether the subaccount can use beta services and applications.
	BetaEnabled bool `pulumi:"betaEnabled"`
	// The details of the user that created the subaccount.
	CreatedBy string `pulumi:"createdBy"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// The description of the subaccount.
	Description string `pulumi:"description"`
	// The unique ID of the subaccount.
	Id string `pulumi:"id"`
	// The set of words or phrases assigned to the subaccount.
	Labels map[string][]string `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified string `pulumi:"lastModified"`
	// A descriptive name of the subaccount for customer-facing UIs.
	Name string `pulumi:"name"`
	// The features of parent entity of the subaccount.
	ParentFeatures []string `pulumi:"parentFeatures"`
	// The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
	ParentId string `pulumi:"parentId"`
	// The region in which the subaccount was created.
	Region string `pulumi:"region"`
	// The current state of the subaccount. Possible values are:
	State     string `pulumi:"state"`
	Subdomain string `pulumi:"subdomain"`
	Usage     string `pulumi:"usage"`
}

// GetSubaccountsValueInput is an input type that accepts GetSubaccountsValueArgs and GetSubaccountsValueOutput values.
// You can construct a concrete instance of `GetSubaccountsValueInput` via:
//
//	GetSubaccountsValueArgs{...}
type GetSubaccountsValueInput interface {
	pulumi.Input

	ToGetSubaccountsValueOutput() GetSubaccountsValueOutput
	ToGetSubaccountsValueOutputWithContext(context.Context) GetSubaccountsValueOutput
}

type GetSubaccountsValueArgs struct {
	// Shows whether the subaccount can use beta services and applications.
	BetaEnabled pulumi.BoolInput `pulumi:"betaEnabled"`
	// The details of the user that created the subaccount.
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringInput `pulumi:"createdDate"`
	// The description of the subaccount.
	Description pulumi.StringInput `pulumi:"description"`
	// The unique ID of the subaccount.
	Id pulumi.StringInput `pulumi:"id"`
	// The set of words or phrases assigned to the subaccount.
	Labels pulumi.StringArrayMapInput `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringInput `pulumi:"lastModified"`
	// A descriptive name of the subaccount for customer-facing UIs.
	Name pulumi.StringInput `pulumi:"name"`
	// The features of parent entity of the subaccount.
	ParentFeatures pulumi.StringArrayInput `pulumi:"parentFeatures"`
	// The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
	ParentId pulumi.StringInput `pulumi:"parentId"`
	// The region in which the subaccount was created.
	Region pulumi.StringInput `pulumi:"region"`
	// The current state of the subaccount. Possible values are:
	State     pulumi.StringInput `pulumi:"state"`
	Subdomain pulumi.StringInput `pulumi:"subdomain"`
	Usage     pulumi.StringInput `pulumi:"usage"`
}

func (GetSubaccountsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountsValue)(nil)).Elem()
}

func (i GetSubaccountsValueArgs) ToGetSubaccountsValueOutput() GetSubaccountsValueOutput {
	return i.ToGetSubaccountsValueOutputWithContext(context.Background())
}

func (i GetSubaccountsValueArgs) ToGetSubaccountsValueOutputWithContext(ctx context.Context) GetSubaccountsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountsValueOutput)
}

func (i GetSubaccountsValueArgs) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountsValue] {
	return pulumix.Output[GetSubaccountsValue]{
		OutputState: i.ToGetSubaccountsValueOutputWithContext(ctx).OutputState,
	}
}

// GetSubaccountsValueArrayInput is an input type that accepts GetSubaccountsValueArray and GetSubaccountsValueArrayOutput values.
// You can construct a concrete instance of `GetSubaccountsValueArrayInput` via:
//
//	GetSubaccountsValueArray{ GetSubaccountsValueArgs{...} }
type GetSubaccountsValueArrayInput interface {
	pulumi.Input

	ToGetSubaccountsValueArrayOutput() GetSubaccountsValueArrayOutput
	ToGetSubaccountsValueArrayOutputWithContext(context.Context) GetSubaccountsValueArrayOutput
}

type GetSubaccountsValueArray []GetSubaccountsValueInput

func (GetSubaccountsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountsValue)(nil)).Elem()
}

func (i GetSubaccountsValueArray) ToGetSubaccountsValueArrayOutput() GetSubaccountsValueArrayOutput {
	return i.ToGetSubaccountsValueArrayOutputWithContext(context.Background())
}

func (i GetSubaccountsValueArray) ToGetSubaccountsValueArrayOutputWithContext(ctx context.Context) GetSubaccountsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSubaccountsValueArrayOutput)
}

func (i GetSubaccountsValueArray) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountsValue] {
	return pulumix.Output[[]GetSubaccountsValue]{
		OutputState: i.ToGetSubaccountsValueArrayOutputWithContext(ctx).OutputState,
	}
}

type GetSubaccountsValueOutput struct{ *pulumi.OutputState }

func (GetSubaccountsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountsValue)(nil)).Elem()
}

func (o GetSubaccountsValueOutput) ToGetSubaccountsValueOutput() GetSubaccountsValueOutput {
	return o
}

func (o GetSubaccountsValueOutput) ToGetSubaccountsValueOutputWithContext(ctx context.Context) GetSubaccountsValueOutput {
	return o
}

func (o GetSubaccountsValueOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountsValue] {
	return pulumix.Output[GetSubaccountsValue]{
		OutputState: o.OutputState,
	}
}

// Shows whether the subaccount can use beta services and applications.
func (o GetSubaccountsValueOutput) BetaEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountsValue) bool { return v.BetaEnabled }).(pulumi.BoolOutput)
}

// The details of the user that created the subaccount.
func (o GetSubaccountsValueOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountsValueOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The description of the subaccount.
func (o GetSubaccountsValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.Description }).(pulumi.StringOutput)
}

// The unique ID of the subaccount.
func (o GetSubaccountsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.Id }).(pulumi.StringOutput)
}

// The set of words or phrases assigned to the subaccount.
func (o GetSubaccountsValueOutput) Labels() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetSubaccountsValue) map[string][]string { return v.Labels }).(pulumi.StringArrayMapOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountsValueOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.LastModified }).(pulumi.StringOutput)
}

// A descriptive name of the subaccount for customer-facing UIs.
func (o GetSubaccountsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.Name }).(pulumi.StringOutput)
}

// The features of parent entity of the subaccount.
func (o GetSubaccountsValueOutput) ParentFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountsValue) []string { return v.ParentFeatures }).(pulumi.StringArrayOutput)
}

// The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
func (o GetSubaccountsValueOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.ParentId }).(pulumi.StringOutput)
}

// The region in which the subaccount was created.
func (o GetSubaccountsValueOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.Region }).(pulumi.StringOutput)
}

// The current state of the subaccount. Possible values are:
func (o GetSubaccountsValueOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.State }).(pulumi.StringOutput)
}

func (o GetSubaccountsValueOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.Subdomain }).(pulumi.StringOutput)
}

func (o GetSubaccountsValueOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsValue) string { return v.Usage }).(pulumi.StringOutput)
}

type GetSubaccountsValueArrayOutput struct{ *pulumi.OutputState }

func (GetSubaccountsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSubaccountsValue)(nil)).Elem()
}

func (o GetSubaccountsValueArrayOutput) ToGetSubaccountsValueArrayOutput() GetSubaccountsValueArrayOutput {
	return o
}

func (o GetSubaccountsValueArrayOutput) ToGetSubaccountsValueArrayOutputWithContext(ctx context.Context) GetSubaccountsValueArrayOutput {
	return o
}

func (o GetSubaccountsValueArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetSubaccountsValue] {
	return pulumix.Output[[]GetSubaccountsValue]{
		OutputState: o.OutputState,
	}
}

func (o GetSubaccountsValueArrayOutput) Index(i pulumi.IntInput) GetSubaccountsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSubaccountsValue {
		return vs[0].([]GetSubaccountsValue)[vs[1].(int)]
	}).(GetSubaccountsValueOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryRoleCollectionRoleInput)(nil)).Elem(), DirectoryRoleCollectionRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectoryRoleCollectionRoleArrayInput)(nil)).Elem(), DirectoryRoleCollectionRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountRoleCollectionRoleInput)(nil)).Elem(), GlobalaccountRoleCollectionRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountRoleCollectionRoleArrayInput)(nil)).Elem(), GlobalaccountRoleCollectionRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountEnvironmentInstanceTimeoutsInput)(nil)).Elem(), SubaccountEnvironmentInstanceTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountEnvironmentInstanceTimeoutsPtrInput)(nil)).Elem(), SubaccountEnvironmentInstanceTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountRoleCollectionRoleInput)(nil)).Elem(), SubaccountRoleCollectionRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountRoleCollectionRoleArrayInput)(nil)).Elem(), SubaccountRoleCollectionRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountServiceInstanceTimeoutsInput)(nil)).Elem(), SubaccountServiceInstanceTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountServiceInstanceTimeoutsPtrInput)(nil)).Elem(), SubaccountServiceInstanceTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoriesValueInput)(nil)).Elem(), GetDirectoriesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoriesValueArrayInput)(nil)).Elem(), GetDirectoriesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryEntitlementsValuesInput)(nil)).Elem(), GetDirectoryEntitlementsValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryEntitlementsValuesMapInput)(nil)).Elem(), GetDirectoryEntitlementsValuesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRoleCollectionRoleInput)(nil)).Elem(), GetDirectoryRoleCollectionRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRoleCollectionRoleArrayInput)(nil)).Elem(), GetDirectoryRoleCollectionRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRoleCollectionsValueInput)(nil)).Elem(), GetDirectoryRoleCollectionsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRoleCollectionsValueArrayInput)(nil)).Elem(), GetDirectoryRoleCollectionsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRoleCollectionsValueRoleInput)(nil)).Elem(), GetDirectoryRoleCollectionsValueRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRoleCollectionsValueRoleArrayInput)(nil)).Elem(), GetDirectoryRoleCollectionsValueRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRoleScopeInput)(nil)).Elem(), GetDirectoryRoleScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRoleScopeArrayInput)(nil)).Elem(), GetDirectoryRoleScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRolesValueInput)(nil)).Elem(), GetDirectoryRolesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRolesValueArrayInput)(nil)).Elem(), GetDirectoryRolesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRolesValueScopeInput)(nil)).Elem(), GetDirectoryRolesValueScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDirectoryRolesValueScopeArrayInput)(nil)).Elem(), GetDirectoryRolesValueScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountEntitlementsValuesInput)(nil)).Elem(), GetGlobalaccountEntitlementsValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountEntitlementsValuesMapInput)(nil)).Elem(), GetGlobalaccountEntitlementsValuesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRoleCollectionRoleInput)(nil)).Elem(), GetGlobalaccountRoleCollectionRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRoleCollectionRoleArrayInput)(nil)).Elem(), GetGlobalaccountRoleCollectionRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRoleCollectionsValueInput)(nil)).Elem(), GetGlobalaccountRoleCollectionsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRoleCollectionsValueArrayInput)(nil)).Elem(), GetGlobalaccountRoleCollectionsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRoleCollectionsValueRoleInput)(nil)).Elem(), GetGlobalaccountRoleCollectionsValueRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRoleCollectionsValueRoleArrayInput)(nil)).Elem(), GetGlobalaccountRoleCollectionsValueRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRoleScopeInput)(nil)).Elem(), GetGlobalaccountRoleScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRoleScopeArrayInput)(nil)).Elem(), GetGlobalaccountRoleScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRolesValueInput)(nil)).Elem(), GetGlobalaccountRolesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRolesValueArrayInput)(nil)).Elem(), GetGlobalaccountRolesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRolesValueScopeInput)(nil)).Elem(), GetGlobalaccountRolesValueScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountRolesValueScopeArrayInput)(nil)).Elem(), GetGlobalaccountRolesValueScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountTrustConfigurationsValueInput)(nil)).Elem(), GetGlobalaccountTrustConfigurationsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGlobalaccountTrustConfigurationsValueArrayInput)(nil)).Elem(), GetGlobalaccountTrustConfigurationsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsValueInput)(nil)).Elem(), GetRegionsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsValueArrayInput)(nil)).Elem(), GetRegionsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountAppOauth2ConfigurationInput)(nil)).Elem(), GetSubaccountAppOauth2ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountAppsValueInput)(nil)).Elem(), GetSubaccountAppsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountAppsValueArrayInput)(nil)).Elem(), GetSubaccountAppsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountAppsValueOauth2ConfigurationInput)(nil)).Elem(), GetSubaccountAppsValueOauth2ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountEntitlementsValuesInput)(nil)).Elem(), GetSubaccountEntitlementsValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountEntitlementsValuesMapInput)(nil)).Elem(), GetSubaccountEntitlementsValuesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountEnvironmentInstancesValueInput)(nil)).Elem(), GetSubaccountEnvironmentInstancesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountEnvironmentInstancesValueArrayInput)(nil)).Elem(), GetSubaccountEnvironmentInstancesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountEnvironmentsValueInput)(nil)).Elem(), GetSubaccountEnvironmentsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountEnvironmentsValueArrayInput)(nil)).Elem(), GetSubaccountEnvironmentsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRoleCollectionRoleInput)(nil)).Elem(), GetSubaccountRoleCollectionRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRoleCollectionRoleArrayInput)(nil)).Elem(), GetSubaccountRoleCollectionRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRoleCollectionsValueInput)(nil)).Elem(), GetSubaccountRoleCollectionsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRoleCollectionsValueArrayInput)(nil)).Elem(), GetSubaccountRoleCollectionsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRoleCollectionsValueRoleInput)(nil)).Elem(), GetSubaccountRoleCollectionsValueRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRoleCollectionsValueRoleArrayInput)(nil)).Elem(), GetSubaccountRoleCollectionsValueRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRoleScopeInput)(nil)).Elem(), GetSubaccountRoleScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRoleScopeArrayInput)(nil)).Elem(), GetSubaccountRoleScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRolesValueInput)(nil)).Elem(), GetSubaccountRolesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRolesValueArrayInput)(nil)).Elem(), GetSubaccountRolesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRolesValueScopeInput)(nil)).Elem(), GetSubaccountRolesValueScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountRolesValueScopeArrayInput)(nil)).Elem(), GetSubaccountRolesValueScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountServiceBindingsValueInput)(nil)).Elem(), GetSubaccountServiceBindingsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountServiceBindingsValueArrayInput)(nil)).Elem(), GetSubaccountServiceBindingsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountServiceInstancesValueInput)(nil)).Elem(), GetSubaccountServiceInstancesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountServiceInstancesValueArrayInput)(nil)).Elem(), GetSubaccountServiceInstancesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountServiceOfferingsValueInput)(nil)).Elem(), GetSubaccountServiceOfferingsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountServiceOfferingsValueArrayInput)(nil)).Elem(), GetSubaccountServiceOfferingsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountServicePlansValueInput)(nil)).Elem(), GetSubaccountServicePlansValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountServicePlansValueArrayInput)(nil)).Elem(), GetSubaccountServicePlansValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountSubscriptionsValueInput)(nil)).Elem(), GetSubaccountSubscriptionsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountSubscriptionsValueArrayInput)(nil)).Elem(), GetSubaccountSubscriptionsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountTrustConfigurationsValueInput)(nil)).Elem(), GetSubaccountTrustConfigurationsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountTrustConfigurationsValueArrayInput)(nil)).Elem(), GetSubaccountTrustConfigurationsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountsValueInput)(nil)).Elem(), GetSubaccountsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSubaccountsValueArrayInput)(nil)).Elem(), GetSubaccountsValueArray{})
	pulumi.RegisterOutputType(DirectoryRoleCollectionRoleOutput{})
	pulumi.RegisterOutputType(DirectoryRoleCollectionRoleArrayOutput{})
	pulumi.RegisterOutputType(GlobalaccountRoleCollectionRoleOutput{})
	pulumi.RegisterOutputType(GlobalaccountRoleCollectionRoleArrayOutput{})
	pulumi.RegisterOutputType(SubaccountEnvironmentInstanceTimeoutsOutput{})
	pulumi.RegisterOutputType(SubaccountEnvironmentInstanceTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(SubaccountRoleCollectionRoleOutput{})
	pulumi.RegisterOutputType(SubaccountRoleCollectionRoleArrayOutput{})
	pulumi.RegisterOutputType(SubaccountServiceInstanceTimeoutsOutput{})
	pulumi.RegisterOutputType(SubaccountServiceInstanceTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GetDirectoriesValueOutput{})
	pulumi.RegisterOutputType(GetDirectoriesValueArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoryEntitlementsValuesOutput{})
	pulumi.RegisterOutputType(GetDirectoryEntitlementsValuesMapOutput{})
	pulumi.RegisterOutputType(GetDirectoryRoleCollectionRoleOutput{})
	pulumi.RegisterOutputType(GetDirectoryRoleCollectionRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoryRoleCollectionsValueOutput{})
	pulumi.RegisterOutputType(GetDirectoryRoleCollectionsValueArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoryRoleCollectionsValueRoleOutput{})
	pulumi.RegisterOutputType(GetDirectoryRoleCollectionsValueRoleArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoryRoleScopeOutput{})
	pulumi.RegisterOutputType(GetDirectoryRoleScopeArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoryRolesValueOutput{})
	pulumi.RegisterOutputType(GetDirectoryRolesValueArrayOutput{})
	pulumi.RegisterOutputType(GetDirectoryRolesValueScopeOutput{})
	pulumi.RegisterOutputType(GetDirectoryRolesValueScopeArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountEntitlementsValuesOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountEntitlementsValuesMapOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRoleCollectionRoleOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRoleCollectionRoleArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRoleCollectionsValueOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRoleCollectionsValueArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRoleCollectionsValueRoleOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRoleCollectionsValueRoleArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRoleScopeOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRoleScopeArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRolesValueOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRolesValueArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRolesValueScopeOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountRolesValueScopeArrayOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountTrustConfigurationsValueOutput{})
	pulumi.RegisterOutputType(GetGlobalaccountTrustConfigurationsValueArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsValueOutput{})
	pulumi.RegisterOutputType(GetRegionsValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountAppOauth2ConfigurationOutput{})
	pulumi.RegisterOutputType(GetSubaccountAppsValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountAppsValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountAppsValueOauth2ConfigurationOutput{})
	pulumi.RegisterOutputType(GetSubaccountEntitlementsValuesOutput{})
	pulumi.RegisterOutputType(GetSubaccountEntitlementsValuesMapOutput{})
	pulumi.RegisterOutputType(GetSubaccountEnvironmentInstancesValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountEnvironmentInstancesValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountEnvironmentsValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountEnvironmentsValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountRoleCollectionRoleOutput{})
	pulumi.RegisterOutputType(GetSubaccountRoleCollectionRoleArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountRoleCollectionsValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountRoleCollectionsValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountRoleCollectionsValueRoleOutput{})
	pulumi.RegisterOutputType(GetSubaccountRoleCollectionsValueRoleArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountRoleScopeOutput{})
	pulumi.RegisterOutputType(GetSubaccountRoleScopeArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountRolesValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountRolesValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountRolesValueScopeOutput{})
	pulumi.RegisterOutputType(GetSubaccountRolesValueScopeArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountServiceBindingsValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountServiceBindingsValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountServiceInstancesValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountServiceInstancesValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountServiceOfferingsValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountServiceOfferingsValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountServicePlansValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountServicePlansValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountSubscriptionsValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountSubscriptionsValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountTrustConfigurationsValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountTrustConfigurationsValueArrayOutput{})
	pulumi.RegisterOutputType(GetSubaccountsValueOutput{})
	pulumi.RegisterOutputType(GetSubaccountsValueArrayOutput{})
}
