// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the details about a directory.
//
// __Tip:__
// You must be assigned to the global account admin role, or the directory admin if the directory is configured to manage its authorizations.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/account-model>
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.LookupDirectory(ctx, &btp.LookupDirectoryArgs{
//				Id: "dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDirectory(ctx *pulumi.Context, args *LookupDirectoryArgs, opts ...pulumi.InvokeOption) (*LookupDirectoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDirectoryResult
	err := ctx.Invoke("btp:index/getDirectory:getDirectory", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDirectory.
type LookupDirectoryArgs struct {
	// The ID of the directory.
	Id string `pulumi:"id"`
}

// A collection of values returned by getDirectory.
type LookupDirectoryResult struct {
	// The details of the user that created the directory.
	CreatedBy string `pulumi:"createdBy"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// The description of the directory.
	Description string `pulumi:"description"`
	// The features that are enabled for the directory. Possible values are:
	Features []string `pulumi:"features"`
	// The ID of the directory.
	Id           string              `pulumi:"id"`
	Labels       map[string][]string `pulumi:"labels"`
	LastModified string              `pulumi:"lastModified"`
	Name         string              `pulumi:"name"`
	ParentId     string              `pulumi:"parentId"`
	State        string              `pulumi:"state"`
	Subdomain    string              `pulumi:"subdomain"`
}

func LookupDirectoryOutput(ctx *pulumi.Context, args LookupDirectoryOutputArgs, opts ...pulumi.InvokeOption) LookupDirectoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDirectoryResult, error) {
			args := v.(LookupDirectoryArgs)
			r, err := LookupDirectory(ctx, &args, opts...)
			var s LookupDirectoryResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDirectoryResultOutput)
}

// A collection of arguments for invoking getDirectory.
type LookupDirectoryOutputArgs struct {
	// The ID of the directory.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupDirectoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryArgs)(nil)).Elem()
}

// A collection of values returned by getDirectory.
type LookupDirectoryResultOutput struct{ *pulumi.OutputState }

func (LookupDirectoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDirectoryResult)(nil)).Elem()
}

func (o LookupDirectoryResultOutput) ToLookupDirectoryResultOutput() LookupDirectoryResultOutput {
	return o
}

func (o LookupDirectoryResultOutput) ToLookupDirectoryResultOutputWithContext(ctx context.Context) LookupDirectoryResultOutput {
	return o
}

func (o LookupDirectoryResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupDirectoryResult] {
	return pulumix.Output[LookupDirectoryResult]{
		OutputState: o.OutputState,
	}
}

// The details of the user that created the directory.
func (o LookupDirectoryResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o LookupDirectoryResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The description of the directory.
func (o LookupDirectoryResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Description }).(pulumi.StringOutput)
}

// The features that are enabled for the directory. Possible values are:
func (o LookupDirectoryResultOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDirectoryResult) []string { return v.Features }).(pulumi.StringArrayOutput)
}

// The ID of the directory.
func (o LookupDirectoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) Labels() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v LookupDirectoryResult) map[string][]string { return v.Labels }).(pulumi.StringArrayMapOutput)
}

func (o LookupDirectoryResultOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.LastModified }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.ParentId }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupDirectoryResultOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDirectoryResult) string { return v.Subdomain }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDirectoryResultOutput{})
}
