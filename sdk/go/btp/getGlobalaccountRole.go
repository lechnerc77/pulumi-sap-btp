// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details about a specific global account role.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetGlobalaccountRole(ctx, &btp.GetGlobalaccountRoleArgs{
//				AppId:            "xsuaa!t1",
//				Name:             "User and Role Auditor",
//				RoleTemplateName: "xsuaa_auditor",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGlobalaccountRole(ctx *pulumi.Context, args *GetGlobalaccountRoleArgs, opts ...pulumi.InvokeOption) (*GetGlobalaccountRoleResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGlobalaccountRoleResult
	err := ctx.Invoke("btp:index/getGlobalaccountRole:getGlobalaccountRole", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGlobalaccountRole.
type GetGlobalaccountRoleArgs struct {
	// The ID of the xsuaa application.
	AppId string `pulumi:"appId"`
	// The name of the role.
	Name string `pulumi:"name"`
	// The name of the role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
}

// A collection of values returned by getGlobalaccountRole.
type GetGlobalaccountRoleResult struct {
	// The ID of the xsuaa application.
	AppId string `pulumi:"appId"`
	// The description of the role.
	Description string `pulumi:"description"`
	// The ID of the global account
	//
	// Deprecated: Use the `btp_globalaccount` datasource instead
	Id string `pulumi:"id"`
	// The name of the role.
	Name string `pulumi:"name"`
	// Shows whether the role can be modified or not.
	ReadOnly bool `pulumi:"readOnly"`
	// The name of the role template.
	RoleTemplateName string `pulumi:"roleTemplateName"`
	// The scopes available with this role.
	Scopes []GetGlobalaccountRoleScope `pulumi:"scopes"`
}

func GetGlobalaccountRoleOutput(ctx *pulumi.Context, args GetGlobalaccountRoleOutputArgs, opts ...pulumi.InvokeOption) GetGlobalaccountRoleResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGlobalaccountRoleResult, error) {
			args := v.(GetGlobalaccountRoleArgs)
			r, err := GetGlobalaccountRole(ctx, &args, opts...)
			var s GetGlobalaccountRoleResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGlobalaccountRoleResultOutput)
}

// A collection of arguments for invoking getGlobalaccountRole.
type GetGlobalaccountRoleOutputArgs struct {
	// The ID of the xsuaa application.
	AppId pulumi.StringInput `pulumi:"appId"`
	// The name of the role.
	Name pulumi.StringInput `pulumi:"name"`
	// The name of the role template.
	RoleTemplateName pulumi.StringInput `pulumi:"roleTemplateName"`
}

func (GetGlobalaccountRoleOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleArgs)(nil)).Elem()
}

// A collection of values returned by getGlobalaccountRole.
type GetGlobalaccountRoleResultOutput struct{ *pulumi.OutputState }

func (GetGlobalaccountRoleResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalaccountRoleResult)(nil)).Elem()
}

func (o GetGlobalaccountRoleResultOutput) ToGetGlobalaccountRoleResultOutput() GetGlobalaccountRoleResultOutput {
	return o
}

func (o GetGlobalaccountRoleResultOutput) ToGetGlobalaccountRoleResultOutputWithContext(ctx context.Context) GetGlobalaccountRoleResultOutput {
	return o
}

func (o GetGlobalaccountRoleResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetGlobalaccountRoleResult] {
	return pulumix.Output[GetGlobalaccountRoleResult]{
		OutputState: o.OutputState,
	}
}

// The ID of the xsuaa application.
func (o GetGlobalaccountRoleResultOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleResult) string { return v.AppId }).(pulumi.StringOutput)
}

// The description of the role.
func (o GetGlobalaccountRoleResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the global account
//
// Deprecated: Use the `btp_globalaccount` datasource instead
func (o GetGlobalaccountRoleResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the role.
func (o GetGlobalaccountRoleResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleResult) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the role can be modified or not.
func (o GetGlobalaccountRoleResultOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleResult) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

// The name of the role template.
func (o GetGlobalaccountRoleResultOutput) RoleTemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleResult) string { return v.RoleTemplateName }).(pulumi.StringOutput)
}

// The scopes available with this role.
func (o GetGlobalaccountRoleResultOutput) Scopes() GetGlobalaccountRoleScopeArrayOutput {
	return o.ApplyT(func(v GetGlobalaccountRoleResult) []GetGlobalaccountRoleScope { return v.Scopes }).(GetGlobalaccountRoleScopeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGlobalaccountRoleResultOutput{})
}
