// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"errors"
	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a subaccount in a global account or directory.
//
// __Tip:__
// You must be assigned to the global account or directory admin role.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/account-model>
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.NewSubaccount(ctx, "myProject", &btp.SubaccountArgs{
//				Subdomain: pulumi.String("my-project"),
//				Region:    pulumi.String("eu30"),
//			})
//			if err != nil {
//				return err
//			}
//			all, err := btp.GetRegions(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			var myProjectOnAzure []*btp.Subaccount
//			for key0, _ := range "TODO: For expression" {
//				__res, err := btp.NewSubaccount(ctx, fmt.Sprintf("myProjectOnAzure-%v", key0), &btp.SubaccountArgs{
//					Subdomain: pulumi.String(fmt.Sprintf("my-project-%v", key0)),
//					Region:    pulumi.String(key0),
//				})
//				if err != nil {
//					return err
//				}
//				myProjectOnAzure = append(myProjectOnAzure, __res)
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// terraform
//
// ```sh
//
//	$ pulumi import btp:index/subaccount:Subaccount <resource_name> <subaccount_id>
//
// ```
//
// ```sh
//
//	$ pulumi import btp:index/subaccount:Subaccount my_project 6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f
//
// ```
type Subaccount struct {
	pulumi.CustomResourceState

	// Shows whether the subaccount can use beta services and applications.
	BetaEnabled pulumi.BoolOutput `pulumi:"betaEnabled"`
	// The details of the user that created the subaccount.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// A description of the subaccount for customer-facing UIs.
	Description pulumi.StringOutput `pulumi:"description"`
	// The set of words or phrases assigned to the subaccount.
	Labels pulumi.StringArrayMapOutput `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringOutput `pulumi:"lastModified"`
	// A descriptive name of the subaccount for customer-facing UIs.
	Name pulumi.StringOutput `pulumi:"name"`
	// The features of parent entity of the subaccount.
	ParentFeatures pulumi.StringArrayOutput `pulumi:"parentFeatures"`
	// The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
	ParentId pulumi.StringOutput `pulumi:"parentId"`
	// The region in which the subaccount was created.
	Region pulumi.StringOutput `pulumi:"region"`
	// The current state of the subaccount. Possible values are: | state | description | | --- | --- | | `OK` | The CRUD
	// operation or series of operations completed successfully. | | `STARTED` | CRUD operation on the subaccount has started.
	// | | `CANCELED` | The operation or processing was canceled by the operator. | | `PROCESSING` | A series of operations
	// related to the subaccount are in progress. | | `PROCESSING_FAILED` | The processing operations failed. | | `CREATING` |
	// Creating the subaccount is in progress. | | `CREATION_FAILED` | The creation operation failed, and the subaccount was
	// not created or was created but cannot be used. | | `UPDATING` | Updating the subaccount is in progress. | |
	// `UPDATE_FAILED` | The update operation failed, and the subaccount was not updated. | | `UPDATE_DIRECTORY_TYPE_FAILED` |
	// The update of the directory type failed. | | `UPDATE_ACCOUNT_TYPE_FAILED` | The update of the account type failed. | |
	// `DELETING` | Deleting the subaccount is in progress. | | `DELETION_FAILED` | The deletion of the subaccount failed, and
	// the subaccount was not deleted. | | `MOVING` | Moving the subaccount is in progress. | | `MOVE_FAILED` | The moving of
	// the subaccount failed. | | `MOVING_TO_OTHER_GA` | Moving the subaccount to another global account is in progress. | |
	// `MOVE_TO_OTHER_GA_FAILED` | Moving the subaccount to another global account failed. | | `PENDING_REVIEW` | The
	// processing operation has been stopped for reviewing and can be restarted by the operator. | | `MIGRATING` | Migrating
	// the subaccount from Neo to Cloud Foundry. | | `MIGRATED` | The migration of the subaccount completed. | |
	// `MIGRATION_FAILED` | The migration of the subaccount failed and the subaccount was not migrated. | |
	// `ROLLBACK_MIGRATION_PROCESSING` | The migration of the subaccount was rolled back and the subaccount is not migrated. |
	// | `SUSPENSION_FAILED` | The suspension operations failed. |
	State pulumi.StringOutput `pulumi:"state"`
	// The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.
	Subdomain pulumi.StringOutput `pulumi:"subdomain"`
	// Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:
	Usage pulumi.StringOutput `pulumi:"usage"`
}

// NewSubaccount registers a new resource with the given unique name, arguments, and options.
func NewSubaccount(ctx *pulumi.Context,
	name string, args *SubaccountArgs, opts ...pulumi.ResourceOption) (*Subaccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.Subdomain == nil {
		return nil, errors.New("invalid value for required argument 'Subdomain'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Subaccount
	err := ctx.RegisterResource("btp:index/subaccount:Subaccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubaccount gets an existing Subaccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubaccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubaccountState, opts ...pulumi.ResourceOption) (*Subaccount, error) {
	var resource Subaccount
	err := ctx.ReadResource("btp:index/subaccount:Subaccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Subaccount resources.
type subaccountState struct {
	// Shows whether the subaccount can use beta services and applications.
	BetaEnabled *bool `pulumi:"betaEnabled"`
	// The details of the user that created the subaccount.
	CreatedBy *string `pulumi:"createdBy"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate *string `pulumi:"createdDate"`
	// A description of the subaccount for customer-facing UIs.
	Description *string `pulumi:"description"`
	// The set of words or phrases assigned to the subaccount.
	Labels map[string][]string `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified *string `pulumi:"lastModified"`
	// A descriptive name of the subaccount for customer-facing UIs.
	Name *string `pulumi:"name"`
	// The features of parent entity of the subaccount.
	ParentFeatures []string `pulumi:"parentFeatures"`
	// The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
	ParentId *string `pulumi:"parentId"`
	// The region in which the subaccount was created.
	Region *string `pulumi:"region"`
	// The current state of the subaccount. Possible values are: | state | description | | --- | --- | | `OK` | The CRUD
	// operation or series of operations completed successfully. | | `STARTED` | CRUD operation on the subaccount has started.
	// | | `CANCELED` | The operation or processing was canceled by the operator. | | `PROCESSING` | A series of operations
	// related to the subaccount are in progress. | | `PROCESSING_FAILED` | The processing operations failed. | | `CREATING` |
	// Creating the subaccount is in progress. | | `CREATION_FAILED` | The creation operation failed, and the subaccount was
	// not created or was created but cannot be used. | | `UPDATING` | Updating the subaccount is in progress. | |
	// `UPDATE_FAILED` | The update operation failed, and the subaccount was not updated. | | `UPDATE_DIRECTORY_TYPE_FAILED` |
	// The update of the directory type failed. | | `UPDATE_ACCOUNT_TYPE_FAILED` | The update of the account type failed. | |
	// `DELETING` | Deleting the subaccount is in progress. | | `DELETION_FAILED` | The deletion of the subaccount failed, and
	// the subaccount was not deleted. | | `MOVING` | Moving the subaccount is in progress. | | `MOVE_FAILED` | The moving of
	// the subaccount failed. | | `MOVING_TO_OTHER_GA` | Moving the subaccount to another global account is in progress. | |
	// `MOVE_TO_OTHER_GA_FAILED` | Moving the subaccount to another global account failed. | | `PENDING_REVIEW` | The
	// processing operation has been stopped for reviewing and can be restarted by the operator. | | `MIGRATING` | Migrating
	// the subaccount from Neo to Cloud Foundry. | | `MIGRATED` | The migration of the subaccount completed. | |
	// `MIGRATION_FAILED` | The migration of the subaccount failed and the subaccount was not migrated. | |
	// `ROLLBACK_MIGRATION_PROCESSING` | The migration of the subaccount was rolled back and the subaccount is not migrated. |
	// | `SUSPENSION_FAILED` | The suspension operations failed. |
	State *string `pulumi:"state"`
	// The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.
	Subdomain *string `pulumi:"subdomain"`
	// Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:
	Usage *string `pulumi:"usage"`
}

type SubaccountState struct {
	// Shows whether the subaccount can use beta services and applications.
	BetaEnabled pulumi.BoolPtrInput
	// The details of the user that created the subaccount.
	CreatedBy pulumi.StringPtrInput
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringPtrInput
	// A description of the subaccount for customer-facing UIs.
	Description pulumi.StringPtrInput
	// The set of words or phrases assigned to the subaccount.
	Labels pulumi.StringArrayMapInput
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringPtrInput
	// A descriptive name of the subaccount for customer-facing UIs.
	Name pulumi.StringPtrInput
	// The features of parent entity of the subaccount.
	ParentFeatures pulumi.StringArrayInput
	// The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
	ParentId pulumi.StringPtrInput
	// The region in which the subaccount was created.
	Region pulumi.StringPtrInput
	// The current state of the subaccount. Possible values are: | state | description | | --- | --- | | `OK` | The CRUD
	// operation or series of operations completed successfully. | | `STARTED` | CRUD operation on the subaccount has started.
	// | | `CANCELED` | The operation or processing was canceled by the operator. | | `PROCESSING` | A series of operations
	// related to the subaccount are in progress. | | `PROCESSING_FAILED` | The processing operations failed. | | `CREATING` |
	// Creating the subaccount is in progress. | | `CREATION_FAILED` | The creation operation failed, and the subaccount was
	// not created or was created but cannot be used. | | `UPDATING` | Updating the subaccount is in progress. | |
	// `UPDATE_FAILED` | The update operation failed, and the subaccount was not updated. | | `UPDATE_DIRECTORY_TYPE_FAILED` |
	// The update of the directory type failed. | | `UPDATE_ACCOUNT_TYPE_FAILED` | The update of the account type failed. | |
	// `DELETING` | Deleting the subaccount is in progress. | | `DELETION_FAILED` | The deletion of the subaccount failed, and
	// the subaccount was not deleted. | | `MOVING` | Moving the subaccount is in progress. | | `MOVE_FAILED` | The moving of
	// the subaccount failed. | | `MOVING_TO_OTHER_GA` | Moving the subaccount to another global account is in progress. | |
	// `MOVE_TO_OTHER_GA_FAILED` | Moving the subaccount to another global account failed. | | `PENDING_REVIEW` | The
	// processing operation has been stopped for reviewing and can be restarted by the operator. | | `MIGRATING` | Migrating
	// the subaccount from Neo to Cloud Foundry. | | `MIGRATED` | The migration of the subaccount completed. | |
	// `MIGRATION_FAILED` | The migration of the subaccount failed and the subaccount was not migrated. | |
	// `ROLLBACK_MIGRATION_PROCESSING` | The migration of the subaccount was rolled back and the subaccount is not migrated. |
	// | `SUSPENSION_FAILED` | The suspension operations failed. |
	State pulumi.StringPtrInput
	// The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.
	Subdomain pulumi.StringPtrInput
	// Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:
	Usage pulumi.StringPtrInput
}

func (SubaccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*subaccountState)(nil)).Elem()
}

type subaccountArgs struct {
	// Shows whether the subaccount can use beta services and applications.
	BetaEnabled *bool `pulumi:"betaEnabled"`
	// A description of the subaccount for customer-facing UIs.
	Description *string `pulumi:"description"`
	// The set of words or phrases assigned to the subaccount.
	Labels map[string][]string `pulumi:"labels"`
	// A descriptive name of the subaccount for customer-facing UIs.
	Name *string `pulumi:"name"`
	// The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
	ParentId *string `pulumi:"parentId"`
	// The region in which the subaccount was created.
	Region string `pulumi:"region"`
	// The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.
	Subdomain string `pulumi:"subdomain"`
	// Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:
	Usage *string `pulumi:"usage"`
}

// The set of arguments for constructing a Subaccount resource.
type SubaccountArgs struct {
	// Shows whether the subaccount can use beta services and applications.
	BetaEnabled pulumi.BoolPtrInput
	// A description of the subaccount for customer-facing UIs.
	Description pulumi.StringPtrInput
	// The set of words or phrases assigned to the subaccount.
	Labels pulumi.StringArrayMapInput
	// A descriptive name of the subaccount for customer-facing UIs.
	Name pulumi.StringPtrInput
	// The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
	ParentId pulumi.StringPtrInput
	// The region in which the subaccount was created.
	Region pulumi.StringInput
	// The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.
	Subdomain pulumi.StringInput
	// Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:
	Usage pulumi.StringPtrInput
}

func (SubaccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subaccountArgs)(nil)).Elem()
}

type SubaccountInput interface {
	pulumi.Input

	ToSubaccountOutput() SubaccountOutput
	ToSubaccountOutputWithContext(ctx context.Context) SubaccountOutput
}

func (*Subaccount) ElementType() reflect.Type {
	return reflect.TypeOf((**Subaccount)(nil)).Elem()
}

func (i *Subaccount) ToSubaccountOutput() SubaccountOutput {
	return i.ToSubaccountOutputWithContext(context.Background())
}

func (i *Subaccount) ToSubaccountOutputWithContext(ctx context.Context) SubaccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountOutput)
}

func (i *Subaccount) ToOutput(ctx context.Context) pulumix.Output[*Subaccount] {
	return pulumix.Output[*Subaccount]{
		OutputState: i.ToSubaccountOutputWithContext(ctx).OutputState,
	}
}

// SubaccountArrayInput is an input type that accepts SubaccountArray and SubaccountArrayOutput values.
// You can construct a concrete instance of `SubaccountArrayInput` via:
//
//	SubaccountArray{ SubaccountArgs{...} }
type SubaccountArrayInput interface {
	pulumi.Input

	ToSubaccountArrayOutput() SubaccountArrayOutput
	ToSubaccountArrayOutputWithContext(context.Context) SubaccountArrayOutput
}

type SubaccountArray []SubaccountInput

func (SubaccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Subaccount)(nil)).Elem()
}

func (i SubaccountArray) ToSubaccountArrayOutput() SubaccountArrayOutput {
	return i.ToSubaccountArrayOutputWithContext(context.Background())
}

func (i SubaccountArray) ToSubaccountArrayOutputWithContext(ctx context.Context) SubaccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountArrayOutput)
}

func (i SubaccountArray) ToOutput(ctx context.Context) pulumix.Output[[]*Subaccount] {
	return pulumix.Output[[]*Subaccount]{
		OutputState: i.ToSubaccountArrayOutputWithContext(ctx).OutputState,
	}
}

// SubaccountMapInput is an input type that accepts SubaccountMap and SubaccountMapOutput values.
// You can construct a concrete instance of `SubaccountMapInput` via:
//
//	SubaccountMap{ "key": SubaccountArgs{...} }
type SubaccountMapInput interface {
	pulumi.Input

	ToSubaccountMapOutput() SubaccountMapOutput
	ToSubaccountMapOutputWithContext(context.Context) SubaccountMapOutput
}

type SubaccountMap map[string]SubaccountInput

func (SubaccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Subaccount)(nil)).Elem()
}

func (i SubaccountMap) ToSubaccountMapOutput() SubaccountMapOutput {
	return i.ToSubaccountMapOutputWithContext(context.Background())
}

func (i SubaccountMap) ToSubaccountMapOutputWithContext(ctx context.Context) SubaccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountMapOutput)
}

func (i SubaccountMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*Subaccount] {
	return pulumix.Output[map[string]*Subaccount]{
		OutputState: i.ToSubaccountMapOutputWithContext(ctx).OutputState,
	}
}

type SubaccountOutput struct{ *pulumi.OutputState }

func (SubaccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Subaccount)(nil)).Elem()
}

func (o SubaccountOutput) ToSubaccountOutput() SubaccountOutput {
	return o
}

func (o SubaccountOutput) ToSubaccountOutputWithContext(ctx context.Context) SubaccountOutput {
	return o
}

func (o SubaccountOutput) ToOutput(ctx context.Context) pulumix.Output[*Subaccount] {
	return pulumix.Output[*Subaccount]{
		OutputState: o.OutputState,
	}
}

// Shows whether the subaccount can use beta services and applications.
func (o SubaccountOutput) BetaEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.BoolOutput { return v.BetaEnabled }).(pulumi.BoolOutput)
}

// The details of the user that created the subaccount.
func (o SubaccountOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o SubaccountOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// A description of the subaccount for customer-facing UIs.
func (o SubaccountOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The set of words or phrases assigned to the subaccount.
func (o SubaccountOutput) Labels() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringArrayMapOutput { return v.Labels }).(pulumi.StringArrayMapOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o SubaccountOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.LastModified }).(pulumi.StringOutput)
}

// A descriptive name of the subaccount for customer-facing UIs.
func (o SubaccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The features of parent entity of the subaccount.
func (o SubaccountOutput) ParentFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringArrayOutput { return v.ParentFeatures }).(pulumi.StringArrayOutput)
}

// The ID of the subaccount’s parent entity. If the subaccount is located directly in the global account (not in a directory), then this is the ID of the global account.
func (o SubaccountOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.ParentId }).(pulumi.StringOutput)
}

// The region in which the subaccount was created.
func (o SubaccountOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The current state of the subaccount. Possible values are: | state | description | | --- | --- | | `OK` | The CRUD
// operation or series of operations completed successfully. | | `STARTED` | CRUD operation on the subaccount has started.
// | | `CANCELED` | The operation or processing was canceled by the operator. | | `PROCESSING` | A series of operations
// related to the subaccount are in progress. | | `PROCESSING_FAILED` | The processing operations failed. | | `CREATING` |
// Creating the subaccount is in progress. | | `CREATION_FAILED` | The creation operation failed, and the subaccount was
// not created or was created but cannot be used. | | `UPDATING` | Updating the subaccount is in progress. | |
// `UPDATE_FAILED` | The update operation failed, and the subaccount was not updated. | | `UPDATE_DIRECTORY_TYPE_FAILED` |
// The update of the directory type failed. | | `UPDATE_ACCOUNT_TYPE_FAILED` | The update of the account type failed. | |
// `DELETING` | Deleting the subaccount is in progress. | | `DELETION_FAILED` | The deletion of the subaccount failed, and
// the subaccount was not deleted. | | `MOVING` | Moving the subaccount is in progress. | | `MOVE_FAILED` | The moving of
// the subaccount failed. | | `MOVING_TO_OTHER_GA` | Moving the subaccount to another global account is in progress. | |
// `MOVE_TO_OTHER_GA_FAILED` | Moving the subaccount to another global account failed. | | `PENDING_REVIEW` | The
// processing operation has been stopped for reviewing and can be restarted by the operator. | | `MIGRATING` | Migrating
// the subaccount from Neo to Cloud Foundry. | | `MIGRATED` | The migration of the subaccount completed. | |
// `MIGRATION_FAILED` | The migration of the subaccount failed and the subaccount was not migrated. | |
// `ROLLBACK_MIGRATION_PROCESSING` | The migration of the subaccount was rolled back and the subaccount is not migrated. |
// | `SUSPENSION_FAILED` | The suspension operations failed. |
func (o SubaccountOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The subdomain that becomes part of the path used to access the authorization tenant of the subaccount. Must be unique within the defined region and cannot be changed after the subaccount has been created.
func (o SubaccountOutput) Subdomain() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.Subdomain }).(pulumi.StringOutput)
}

// Shows whether the subaccount is used for production purposes. This flag can help your cloud operator to take appropriate action when handling incidents that are related to mission-critical accounts in production systems. Do not apply for subaccounts that are used for nonproduction purposes, such as development, testing, and demos. Applying this setting this does not modify the subaccount. Possible values are:
func (o SubaccountOutput) Usage() pulumi.StringOutput {
	return o.ApplyT(func(v *Subaccount) pulumi.StringOutput { return v.Usage }).(pulumi.StringOutput)
}

type SubaccountArrayOutput struct{ *pulumi.OutputState }

func (SubaccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Subaccount)(nil)).Elem()
}

func (o SubaccountArrayOutput) ToSubaccountArrayOutput() SubaccountArrayOutput {
	return o
}

func (o SubaccountArrayOutput) ToSubaccountArrayOutputWithContext(ctx context.Context) SubaccountArrayOutput {
	return o
}

func (o SubaccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*Subaccount] {
	return pulumix.Output[[]*Subaccount]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountArrayOutput) Index(i pulumi.IntInput) SubaccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Subaccount {
		return vs[0].([]*Subaccount)[vs[1].(int)]
	}).(SubaccountOutput)
}

type SubaccountMapOutput struct{ *pulumi.OutputState }

func (SubaccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Subaccount)(nil)).Elem()
}

func (o SubaccountMapOutput) ToSubaccountMapOutput() SubaccountMapOutput {
	return o
}

func (o SubaccountMapOutput) ToSubaccountMapOutputWithContext(ctx context.Context) SubaccountMapOutput {
	return o
}

func (o SubaccountMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*Subaccount] {
	return pulumix.Output[map[string]*Subaccount]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountMapOutput) MapIndex(k pulumi.StringInput) SubaccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Subaccount {
		return vs[0].(map[string]*Subaccount)[vs[1].(string)]
	}).(SubaccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountInput)(nil)).Elem(), &Subaccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountArrayInput)(nil)).Elem(), SubaccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountMapInput)(nil)).Elem(), SubaccountMap{})
	pulumi.RegisterOutputType(SubaccountOutput{})
	pulumi.RegisterOutputType(SubaccountArrayOutput{})
	pulumi.RegisterOutputType(SubaccountMapOutput{})
}
