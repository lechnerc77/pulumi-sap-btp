// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"errors"
	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a role collection in a global account.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts>
//
// ## Import
//
// terraform
//
// ```sh
//
//	$ pulumi import btp:index/globalaccountRoleCollection:GlobalaccountRoleCollection <resource_name> '<name>'
//
// ```
//
// ```sh
//
//	$ pulumi import btp:index/globalaccountRoleCollection:GlobalaccountRoleCollection globalaccount_viewer 'Global Account Viewer'
//
// ```
type GlobalaccountRoleCollection struct {
	pulumi.CustomResourceState

	// The description of the role collection.
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the role collection.
	Name  pulumi.StringOutput                        `pulumi:"name"`
	Roles GlobalaccountRoleCollectionRoleArrayOutput `pulumi:"roles"`
}

// NewGlobalaccountRoleCollection registers a new resource with the given unique name, arguments, and options.
func NewGlobalaccountRoleCollection(ctx *pulumi.Context,
	name string, args *GlobalaccountRoleCollectionArgs, opts ...pulumi.ResourceOption) (*GlobalaccountRoleCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GlobalaccountRoleCollection
	err := ctx.RegisterResource("btp:index/globalaccountRoleCollection:GlobalaccountRoleCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalaccountRoleCollection gets an existing GlobalaccountRoleCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalaccountRoleCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalaccountRoleCollectionState, opts ...pulumi.ResourceOption) (*GlobalaccountRoleCollection, error) {
	var resource GlobalaccountRoleCollection
	err := ctx.ReadResource("btp:index/globalaccountRoleCollection:GlobalaccountRoleCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalaccountRoleCollection resources.
type globalaccountRoleCollectionState struct {
	// The description of the role collection.
	Description *string `pulumi:"description"`
	// The name of the role collection.
	Name  *string                           `pulumi:"name"`
	Roles []GlobalaccountRoleCollectionRole `pulumi:"roles"`
}

type GlobalaccountRoleCollectionState struct {
	// The description of the role collection.
	Description pulumi.StringPtrInput
	// The name of the role collection.
	Name  pulumi.StringPtrInput
	Roles GlobalaccountRoleCollectionRoleArrayInput
}

func (GlobalaccountRoleCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalaccountRoleCollectionState)(nil)).Elem()
}

type globalaccountRoleCollectionArgs struct {
	// The description of the role collection.
	Description *string `pulumi:"description"`
	// The name of the role collection.
	Name  *string                           `pulumi:"name"`
	Roles []GlobalaccountRoleCollectionRole `pulumi:"roles"`
}

// The set of arguments for constructing a GlobalaccountRoleCollection resource.
type GlobalaccountRoleCollectionArgs struct {
	// The description of the role collection.
	Description pulumi.StringPtrInput
	// The name of the role collection.
	Name  pulumi.StringPtrInput
	Roles GlobalaccountRoleCollectionRoleArrayInput
}

func (GlobalaccountRoleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalaccountRoleCollectionArgs)(nil)).Elem()
}

type GlobalaccountRoleCollectionInput interface {
	pulumi.Input

	ToGlobalaccountRoleCollectionOutput() GlobalaccountRoleCollectionOutput
	ToGlobalaccountRoleCollectionOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionOutput
}

func (*GlobalaccountRoleCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalaccountRoleCollection)(nil)).Elem()
}

func (i *GlobalaccountRoleCollection) ToGlobalaccountRoleCollectionOutput() GlobalaccountRoleCollectionOutput {
	return i.ToGlobalaccountRoleCollectionOutputWithContext(context.Background())
}

func (i *GlobalaccountRoleCollection) ToGlobalaccountRoleCollectionOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountRoleCollectionOutput)
}

func (i *GlobalaccountRoleCollection) ToOutput(ctx context.Context) pulumix.Output[*GlobalaccountRoleCollection] {
	return pulumix.Output[*GlobalaccountRoleCollection]{
		OutputState: i.ToGlobalaccountRoleCollectionOutputWithContext(ctx).OutputState,
	}
}

// GlobalaccountRoleCollectionArrayInput is an input type that accepts GlobalaccountRoleCollectionArray and GlobalaccountRoleCollectionArrayOutput values.
// You can construct a concrete instance of `GlobalaccountRoleCollectionArrayInput` via:
//
//	GlobalaccountRoleCollectionArray{ GlobalaccountRoleCollectionArgs{...} }
type GlobalaccountRoleCollectionArrayInput interface {
	pulumi.Input

	ToGlobalaccountRoleCollectionArrayOutput() GlobalaccountRoleCollectionArrayOutput
	ToGlobalaccountRoleCollectionArrayOutputWithContext(context.Context) GlobalaccountRoleCollectionArrayOutput
}

type GlobalaccountRoleCollectionArray []GlobalaccountRoleCollectionInput

func (GlobalaccountRoleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalaccountRoleCollection)(nil)).Elem()
}

func (i GlobalaccountRoleCollectionArray) ToGlobalaccountRoleCollectionArrayOutput() GlobalaccountRoleCollectionArrayOutput {
	return i.ToGlobalaccountRoleCollectionArrayOutputWithContext(context.Background())
}

func (i GlobalaccountRoleCollectionArray) ToGlobalaccountRoleCollectionArrayOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountRoleCollectionArrayOutput)
}

func (i GlobalaccountRoleCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalaccountRoleCollection] {
	return pulumix.Output[[]*GlobalaccountRoleCollection]{
		OutputState: i.ToGlobalaccountRoleCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

// GlobalaccountRoleCollectionMapInput is an input type that accepts GlobalaccountRoleCollectionMap and GlobalaccountRoleCollectionMapOutput values.
// You can construct a concrete instance of `GlobalaccountRoleCollectionMapInput` via:
//
//	GlobalaccountRoleCollectionMap{ "key": GlobalaccountRoleCollectionArgs{...} }
type GlobalaccountRoleCollectionMapInput interface {
	pulumi.Input

	ToGlobalaccountRoleCollectionMapOutput() GlobalaccountRoleCollectionMapOutput
	ToGlobalaccountRoleCollectionMapOutputWithContext(context.Context) GlobalaccountRoleCollectionMapOutput
}

type GlobalaccountRoleCollectionMap map[string]GlobalaccountRoleCollectionInput

func (GlobalaccountRoleCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalaccountRoleCollection)(nil)).Elem()
}

func (i GlobalaccountRoleCollectionMap) ToGlobalaccountRoleCollectionMapOutput() GlobalaccountRoleCollectionMapOutput {
	return i.ToGlobalaccountRoleCollectionMapOutputWithContext(context.Background())
}

func (i GlobalaccountRoleCollectionMap) ToGlobalaccountRoleCollectionMapOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountRoleCollectionMapOutput)
}

func (i GlobalaccountRoleCollectionMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalaccountRoleCollection] {
	return pulumix.Output[map[string]*GlobalaccountRoleCollection]{
		OutputState: i.ToGlobalaccountRoleCollectionMapOutputWithContext(ctx).OutputState,
	}
}

type GlobalaccountRoleCollectionOutput struct{ *pulumi.OutputState }

func (GlobalaccountRoleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalaccountRoleCollection)(nil)).Elem()
}

func (o GlobalaccountRoleCollectionOutput) ToGlobalaccountRoleCollectionOutput() GlobalaccountRoleCollectionOutput {
	return o
}

func (o GlobalaccountRoleCollectionOutput) ToGlobalaccountRoleCollectionOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionOutput {
	return o
}

func (o GlobalaccountRoleCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[*GlobalaccountRoleCollection] {
	return pulumix.Output[*GlobalaccountRoleCollection]{
		OutputState: o.OutputState,
	}
}

// The description of the role collection.
func (o GlobalaccountRoleCollectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountRoleCollection) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the role collection.
func (o GlobalaccountRoleCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountRoleCollection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GlobalaccountRoleCollectionOutput) Roles() GlobalaccountRoleCollectionRoleArrayOutput {
	return o.ApplyT(func(v *GlobalaccountRoleCollection) GlobalaccountRoleCollectionRoleArrayOutput { return v.Roles }).(GlobalaccountRoleCollectionRoleArrayOutput)
}

type GlobalaccountRoleCollectionArrayOutput struct{ *pulumi.OutputState }

func (GlobalaccountRoleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalaccountRoleCollection)(nil)).Elem()
}

func (o GlobalaccountRoleCollectionArrayOutput) ToGlobalaccountRoleCollectionArrayOutput() GlobalaccountRoleCollectionArrayOutput {
	return o
}

func (o GlobalaccountRoleCollectionArrayOutput) ToGlobalaccountRoleCollectionArrayOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionArrayOutput {
	return o
}

func (o GlobalaccountRoleCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalaccountRoleCollection] {
	return pulumix.Output[[]*GlobalaccountRoleCollection]{
		OutputState: o.OutputState,
	}
}

func (o GlobalaccountRoleCollectionArrayOutput) Index(i pulumi.IntInput) GlobalaccountRoleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GlobalaccountRoleCollection {
		return vs[0].([]*GlobalaccountRoleCollection)[vs[1].(int)]
	}).(GlobalaccountRoleCollectionOutput)
}

type GlobalaccountRoleCollectionMapOutput struct{ *pulumi.OutputState }

func (GlobalaccountRoleCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalaccountRoleCollection)(nil)).Elem()
}

func (o GlobalaccountRoleCollectionMapOutput) ToGlobalaccountRoleCollectionMapOutput() GlobalaccountRoleCollectionMapOutput {
	return o
}

func (o GlobalaccountRoleCollectionMapOutput) ToGlobalaccountRoleCollectionMapOutputWithContext(ctx context.Context) GlobalaccountRoleCollectionMapOutput {
	return o
}

func (o GlobalaccountRoleCollectionMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalaccountRoleCollection] {
	return pulumix.Output[map[string]*GlobalaccountRoleCollection]{
		OutputState: o.OutputState,
	}
}

func (o GlobalaccountRoleCollectionMapOutput) MapIndex(k pulumi.StringInput) GlobalaccountRoleCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GlobalaccountRoleCollection {
		return vs[0].(map[string]*GlobalaccountRoleCollection)[vs[1].(string)]
	}).(GlobalaccountRoleCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountRoleCollectionInput)(nil)).Elem(), &GlobalaccountRoleCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountRoleCollectionArrayInput)(nil)).Elem(), GlobalaccountRoleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountRoleCollectionMapInput)(nil)).Elem(), GlobalaccountRoleCollectionMap{})
	pulumi.RegisterOutputType(GlobalaccountRoleCollectionOutput{})
	pulumi.RegisterOutputType(GlobalaccountRoleCollectionArrayOutput{})
	pulumi.RegisterOutputType(GlobalaccountRoleCollectionMapOutput{})
}
