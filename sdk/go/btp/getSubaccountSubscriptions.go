// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Lists all multitenant applications to which the subaccount is entitled to subscribe, including their subscription details.
//
// __Tip:__
// You must be assigned to the subaccount admin or viewer role.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetSubaccountSubscriptions(ctx, &btp.GetSubaccountSubscriptionsArgs{
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubaccountSubscriptions(ctx *pulumi.Context, args *GetSubaccountSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetSubaccountSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubaccountSubscriptionsResult
	err := ctx.Invoke("btp:index/getSubaccountSubscriptions:getSubaccountSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubaccountSubscriptions.
type GetSubaccountSubscriptionsArgs struct {
	SubaccountId string `pulumi:"subaccountId"`
}

// A collection of values returned by getSubaccountSubscriptions.
type GetSubaccountSubscriptionsResult struct {
	// The ID of the subaccount.
	//
	// Deprecated: Use the `subaccount_id` attribute instead
	Id           string                            `pulumi:"id"`
	SubaccountId string                            `pulumi:"subaccountId"`
	Values       []GetSubaccountSubscriptionsValue `pulumi:"values"`
}

func GetSubaccountSubscriptionsOutput(ctx *pulumi.Context, args GetSubaccountSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetSubaccountSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubaccountSubscriptionsResult, error) {
			args := v.(GetSubaccountSubscriptionsArgs)
			r, err := GetSubaccountSubscriptions(ctx, &args, opts...)
			var s GetSubaccountSubscriptionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubaccountSubscriptionsResultOutput)
}

// A collection of arguments for invoking getSubaccountSubscriptions.
type GetSubaccountSubscriptionsOutputArgs struct {
	SubaccountId pulumi.StringInput `pulumi:"subaccountId"`
}

func (GetSubaccountSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getSubaccountSubscriptions.
type GetSubaccountSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetSubaccountSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountSubscriptionsResult)(nil)).Elem()
}

func (o GetSubaccountSubscriptionsResultOutput) ToGetSubaccountSubscriptionsResultOutput() GetSubaccountSubscriptionsResultOutput {
	return o
}

func (o GetSubaccountSubscriptionsResultOutput) ToGetSubaccountSubscriptionsResultOutputWithContext(ctx context.Context) GetSubaccountSubscriptionsResultOutput {
	return o
}

func (o GetSubaccountSubscriptionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountSubscriptionsResult] {
	return pulumix.Output[GetSubaccountSubscriptionsResult]{
		OutputState: o.OutputState,
	}
}

// The ID of the subaccount.
//
// Deprecated: Use the `subaccount_id` attribute instead
func (o GetSubaccountSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSubaccountSubscriptionsResultOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsResult) string { return v.SubaccountId }).(pulumi.StringOutput)
}

func (o GetSubaccountSubscriptionsResultOutput) Values() GetSubaccountSubscriptionsValueArrayOutput {
	return o.ApplyT(func(v GetSubaccountSubscriptionsResult) []GetSubaccountSubscriptionsValue { return v.Values }).(GetSubaccountSubscriptionsValueArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubaccountSubscriptionsResultOutput{})
}
