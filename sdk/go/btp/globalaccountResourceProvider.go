// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"errors"
	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a resource provider instance to allow your global account to connect to your provider account on a non-SAP cloud vendor. Through this channel, you can consume remote service resources that you already own and are supported by SAP BTP.
// For example, if you are subscribed to Amazon Web Services (AWS) and have already purchased services, such as PostgreSQL, you can register the vendor as a resource provider in SAP BTP and consume this service across your subaccounts together with other services offered by SAP.
//
// The use of this functionality is subject to the availability of the supported non-SAP cloud vendors in your country/region.
//
// __Tips:__
// * You must be assigned to the global account admin role.
// * You can create more than one instance of a given resource provider, each with its unique configuration properties. In such cases, the display name and technical name should be descriptive enough so that you and developers can easily differentiate between each instance.
// * After you configure a new resource provider instance, its supported services are added as entitlements in your global account.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/managing-resource-providers>
//
// ## Import
//
// terraform
//
// ```sh
//
//	$ pulumi import btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider <resource_name> <resource_provider>,<unique_technical_name>
//
// ```
//
// ```sh
//
//	$ pulumi import btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider azure AZURE,my_azure_provider
//
// ```
type GlobalaccountResourceProvider struct {
	pulumi.CustomResourceState

	// The configuration properties for the resource provider as required by the vendor.
	Configuration pulumi.StringOutput `pulumi:"configuration"`
	// The description of the resource provider.
	Description pulumi.StringOutput `pulumi:"description"`
	// The descriptive name of the resource provider.
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// The cloud vendor from which to consume services through your subscribed account. Possible values are:
	ProviderType pulumi.StringOutput `pulumi:"providerType"`
	// The unique technical name of the resource provider.
	TechnicalName pulumi.StringOutput `pulumi:"technicalName"`
}

// NewGlobalaccountResourceProvider registers a new resource with the given unique name, arguments, and options.
func NewGlobalaccountResourceProvider(ctx *pulumi.Context,
	name string, args *GlobalaccountResourceProviderArgs, opts ...pulumi.ResourceOption) (*GlobalaccountResourceProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Configuration == nil {
		return nil, errors.New("invalid value for required argument 'Configuration'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.ProviderType == nil {
		return nil, errors.New("invalid value for required argument 'ProviderType'")
	}
	if args.TechnicalName == nil {
		return nil, errors.New("invalid value for required argument 'TechnicalName'")
	}
	if args.Configuration != nil {
		args.Configuration = pulumi.ToSecret(args.Configuration).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"configuration",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GlobalaccountResourceProvider
	err := ctx.RegisterResource("btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalaccountResourceProvider gets an existing GlobalaccountResourceProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalaccountResourceProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalaccountResourceProviderState, opts ...pulumi.ResourceOption) (*GlobalaccountResourceProvider, error) {
	var resource GlobalaccountResourceProvider
	err := ctx.ReadResource("btp:index/globalaccountResourceProvider:GlobalaccountResourceProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalaccountResourceProvider resources.
type globalaccountResourceProviderState struct {
	// The configuration properties for the resource provider as required by the vendor.
	Configuration *string `pulumi:"configuration"`
	// The description of the resource provider.
	Description *string `pulumi:"description"`
	// The descriptive name of the resource provider.
	DisplayName *string `pulumi:"displayName"`
	// The cloud vendor from which to consume services through your subscribed account. Possible values are:
	ProviderType *string `pulumi:"providerType"`
	// The unique technical name of the resource provider.
	TechnicalName *string `pulumi:"technicalName"`
}

type GlobalaccountResourceProviderState struct {
	// The configuration properties for the resource provider as required by the vendor.
	Configuration pulumi.StringPtrInput
	// The description of the resource provider.
	Description pulumi.StringPtrInput
	// The descriptive name of the resource provider.
	DisplayName pulumi.StringPtrInput
	// The cloud vendor from which to consume services through your subscribed account. Possible values are:
	ProviderType pulumi.StringPtrInput
	// The unique technical name of the resource provider.
	TechnicalName pulumi.StringPtrInput
}

func (GlobalaccountResourceProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalaccountResourceProviderState)(nil)).Elem()
}

type globalaccountResourceProviderArgs struct {
	// The configuration properties for the resource provider as required by the vendor.
	Configuration string `pulumi:"configuration"`
	// The description of the resource provider.
	Description *string `pulumi:"description"`
	// The descriptive name of the resource provider.
	DisplayName string `pulumi:"displayName"`
	// The cloud vendor from which to consume services through your subscribed account. Possible values are:
	ProviderType string `pulumi:"providerType"`
	// The unique technical name of the resource provider.
	TechnicalName string `pulumi:"technicalName"`
}

// The set of arguments for constructing a GlobalaccountResourceProvider resource.
type GlobalaccountResourceProviderArgs struct {
	// The configuration properties for the resource provider as required by the vendor.
	Configuration pulumi.StringInput
	// The description of the resource provider.
	Description pulumi.StringPtrInput
	// The descriptive name of the resource provider.
	DisplayName pulumi.StringInput
	// The cloud vendor from which to consume services through your subscribed account. Possible values are:
	ProviderType pulumi.StringInput
	// The unique technical name of the resource provider.
	TechnicalName pulumi.StringInput
}

func (GlobalaccountResourceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalaccountResourceProviderArgs)(nil)).Elem()
}

type GlobalaccountResourceProviderInput interface {
	pulumi.Input

	ToGlobalaccountResourceProviderOutput() GlobalaccountResourceProviderOutput
	ToGlobalaccountResourceProviderOutputWithContext(ctx context.Context) GlobalaccountResourceProviderOutput
}

func (*GlobalaccountResourceProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalaccountResourceProvider)(nil)).Elem()
}

func (i *GlobalaccountResourceProvider) ToGlobalaccountResourceProviderOutput() GlobalaccountResourceProviderOutput {
	return i.ToGlobalaccountResourceProviderOutputWithContext(context.Background())
}

func (i *GlobalaccountResourceProvider) ToGlobalaccountResourceProviderOutputWithContext(ctx context.Context) GlobalaccountResourceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountResourceProviderOutput)
}

func (i *GlobalaccountResourceProvider) ToOutput(ctx context.Context) pulumix.Output[*GlobalaccountResourceProvider] {
	return pulumix.Output[*GlobalaccountResourceProvider]{
		OutputState: i.ToGlobalaccountResourceProviderOutputWithContext(ctx).OutputState,
	}
}

// GlobalaccountResourceProviderArrayInput is an input type that accepts GlobalaccountResourceProviderArray and GlobalaccountResourceProviderArrayOutput values.
// You can construct a concrete instance of `GlobalaccountResourceProviderArrayInput` via:
//
//	GlobalaccountResourceProviderArray{ GlobalaccountResourceProviderArgs{...} }
type GlobalaccountResourceProviderArrayInput interface {
	pulumi.Input

	ToGlobalaccountResourceProviderArrayOutput() GlobalaccountResourceProviderArrayOutput
	ToGlobalaccountResourceProviderArrayOutputWithContext(context.Context) GlobalaccountResourceProviderArrayOutput
}

type GlobalaccountResourceProviderArray []GlobalaccountResourceProviderInput

func (GlobalaccountResourceProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalaccountResourceProvider)(nil)).Elem()
}

func (i GlobalaccountResourceProviderArray) ToGlobalaccountResourceProviderArrayOutput() GlobalaccountResourceProviderArrayOutput {
	return i.ToGlobalaccountResourceProviderArrayOutputWithContext(context.Background())
}

func (i GlobalaccountResourceProviderArray) ToGlobalaccountResourceProviderArrayOutputWithContext(ctx context.Context) GlobalaccountResourceProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountResourceProviderArrayOutput)
}

func (i GlobalaccountResourceProviderArray) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalaccountResourceProvider] {
	return pulumix.Output[[]*GlobalaccountResourceProvider]{
		OutputState: i.ToGlobalaccountResourceProviderArrayOutputWithContext(ctx).OutputState,
	}
}

// GlobalaccountResourceProviderMapInput is an input type that accepts GlobalaccountResourceProviderMap and GlobalaccountResourceProviderMapOutput values.
// You can construct a concrete instance of `GlobalaccountResourceProviderMapInput` via:
//
//	GlobalaccountResourceProviderMap{ "key": GlobalaccountResourceProviderArgs{...} }
type GlobalaccountResourceProviderMapInput interface {
	pulumi.Input

	ToGlobalaccountResourceProviderMapOutput() GlobalaccountResourceProviderMapOutput
	ToGlobalaccountResourceProviderMapOutputWithContext(context.Context) GlobalaccountResourceProviderMapOutput
}

type GlobalaccountResourceProviderMap map[string]GlobalaccountResourceProviderInput

func (GlobalaccountResourceProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalaccountResourceProvider)(nil)).Elem()
}

func (i GlobalaccountResourceProviderMap) ToGlobalaccountResourceProviderMapOutput() GlobalaccountResourceProviderMapOutput {
	return i.ToGlobalaccountResourceProviderMapOutputWithContext(context.Background())
}

func (i GlobalaccountResourceProviderMap) ToGlobalaccountResourceProviderMapOutputWithContext(ctx context.Context) GlobalaccountResourceProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountResourceProviderMapOutput)
}

func (i GlobalaccountResourceProviderMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalaccountResourceProvider] {
	return pulumix.Output[map[string]*GlobalaccountResourceProvider]{
		OutputState: i.ToGlobalaccountResourceProviderMapOutputWithContext(ctx).OutputState,
	}
}

type GlobalaccountResourceProviderOutput struct{ *pulumi.OutputState }

func (GlobalaccountResourceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalaccountResourceProvider)(nil)).Elem()
}

func (o GlobalaccountResourceProviderOutput) ToGlobalaccountResourceProviderOutput() GlobalaccountResourceProviderOutput {
	return o
}

func (o GlobalaccountResourceProviderOutput) ToGlobalaccountResourceProviderOutputWithContext(ctx context.Context) GlobalaccountResourceProviderOutput {
	return o
}

func (o GlobalaccountResourceProviderOutput) ToOutput(ctx context.Context) pulumix.Output[*GlobalaccountResourceProvider] {
	return pulumix.Output[*GlobalaccountResourceProvider]{
		OutputState: o.OutputState,
	}
}

// The configuration properties for the resource provider as required by the vendor.
func (o GlobalaccountResourceProviderOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountResourceProvider) pulumi.StringOutput { return v.Configuration }).(pulumi.StringOutput)
}

// The description of the resource provider.
func (o GlobalaccountResourceProviderOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountResourceProvider) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The descriptive name of the resource provider.
func (o GlobalaccountResourceProviderOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountResourceProvider) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// The cloud vendor from which to consume services through your subscribed account. Possible values are:
func (o GlobalaccountResourceProviderOutput) ProviderType() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountResourceProvider) pulumi.StringOutput { return v.ProviderType }).(pulumi.StringOutput)
}

// The unique technical name of the resource provider.
func (o GlobalaccountResourceProviderOutput) TechnicalName() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountResourceProvider) pulumi.StringOutput { return v.TechnicalName }).(pulumi.StringOutput)
}

type GlobalaccountResourceProviderArrayOutput struct{ *pulumi.OutputState }

func (GlobalaccountResourceProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalaccountResourceProvider)(nil)).Elem()
}

func (o GlobalaccountResourceProviderArrayOutput) ToGlobalaccountResourceProviderArrayOutput() GlobalaccountResourceProviderArrayOutput {
	return o
}

func (o GlobalaccountResourceProviderArrayOutput) ToGlobalaccountResourceProviderArrayOutputWithContext(ctx context.Context) GlobalaccountResourceProviderArrayOutput {
	return o
}

func (o GlobalaccountResourceProviderArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalaccountResourceProvider] {
	return pulumix.Output[[]*GlobalaccountResourceProvider]{
		OutputState: o.OutputState,
	}
}

func (o GlobalaccountResourceProviderArrayOutput) Index(i pulumi.IntInput) GlobalaccountResourceProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GlobalaccountResourceProvider {
		return vs[0].([]*GlobalaccountResourceProvider)[vs[1].(int)]
	}).(GlobalaccountResourceProviderOutput)
}

type GlobalaccountResourceProviderMapOutput struct{ *pulumi.OutputState }

func (GlobalaccountResourceProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalaccountResourceProvider)(nil)).Elem()
}

func (o GlobalaccountResourceProviderMapOutput) ToGlobalaccountResourceProviderMapOutput() GlobalaccountResourceProviderMapOutput {
	return o
}

func (o GlobalaccountResourceProviderMapOutput) ToGlobalaccountResourceProviderMapOutputWithContext(ctx context.Context) GlobalaccountResourceProviderMapOutput {
	return o
}

func (o GlobalaccountResourceProviderMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalaccountResourceProvider] {
	return pulumix.Output[map[string]*GlobalaccountResourceProvider]{
		OutputState: o.OutputState,
	}
}

func (o GlobalaccountResourceProviderMapOutput) MapIndex(k pulumi.StringInput) GlobalaccountResourceProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GlobalaccountResourceProvider {
		return vs[0].(map[string]*GlobalaccountResourceProvider)[vs[1].(string)]
	}).(GlobalaccountResourceProviderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountResourceProviderInput)(nil)).Elem(), &GlobalaccountResourceProvider{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountResourceProviderArrayInput)(nil)).Elem(), GlobalaccountResourceProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountResourceProviderMapInput)(nil)).Elem(), GlobalaccountResourceProviderMap{})
	pulumi.RegisterOutputType(GlobalaccountResourceProviderOutput{})
	pulumi.RegisterOutputType(GlobalaccountResourceProviderArrayOutput{})
	pulumi.RegisterOutputType(GlobalaccountResourceProviderMapOutput{})
}
