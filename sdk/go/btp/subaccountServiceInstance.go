// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"errors"
	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a service instance in a subaccount.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.NewSubaccountServiceInstance(ctx, "alertNotificationFreeSubaccountServiceInstance", &btp.SubaccountServiceInstanceArgs{
//				SubaccountId:  pulumi.String("6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"),
//				ServiceplanId: pulumi.String("b50d1b0b-2059-4f21-a014-2ea87752eb48"),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"xsappname":   "my-application",
//				"tenant-mode": "dedicated",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = btp.NewSubaccountServiceInstance(ctx, "xsuaaApplication", &btp.SubaccountServiceInstanceArgs{
//				SubaccountId:  pulumi.String("6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"),
//				ServiceplanId: pulumi.String("bd5e893f-81dd-4d10-8343-e02975e8ecd8"),
//				Parameters:    pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = btp.NewSubaccountServiceInstance(ctx, "alertNotificationFreeIndex/subaccountServiceInstanceSubaccountServiceInstance", &btp.SubaccountServiceInstanceArgs{
//				SubaccountId:  pulumi.String("6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"),
//				ServiceplanId: pulumi.String("b50d1b0b-2059-4f21-a014-2ea87752eb48"),
//				Timeouts: &btp.SubaccountServiceInstanceTimeoutsArgs{
//					Create: pulumi.String("25m"),
//					Update: pulumi.String("15m"),
//					Delete: pulumi.String("15m"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ### Restriction The import of service instances that can be configured via parameters only works if the corresponding service offering supports the retrieval of these parameters, which means that the `instances_retrievable` parameter of the service offering must be set to `true`. You can check this setting via the following data sourceterraform data "btp_subaccount_service_offering" "by_name" {
//
//	subaccount_id = <ID of your subaccount>
//
//	name
//
// = <name of the service offering> }
type SubaccountServiceInstance struct {
	pulumi.CustomResourceState

	// Contextual data for the resource.
	Context pulumi.StringOutput `pulumi:"context"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// The set of words or phrases assigned to the service instance.
	Labels pulumi.StringArrayMapOutput `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringOutput `pulumi:"lastModified"`
	// The name of the service instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// The configuration parameters for the service instance.
	Parameters pulumi.StringPtrOutput `pulumi:"parameters"`
	// The platform ID.
	PlatformId pulumi.StringOutput `pulumi:"platformId"`
	Ready      pulumi.BoolOutput   `pulumi:"ready"`
	// The ID of the instance to which the service instance refers.
	ReferencedInstanceId pulumi.StringOutput `pulumi:"referencedInstanceId"`
	// The ID of the service plan.
	ServiceplanId pulumi.StringOutput `pulumi:"serviceplanId"`
	// Shows whether the service instance is shared.
	Shared pulumi.BoolOutput `pulumi:"shared"`
	// The current state of the service instance.
	State pulumi.StringOutput `pulumi:"state"`
	// The ID of the subaccount.
	SubaccountId pulumi.StringOutput                        `pulumi:"subaccountId"`
	Timeouts     SubaccountServiceInstanceTimeoutsPtrOutput `pulumi:"timeouts"`
	// Shows whether the resource can be used.
	Usable pulumi.BoolOutput `pulumi:"usable"`
}

// NewSubaccountServiceInstance registers a new resource with the given unique name, arguments, and options.
func NewSubaccountServiceInstance(ctx *pulumi.Context,
	name string, args *SubaccountServiceInstanceArgs, opts ...pulumi.ResourceOption) (*SubaccountServiceInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ServiceplanId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceplanId'")
	}
	if args.SubaccountId == nil {
		return nil, errors.New("invalid value for required argument 'SubaccountId'")
	}
	if args.Parameters != nil {
		args.Parameters = pulumi.ToSecret(args.Parameters).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"parameters",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SubaccountServiceInstance
	err := ctx.RegisterResource("btp:index/subaccountServiceInstance:SubaccountServiceInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubaccountServiceInstance gets an existing SubaccountServiceInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubaccountServiceInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubaccountServiceInstanceState, opts ...pulumi.ResourceOption) (*SubaccountServiceInstance, error) {
	var resource SubaccountServiceInstance
	err := ctx.ReadResource("btp:index/subaccountServiceInstance:SubaccountServiceInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubaccountServiceInstance resources.
type subaccountServiceInstanceState struct {
	// Contextual data for the resource.
	Context *string `pulumi:"context"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate *string `pulumi:"createdDate"`
	// The set of words or phrases assigned to the service instance.
	Labels map[string][]string `pulumi:"labels"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified *string `pulumi:"lastModified"`
	// The name of the service instance.
	Name *string `pulumi:"name"`
	// The configuration parameters for the service instance.
	Parameters *string `pulumi:"parameters"`
	// The platform ID.
	PlatformId *string `pulumi:"platformId"`
	Ready      *bool   `pulumi:"ready"`
	// The ID of the instance to which the service instance refers.
	ReferencedInstanceId *string `pulumi:"referencedInstanceId"`
	// The ID of the service plan.
	ServiceplanId *string `pulumi:"serviceplanId"`
	// Shows whether the service instance is shared.
	Shared *bool `pulumi:"shared"`
	// The current state of the service instance.
	State *string `pulumi:"state"`
	// The ID of the subaccount.
	SubaccountId *string                            `pulumi:"subaccountId"`
	Timeouts     *SubaccountServiceInstanceTimeouts `pulumi:"timeouts"`
	// Shows whether the resource can be used.
	Usable *bool `pulumi:"usable"`
}

type SubaccountServiceInstanceState struct {
	// Contextual data for the resource.
	Context pulumi.StringPtrInput
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate pulumi.StringPtrInput
	// The set of words or phrases assigned to the service instance.
	Labels pulumi.StringArrayMapInput
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified pulumi.StringPtrInput
	// The name of the service instance.
	Name pulumi.StringPtrInput
	// The configuration parameters for the service instance.
	Parameters pulumi.StringPtrInput
	// The platform ID.
	PlatformId pulumi.StringPtrInput
	Ready      pulumi.BoolPtrInput
	// The ID of the instance to which the service instance refers.
	ReferencedInstanceId pulumi.StringPtrInput
	// The ID of the service plan.
	ServiceplanId pulumi.StringPtrInput
	// Shows whether the service instance is shared.
	Shared pulumi.BoolPtrInput
	// The current state of the service instance.
	State pulumi.StringPtrInput
	// The ID of the subaccount.
	SubaccountId pulumi.StringPtrInput
	Timeouts     SubaccountServiceInstanceTimeoutsPtrInput
	// Shows whether the resource can be used.
	Usable pulumi.BoolPtrInput
}

func (SubaccountServiceInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*subaccountServiceInstanceState)(nil)).Elem()
}

type subaccountServiceInstanceArgs struct {
	// The set of words or phrases assigned to the service instance.
	Labels map[string][]string `pulumi:"labels"`
	// The name of the service instance.
	Name *string `pulumi:"name"`
	// The configuration parameters for the service instance.
	Parameters *string `pulumi:"parameters"`
	// The ID of the service plan.
	ServiceplanId string `pulumi:"serviceplanId"`
	// The ID of the subaccount.
	SubaccountId string                             `pulumi:"subaccountId"`
	Timeouts     *SubaccountServiceInstanceTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a SubaccountServiceInstance resource.
type SubaccountServiceInstanceArgs struct {
	// The set of words or phrases assigned to the service instance.
	Labels pulumi.StringArrayMapInput
	// The name of the service instance.
	Name pulumi.StringPtrInput
	// The configuration parameters for the service instance.
	Parameters pulumi.StringPtrInput
	// The ID of the service plan.
	ServiceplanId pulumi.StringInput
	// The ID of the subaccount.
	SubaccountId pulumi.StringInput
	Timeouts     SubaccountServiceInstanceTimeoutsPtrInput
}

func (SubaccountServiceInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subaccountServiceInstanceArgs)(nil)).Elem()
}

type SubaccountServiceInstanceInput interface {
	pulumi.Input

	ToSubaccountServiceInstanceOutput() SubaccountServiceInstanceOutput
	ToSubaccountServiceInstanceOutputWithContext(ctx context.Context) SubaccountServiceInstanceOutput
}

func (*SubaccountServiceInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountServiceInstance)(nil)).Elem()
}

func (i *SubaccountServiceInstance) ToSubaccountServiceInstanceOutput() SubaccountServiceInstanceOutput {
	return i.ToSubaccountServiceInstanceOutputWithContext(context.Background())
}

func (i *SubaccountServiceInstance) ToSubaccountServiceInstanceOutputWithContext(ctx context.Context) SubaccountServiceInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountServiceInstanceOutput)
}

func (i *SubaccountServiceInstance) ToOutput(ctx context.Context) pulumix.Output[*SubaccountServiceInstance] {
	return pulumix.Output[*SubaccountServiceInstance]{
		OutputState: i.ToSubaccountServiceInstanceOutputWithContext(ctx).OutputState,
	}
}

// SubaccountServiceInstanceArrayInput is an input type that accepts SubaccountServiceInstanceArray and SubaccountServiceInstanceArrayOutput values.
// You can construct a concrete instance of `SubaccountServiceInstanceArrayInput` via:
//
//	SubaccountServiceInstanceArray{ SubaccountServiceInstanceArgs{...} }
type SubaccountServiceInstanceArrayInput interface {
	pulumi.Input

	ToSubaccountServiceInstanceArrayOutput() SubaccountServiceInstanceArrayOutput
	ToSubaccountServiceInstanceArrayOutputWithContext(context.Context) SubaccountServiceInstanceArrayOutput
}

type SubaccountServiceInstanceArray []SubaccountServiceInstanceInput

func (SubaccountServiceInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubaccountServiceInstance)(nil)).Elem()
}

func (i SubaccountServiceInstanceArray) ToSubaccountServiceInstanceArrayOutput() SubaccountServiceInstanceArrayOutput {
	return i.ToSubaccountServiceInstanceArrayOutputWithContext(context.Background())
}

func (i SubaccountServiceInstanceArray) ToSubaccountServiceInstanceArrayOutputWithContext(ctx context.Context) SubaccountServiceInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountServiceInstanceArrayOutput)
}

func (i SubaccountServiceInstanceArray) ToOutput(ctx context.Context) pulumix.Output[[]*SubaccountServiceInstance] {
	return pulumix.Output[[]*SubaccountServiceInstance]{
		OutputState: i.ToSubaccountServiceInstanceArrayOutputWithContext(ctx).OutputState,
	}
}

// SubaccountServiceInstanceMapInput is an input type that accepts SubaccountServiceInstanceMap and SubaccountServiceInstanceMapOutput values.
// You can construct a concrete instance of `SubaccountServiceInstanceMapInput` via:
//
//	SubaccountServiceInstanceMap{ "key": SubaccountServiceInstanceArgs{...} }
type SubaccountServiceInstanceMapInput interface {
	pulumi.Input

	ToSubaccountServiceInstanceMapOutput() SubaccountServiceInstanceMapOutput
	ToSubaccountServiceInstanceMapOutputWithContext(context.Context) SubaccountServiceInstanceMapOutput
}

type SubaccountServiceInstanceMap map[string]SubaccountServiceInstanceInput

func (SubaccountServiceInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubaccountServiceInstance)(nil)).Elem()
}

func (i SubaccountServiceInstanceMap) ToSubaccountServiceInstanceMapOutput() SubaccountServiceInstanceMapOutput {
	return i.ToSubaccountServiceInstanceMapOutputWithContext(context.Background())
}

func (i SubaccountServiceInstanceMap) ToSubaccountServiceInstanceMapOutputWithContext(ctx context.Context) SubaccountServiceInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountServiceInstanceMapOutput)
}

func (i SubaccountServiceInstanceMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SubaccountServiceInstance] {
	return pulumix.Output[map[string]*SubaccountServiceInstance]{
		OutputState: i.ToSubaccountServiceInstanceMapOutputWithContext(ctx).OutputState,
	}
}

type SubaccountServiceInstanceOutput struct{ *pulumi.OutputState }

func (SubaccountServiceInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountServiceInstance)(nil)).Elem()
}

func (o SubaccountServiceInstanceOutput) ToSubaccountServiceInstanceOutput() SubaccountServiceInstanceOutput {
	return o
}

func (o SubaccountServiceInstanceOutput) ToSubaccountServiceInstanceOutputWithContext(ctx context.Context) SubaccountServiceInstanceOutput {
	return o
}

func (o SubaccountServiceInstanceOutput) ToOutput(ctx context.Context) pulumix.Output[*SubaccountServiceInstance] {
	return pulumix.Output[*SubaccountServiceInstance]{
		OutputState: o.OutputState,
	}
}

// Contextual data for the resource.
func (o SubaccountServiceInstanceOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringOutput { return v.Context }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o SubaccountServiceInstanceOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// The set of words or phrases assigned to the service instance.
func (o SubaccountServiceInstanceOutput) Labels() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringArrayMapOutput { return v.Labels }).(pulumi.StringArrayMapOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o SubaccountServiceInstanceOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringOutput { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the service instance.
func (o SubaccountServiceInstanceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The configuration parameters for the service instance.
func (o SubaccountServiceInstanceOutput) Parameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringPtrOutput { return v.Parameters }).(pulumi.StringPtrOutput)
}

// The platform ID.
func (o SubaccountServiceInstanceOutput) PlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringOutput { return v.PlatformId }).(pulumi.StringOutput)
}

func (o SubaccountServiceInstanceOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.BoolOutput { return v.Ready }).(pulumi.BoolOutput)
}

// The ID of the instance to which the service instance refers.
func (o SubaccountServiceInstanceOutput) ReferencedInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringOutput { return v.ReferencedInstanceId }).(pulumi.StringOutput)
}

// The ID of the service plan.
func (o SubaccountServiceInstanceOutput) ServiceplanId() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringOutput { return v.ServiceplanId }).(pulumi.StringOutput)
}

// Shows whether the service instance is shared.
func (o SubaccountServiceInstanceOutput) Shared() pulumi.BoolOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.BoolOutput { return v.Shared }).(pulumi.BoolOutput)
}

// The current state of the service instance.
func (o SubaccountServiceInstanceOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

// The ID of the subaccount.
func (o SubaccountServiceInstanceOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.StringOutput { return v.SubaccountId }).(pulumi.StringOutput)
}

func (o SubaccountServiceInstanceOutput) Timeouts() SubaccountServiceInstanceTimeoutsPtrOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) SubaccountServiceInstanceTimeoutsPtrOutput { return v.Timeouts }).(SubaccountServiceInstanceTimeoutsPtrOutput)
}

// Shows whether the resource can be used.
func (o SubaccountServiceInstanceOutput) Usable() pulumi.BoolOutput {
	return o.ApplyT(func(v *SubaccountServiceInstance) pulumi.BoolOutput { return v.Usable }).(pulumi.BoolOutput)
}

type SubaccountServiceInstanceArrayOutput struct{ *pulumi.OutputState }

func (SubaccountServiceInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubaccountServiceInstance)(nil)).Elem()
}

func (o SubaccountServiceInstanceArrayOutput) ToSubaccountServiceInstanceArrayOutput() SubaccountServiceInstanceArrayOutput {
	return o
}

func (o SubaccountServiceInstanceArrayOutput) ToSubaccountServiceInstanceArrayOutputWithContext(ctx context.Context) SubaccountServiceInstanceArrayOutput {
	return o
}

func (o SubaccountServiceInstanceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SubaccountServiceInstance] {
	return pulumix.Output[[]*SubaccountServiceInstance]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountServiceInstanceArrayOutput) Index(i pulumi.IntInput) SubaccountServiceInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SubaccountServiceInstance {
		return vs[0].([]*SubaccountServiceInstance)[vs[1].(int)]
	}).(SubaccountServiceInstanceOutput)
}

type SubaccountServiceInstanceMapOutput struct{ *pulumi.OutputState }

func (SubaccountServiceInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubaccountServiceInstance)(nil)).Elem()
}

func (o SubaccountServiceInstanceMapOutput) ToSubaccountServiceInstanceMapOutput() SubaccountServiceInstanceMapOutput {
	return o
}

func (o SubaccountServiceInstanceMapOutput) ToSubaccountServiceInstanceMapOutputWithContext(ctx context.Context) SubaccountServiceInstanceMapOutput {
	return o
}

func (o SubaccountServiceInstanceMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SubaccountServiceInstance] {
	return pulumix.Output[map[string]*SubaccountServiceInstance]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountServiceInstanceMapOutput) MapIndex(k pulumi.StringInput) SubaccountServiceInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SubaccountServiceInstance {
		return vs[0].(map[string]*SubaccountServiceInstance)[vs[1].(string)]
	}).(SubaccountServiceInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountServiceInstanceInput)(nil)).Elem(), &SubaccountServiceInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountServiceInstanceArrayInput)(nil)).Elem(), SubaccountServiceInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountServiceInstanceMapInput)(nil)).Elem(), SubaccountServiceInstanceMap{})
	pulumi.RegisterOutputType(SubaccountServiceInstanceOutput{})
	pulumi.RegisterOutputType(SubaccountServiceInstanceArrayOutput{})
	pulumi.RegisterOutputType(SubaccountServiceInstanceMapOutput{})
}
