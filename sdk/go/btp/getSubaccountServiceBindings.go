// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Lists all service bindings in a subaccount, i.e. the access details to consume a service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetSubaccountServiceBindings(ctx, &btp.GetSubaccountServiceBindingsArgs{
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = btp.GetSubaccountServiceBindings(ctx, &btp.GetSubaccountServiceBindingsArgs{
//				LabelsFilter: pulumi.StringRef("subaccount_id eq '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f'"),
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubaccountServiceBindings(ctx *pulumi.Context, args *GetSubaccountServiceBindingsArgs, opts ...pulumi.InvokeOption) (*GetSubaccountServiceBindingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubaccountServiceBindingsResult
	err := ctx.Invoke("btp:index/getSubaccountServiceBindings:getSubaccountServiceBindings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubaccountServiceBindings.
type GetSubaccountServiceBindingsArgs struct {
	// Filters the service bindings based on the field query.
	FieldsFilter *string `pulumi:"fieldsFilter"`
	// Filters the service binding based on the label query.
	LabelsFilter *string `pulumi:"labelsFilter"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
}

// A collection of values returned by getSubaccountServiceBindings.
type GetSubaccountServiceBindingsResult struct {
	// Filters the service bindings based on the field query.
	FieldsFilter *string `pulumi:"fieldsFilter"`
	// The ID of the subaccount.
	//
	// Deprecated: Use the `subaccount_id` attribute instead
	Id string `pulumi:"id"`
	// Filters the service binding based on the label query.
	LabelsFilter *string `pulumi:"labelsFilter"`
	// The ID of the subaccount.
	SubaccountId string                              `pulumi:"subaccountId"`
	Values       []GetSubaccountServiceBindingsValue `pulumi:"values"`
}

func GetSubaccountServiceBindingsOutput(ctx *pulumi.Context, args GetSubaccountServiceBindingsOutputArgs, opts ...pulumi.InvokeOption) GetSubaccountServiceBindingsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubaccountServiceBindingsResult, error) {
			args := v.(GetSubaccountServiceBindingsArgs)
			r, err := GetSubaccountServiceBindings(ctx, &args, opts...)
			var s GetSubaccountServiceBindingsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubaccountServiceBindingsResultOutput)
}

// A collection of arguments for invoking getSubaccountServiceBindings.
type GetSubaccountServiceBindingsOutputArgs struct {
	// Filters the service bindings based on the field query.
	FieldsFilter pulumi.StringPtrInput `pulumi:"fieldsFilter"`
	// Filters the service binding based on the label query.
	LabelsFilter pulumi.StringPtrInput `pulumi:"labelsFilter"`
	// The ID of the subaccount.
	SubaccountId pulumi.StringInput `pulumi:"subaccountId"`
}

func (GetSubaccountServiceBindingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceBindingsArgs)(nil)).Elem()
}

// A collection of values returned by getSubaccountServiceBindings.
type GetSubaccountServiceBindingsResultOutput struct{ *pulumi.OutputState }

func (GetSubaccountServiceBindingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceBindingsResult)(nil)).Elem()
}

func (o GetSubaccountServiceBindingsResultOutput) ToGetSubaccountServiceBindingsResultOutput() GetSubaccountServiceBindingsResultOutput {
	return o
}

func (o GetSubaccountServiceBindingsResultOutput) ToGetSubaccountServiceBindingsResultOutputWithContext(ctx context.Context) GetSubaccountServiceBindingsResultOutput {
	return o
}

func (o GetSubaccountServiceBindingsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServiceBindingsResult] {
	return pulumix.Output[GetSubaccountServiceBindingsResult]{
		OutputState: o.OutputState,
	}
}

// Filters the service bindings based on the field query.
func (o GetSubaccountServiceBindingsResultOutput) FieldsFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsResult) *string { return v.FieldsFilter }).(pulumi.StringPtrOutput)
}

// The ID of the subaccount.
//
// Deprecated: Use the `subaccount_id` attribute instead
func (o GetSubaccountServiceBindingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Filters the service binding based on the label query.
func (o GetSubaccountServiceBindingsResultOutput) LabelsFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsResult) *string { return v.LabelsFilter }).(pulumi.StringPtrOutput)
}

// The ID of the subaccount.
func (o GetSubaccountServiceBindingsResultOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsResult) string { return v.SubaccountId }).(pulumi.StringOutput)
}

func (o GetSubaccountServiceBindingsResultOutput) Values() GetSubaccountServiceBindingsValueArrayOutput {
	return o.ApplyT(func(v GetSubaccountServiceBindingsResult) []GetSubaccountServiceBindingsValue { return v.Values }).(GetSubaccountServiceBindingsValueArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubaccountServiceBindingsResultOutput{})
}
