// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets the security settings of a subaccount.
//
// __Tip:__
// You must be viewer or administrator of the subaccount.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/configure-trusted-domains-for-sap-authorization-and-trust-management-service>
// <https://help.sap.com/docs/btp/sap-business-technology-platform/configure-token-policy-for-sap-authorization-and-trust-management-service>
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.LookupSubaccountSecuritySettings(ctx, &btp.LookupSubaccountSecuritySettingsArgs{
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSubaccountSecuritySettings(ctx *pulumi.Context, args *LookupSubaccountSecuritySettingsArgs, opts ...pulumi.InvokeOption) (*LookupSubaccountSecuritySettingsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSubaccountSecuritySettingsResult
	err := ctx.Invoke("btp:index/getSubaccountSecuritySettings:getSubaccountSecuritySettings", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubaccountSecuritySettings.
type LookupSubaccountSecuritySettingsArgs struct {
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
}

// A collection of values returned by getSubaccountSecuritySettings.
type LookupSubaccountSecuritySettingsResult struct {
	// The validity of the access token.
	AccessTokenValidity int `pulumi:"accessTokenValidity"`
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains []string `pulumi:"customEmailDomains"`
	// The subaccount's default identity provider for business application users.
	DefaultIdentityProvider string `pulumi:"defaultIdentityProvider"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The validity of the refresh token.
	RefreshTokenValidity int `pulumi:"refreshTokenValidity"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser bool `pulumi:"treatUsersWithSameEmailAsSameUser"`
}

func LookupSubaccountSecuritySettingsOutput(ctx *pulumi.Context, args LookupSubaccountSecuritySettingsOutputArgs, opts ...pulumi.InvokeOption) LookupSubaccountSecuritySettingsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubaccountSecuritySettingsResult, error) {
			args := v.(LookupSubaccountSecuritySettingsArgs)
			r, err := LookupSubaccountSecuritySettings(ctx, &args, opts...)
			var s LookupSubaccountSecuritySettingsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubaccountSecuritySettingsResultOutput)
}

// A collection of arguments for invoking getSubaccountSecuritySettings.
type LookupSubaccountSecuritySettingsOutputArgs struct {
	// The ID of the subaccount.
	SubaccountId pulumi.StringInput `pulumi:"subaccountId"`
}

func (LookupSubaccountSecuritySettingsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubaccountSecuritySettingsArgs)(nil)).Elem()
}

// A collection of values returned by getSubaccountSecuritySettings.
type LookupSubaccountSecuritySettingsResultOutput struct{ *pulumi.OutputState }

func (LookupSubaccountSecuritySettingsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubaccountSecuritySettingsResult)(nil)).Elem()
}

func (o LookupSubaccountSecuritySettingsResultOutput) ToLookupSubaccountSecuritySettingsResultOutput() LookupSubaccountSecuritySettingsResultOutput {
	return o
}

func (o LookupSubaccountSecuritySettingsResultOutput) ToLookupSubaccountSecuritySettingsResultOutputWithContext(ctx context.Context) LookupSubaccountSecuritySettingsResultOutput {
	return o
}

func (o LookupSubaccountSecuritySettingsResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSubaccountSecuritySettingsResult] {
	return pulumix.Output[LookupSubaccountSecuritySettingsResult]{
		OutputState: o.OutputState,
	}
}

// The validity of the access token.
func (o LookupSubaccountSecuritySettingsResultOutput) AccessTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSubaccountSecuritySettingsResult) int { return v.AccessTokenValidity }).(pulumi.IntOutput)
}

// Set of domains that are allowed to be used for user authentication.
func (o LookupSubaccountSecuritySettingsResultOutput) CustomEmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSubaccountSecuritySettingsResult) []string { return v.CustomEmailDomains }).(pulumi.StringArrayOutput)
}

// The subaccount's default identity provider for business application users.
func (o LookupSubaccountSecuritySettingsResultOutput) DefaultIdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountSecuritySettingsResult) string { return v.DefaultIdentityProvider }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSubaccountSecuritySettingsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountSecuritySettingsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The validity of the refresh token.
func (o LookupSubaccountSecuritySettingsResultOutput) RefreshTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSubaccountSecuritySettingsResult) int { return v.RefreshTokenValidity }).(pulumi.IntOutput)
}

// The ID of the subaccount.
func (o LookupSubaccountSecuritySettingsResultOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountSecuritySettingsResult) string { return v.SubaccountId }).(pulumi.StringOutput)
}

// If set to true, users with the same email are treated as same users.
func (o LookupSubaccountSecuritySettingsResultOutput) TreatUsersWithSameEmailAsSameUser() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubaccountSecuritySettingsResult) bool { return v.TreatUsersWithSameEmailAsSameUser }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubaccountSecuritySettingsResultOutput{})
}
