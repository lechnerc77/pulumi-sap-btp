// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details about a trust configuration.
//
// __Tip:__
// You must be viewer or administrator of the subaccount.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-btp-neo-environment/platform-identity-provider>
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.LookupSubaccountTrustConfiguration(ctx, &btp.LookupSubaccountTrustConfigurationArgs{
//				Origin:       "sap.default",
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = btp.LookupSubaccountTrustConfiguration(ctx, &btp.LookupSubaccountTrustConfigurationArgs{
//				Origin:       "terraformint-platform",
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSubaccountTrustConfiguration(ctx *pulumi.Context, args *LookupSubaccountTrustConfigurationArgs, opts ...pulumi.InvokeOption) (*LookupSubaccountTrustConfigurationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSubaccountTrustConfigurationResult
	err := ctx.Invoke("btp:index/getSubaccountTrustConfiguration:getSubaccountTrustConfiguration", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubaccountTrustConfiguration.
type LookupSubaccountTrustConfigurationArgs struct {
	// The origin of the identity provider.
	Origin string `pulumi:"origin"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
}

// A collection of values returned by getSubaccountTrustConfiguration.
type LookupSubaccountTrustConfigurationResult struct {
	// Shows whether any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.
	AutoCreateShadowUsers bool `pulumi:"autoCreateShadowUsers"`
	// Shows whether end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.
	AvailableForUserLogon bool `pulumi:"availableForUserLogon"`
	// The description of the trust configuration.
	Description string `pulumi:"description"`
	// The tenant's domain which should be used for user logon.
	Domain string `pulumi:"domain"`
	// The origin of the identity provider.
	//
	// Deprecated: Use the `origin` attribute instead
	Id string `pulumi:"id"`
	// The name of the Identity Authentication tenant the subaccount is connected to.
	IdentityProvider string `pulumi:"identityProvider"`
	// Short string that helps users to identify the link for login.
	LinkText string `pulumi:"linkText"`
	// The display name of the trust configuration.
	Name string `pulumi:"name"`
	// The origin of the identity provider.
	Origin string `pulumi:"origin"`
	// The protocol used to establish trust with the identity provider.
	Protocol string `pulumi:"protocol"`
	// Shows whether the trust configuration can be modified.
	ReadOnly bool `pulumi:"readOnly"`
	// Shows whether the identity provider is currently 'active' or 'inactive'.
	Status string `pulumi:"status"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
	// The trust type.
	Type string `pulumi:"type"`
}

func LookupSubaccountTrustConfigurationOutput(ctx *pulumi.Context, args LookupSubaccountTrustConfigurationOutputArgs, opts ...pulumi.InvokeOption) LookupSubaccountTrustConfigurationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSubaccountTrustConfigurationResult, error) {
			args := v.(LookupSubaccountTrustConfigurationArgs)
			r, err := LookupSubaccountTrustConfiguration(ctx, &args, opts...)
			var s LookupSubaccountTrustConfigurationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSubaccountTrustConfigurationResultOutput)
}

// A collection of arguments for invoking getSubaccountTrustConfiguration.
type LookupSubaccountTrustConfigurationOutputArgs struct {
	// The origin of the identity provider.
	Origin pulumi.StringInput `pulumi:"origin"`
	// The ID of the subaccount.
	SubaccountId pulumi.StringInput `pulumi:"subaccountId"`
}

func (LookupSubaccountTrustConfigurationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubaccountTrustConfigurationArgs)(nil)).Elem()
}

// A collection of values returned by getSubaccountTrustConfiguration.
type LookupSubaccountTrustConfigurationResultOutput struct{ *pulumi.OutputState }

func (LookupSubaccountTrustConfigurationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSubaccountTrustConfigurationResult)(nil)).Elem()
}

func (o LookupSubaccountTrustConfigurationResultOutput) ToLookupSubaccountTrustConfigurationResultOutput() LookupSubaccountTrustConfigurationResultOutput {
	return o
}

func (o LookupSubaccountTrustConfigurationResultOutput) ToLookupSubaccountTrustConfigurationResultOutputWithContext(ctx context.Context) LookupSubaccountTrustConfigurationResultOutput {
	return o
}

func (o LookupSubaccountTrustConfigurationResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupSubaccountTrustConfigurationResult] {
	return pulumix.Output[LookupSubaccountTrustConfigurationResult]{
		OutputState: o.OutputState,
	}
}

// Shows whether any user from the tenant can log in. If not set, only the ones who already have a shadow user can log in.
func (o LookupSubaccountTrustConfigurationResultOutput) AutoCreateShadowUsers() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) bool { return v.AutoCreateShadowUsers }).(pulumi.BoolOutput)
}

// Shows whether end users can choose the trust configuration for login. If not set, the trust configuration can remain active, however only application users that explicitly specify the origin key can use if for login.
func (o LookupSubaccountTrustConfigurationResultOutput) AvailableForUserLogon() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) bool { return v.AvailableForUserLogon }).(pulumi.BoolOutput)
}

// The description of the trust configuration.
func (o LookupSubaccountTrustConfigurationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.Description }).(pulumi.StringOutput)
}

// The tenant's domain which should be used for user logon.
func (o LookupSubaccountTrustConfigurationResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.Domain }).(pulumi.StringOutput)
}

// The origin of the identity provider.
//
// Deprecated: Use the `origin` attribute instead
func (o LookupSubaccountTrustConfigurationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Identity Authentication tenant the subaccount is connected to.
func (o LookupSubaccountTrustConfigurationResultOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.IdentityProvider }).(pulumi.StringOutput)
}

// Short string that helps users to identify the link for login.
func (o LookupSubaccountTrustConfigurationResultOutput) LinkText() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.LinkText }).(pulumi.StringOutput)
}

// The display name of the trust configuration.
func (o LookupSubaccountTrustConfigurationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.Name }).(pulumi.StringOutput)
}

// The origin of the identity provider.
func (o LookupSubaccountTrustConfigurationResultOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.Origin }).(pulumi.StringOutput)
}

// The protocol used to establish trust with the identity provider.
func (o LookupSubaccountTrustConfigurationResultOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.Protocol }).(pulumi.StringOutput)
}

// Shows whether the trust configuration can be modified.
func (o LookupSubaccountTrustConfigurationResultOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

// Shows whether the identity provider is currently 'active' or 'inactive'.
func (o LookupSubaccountTrustConfigurationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.Status }).(pulumi.StringOutput)
}

// The ID of the subaccount.
func (o LookupSubaccountTrustConfigurationResultOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.SubaccountId }).(pulumi.StringOutput)
}

// The trust type.
func (o LookupSubaccountTrustConfigurationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSubaccountTrustConfigurationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSubaccountTrustConfigurationResultOutput{})
}
