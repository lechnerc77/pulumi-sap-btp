// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"errors"
	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Creates a role collection in a subaccount.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/role-collections-and-roles-in-global-accounts-directories-and-subaccounts>
//
// ## Import
//
// terraform
//
// ```sh
//
//	$ pulumi import btp:index/subaccountRoleCollection:SubaccountRoleCollection <resource_name> '<subaccount_id>,<name>'
//
// ```
//
// ```sh
//
//	$ pulumi import btp:index/subaccountRoleCollection:SubaccountRoleCollection destination_admin '6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f,Destination Administrator'
//
// ```
type SubaccountRoleCollection struct {
	pulumi.CustomResourceState

	// The description of the role collection.
	Description pulumi.StringOutput `pulumi:"description"`
	// The name of the role collection.
	Name  pulumi.StringOutput                     `pulumi:"name"`
	Roles SubaccountRoleCollectionRoleArrayOutput `pulumi:"roles"`
	// The ID of the subaccount.
	SubaccountId pulumi.StringOutput `pulumi:"subaccountId"`
}

// NewSubaccountRoleCollection registers a new resource with the given unique name, arguments, and options.
func NewSubaccountRoleCollection(ctx *pulumi.Context,
	name string, args *SubaccountRoleCollectionArgs, opts ...pulumi.ResourceOption) (*SubaccountRoleCollection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Roles == nil {
		return nil, errors.New("invalid value for required argument 'Roles'")
	}
	if args.SubaccountId == nil {
		return nil, errors.New("invalid value for required argument 'SubaccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SubaccountRoleCollection
	err := ctx.RegisterResource("btp:index/subaccountRoleCollection:SubaccountRoleCollection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubaccountRoleCollection gets an existing SubaccountRoleCollection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubaccountRoleCollection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubaccountRoleCollectionState, opts ...pulumi.ResourceOption) (*SubaccountRoleCollection, error) {
	var resource SubaccountRoleCollection
	err := ctx.ReadResource("btp:index/subaccountRoleCollection:SubaccountRoleCollection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubaccountRoleCollection resources.
type subaccountRoleCollectionState struct {
	// The description of the role collection.
	Description *string `pulumi:"description"`
	// The name of the role collection.
	Name  *string                        `pulumi:"name"`
	Roles []SubaccountRoleCollectionRole `pulumi:"roles"`
	// The ID of the subaccount.
	SubaccountId *string `pulumi:"subaccountId"`
}

type SubaccountRoleCollectionState struct {
	// The description of the role collection.
	Description pulumi.StringPtrInput
	// The name of the role collection.
	Name  pulumi.StringPtrInput
	Roles SubaccountRoleCollectionRoleArrayInput
	// The ID of the subaccount.
	SubaccountId pulumi.StringPtrInput
}

func (SubaccountRoleCollectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*subaccountRoleCollectionState)(nil)).Elem()
}

type subaccountRoleCollectionArgs struct {
	// The description of the role collection.
	Description *string `pulumi:"description"`
	// The name of the role collection.
	Name  *string                        `pulumi:"name"`
	Roles []SubaccountRoleCollectionRole `pulumi:"roles"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
}

// The set of arguments for constructing a SubaccountRoleCollection resource.
type SubaccountRoleCollectionArgs struct {
	// The description of the role collection.
	Description pulumi.StringPtrInput
	// The name of the role collection.
	Name  pulumi.StringPtrInput
	Roles SubaccountRoleCollectionRoleArrayInput
	// The ID of the subaccount.
	SubaccountId pulumi.StringInput
}

func (SubaccountRoleCollectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subaccountRoleCollectionArgs)(nil)).Elem()
}

type SubaccountRoleCollectionInput interface {
	pulumi.Input

	ToSubaccountRoleCollectionOutput() SubaccountRoleCollectionOutput
	ToSubaccountRoleCollectionOutputWithContext(ctx context.Context) SubaccountRoleCollectionOutput
}

func (*SubaccountRoleCollection) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountRoleCollection)(nil)).Elem()
}

func (i *SubaccountRoleCollection) ToSubaccountRoleCollectionOutput() SubaccountRoleCollectionOutput {
	return i.ToSubaccountRoleCollectionOutputWithContext(context.Background())
}

func (i *SubaccountRoleCollection) ToSubaccountRoleCollectionOutputWithContext(ctx context.Context) SubaccountRoleCollectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountRoleCollectionOutput)
}

func (i *SubaccountRoleCollection) ToOutput(ctx context.Context) pulumix.Output[*SubaccountRoleCollection] {
	return pulumix.Output[*SubaccountRoleCollection]{
		OutputState: i.ToSubaccountRoleCollectionOutputWithContext(ctx).OutputState,
	}
}

// SubaccountRoleCollectionArrayInput is an input type that accepts SubaccountRoleCollectionArray and SubaccountRoleCollectionArrayOutput values.
// You can construct a concrete instance of `SubaccountRoleCollectionArrayInput` via:
//
//	SubaccountRoleCollectionArray{ SubaccountRoleCollectionArgs{...} }
type SubaccountRoleCollectionArrayInput interface {
	pulumi.Input

	ToSubaccountRoleCollectionArrayOutput() SubaccountRoleCollectionArrayOutput
	ToSubaccountRoleCollectionArrayOutputWithContext(context.Context) SubaccountRoleCollectionArrayOutput
}

type SubaccountRoleCollectionArray []SubaccountRoleCollectionInput

func (SubaccountRoleCollectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubaccountRoleCollection)(nil)).Elem()
}

func (i SubaccountRoleCollectionArray) ToSubaccountRoleCollectionArrayOutput() SubaccountRoleCollectionArrayOutput {
	return i.ToSubaccountRoleCollectionArrayOutputWithContext(context.Background())
}

func (i SubaccountRoleCollectionArray) ToSubaccountRoleCollectionArrayOutputWithContext(ctx context.Context) SubaccountRoleCollectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountRoleCollectionArrayOutput)
}

func (i SubaccountRoleCollectionArray) ToOutput(ctx context.Context) pulumix.Output[[]*SubaccountRoleCollection] {
	return pulumix.Output[[]*SubaccountRoleCollection]{
		OutputState: i.ToSubaccountRoleCollectionArrayOutputWithContext(ctx).OutputState,
	}
}

// SubaccountRoleCollectionMapInput is an input type that accepts SubaccountRoleCollectionMap and SubaccountRoleCollectionMapOutput values.
// You can construct a concrete instance of `SubaccountRoleCollectionMapInput` via:
//
//	SubaccountRoleCollectionMap{ "key": SubaccountRoleCollectionArgs{...} }
type SubaccountRoleCollectionMapInput interface {
	pulumi.Input

	ToSubaccountRoleCollectionMapOutput() SubaccountRoleCollectionMapOutput
	ToSubaccountRoleCollectionMapOutputWithContext(context.Context) SubaccountRoleCollectionMapOutput
}

type SubaccountRoleCollectionMap map[string]SubaccountRoleCollectionInput

func (SubaccountRoleCollectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubaccountRoleCollection)(nil)).Elem()
}

func (i SubaccountRoleCollectionMap) ToSubaccountRoleCollectionMapOutput() SubaccountRoleCollectionMapOutput {
	return i.ToSubaccountRoleCollectionMapOutputWithContext(context.Background())
}

func (i SubaccountRoleCollectionMap) ToSubaccountRoleCollectionMapOutputWithContext(ctx context.Context) SubaccountRoleCollectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountRoleCollectionMapOutput)
}

func (i SubaccountRoleCollectionMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SubaccountRoleCollection] {
	return pulumix.Output[map[string]*SubaccountRoleCollection]{
		OutputState: i.ToSubaccountRoleCollectionMapOutputWithContext(ctx).OutputState,
	}
}

type SubaccountRoleCollectionOutput struct{ *pulumi.OutputState }

func (SubaccountRoleCollectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountRoleCollection)(nil)).Elem()
}

func (o SubaccountRoleCollectionOutput) ToSubaccountRoleCollectionOutput() SubaccountRoleCollectionOutput {
	return o
}

func (o SubaccountRoleCollectionOutput) ToSubaccountRoleCollectionOutputWithContext(ctx context.Context) SubaccountRoleCollectionOutput {
	return o
}

func (o SubaccountRoleCollectionOutput) ToOutput(ctx context.Context) pulumix.Output[*SubaccountRoleCollection] {
	return pulumix.Output[*SubaccountRoleCollection]{
		OutputState: o.OutputState,
	}
}

// The description of the role collection.
func (o SubaccountRoleCollectionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountRoleCollection) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The name of the role collection.
func (o SubaccountRoleCollectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountRoleCollection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SubaccountRoleCollectionOutput) Roles() SubaccountRoleCollectionRoleArrayOutput {
	return o.ApplyT(func(v *SubaccountRoleCollection) SubaccountRoleCollectionRoleArrayOutput { return v.Roles }).(SubaccountRoleCollectionRoleArrayOutput)
}

// The ID of the subaccount.
func (o SubaccountRoleCollectionOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountRoleCollection) pulumi.StringOutput { return v.SubaccountId }).(pulumi.StringOutput)
}

type SubaccountRoleCollectionArrayOutput struct{ *pulumi.OutputState }

func (SubaccountRoleCollectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubaccountRoleCollection)(nil)).Elem()
}

func (o SubaccountRoleCollectionArrayOutput) ToSubaccountRoleCollectionArrayOutput() SubaccountRoleCollectionArrayOutput {
	return o
}

func (o SubaccountRoleCollectionArrayOutput) ToSubaccountRoleCollectionArrayOutputWithContext(ctx context.Context) SubaccountRoleCollectionArrayOutput {
	return o
}

func (o SubaccountRoleCollectionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SubaccountRoleCollection] {
	return pulumix.Output[[]*SubaccountRoleCollection]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountRoleCollectionArrayOutput) Index(i pulumi.IntInput) SubaccountRoleCollectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SubaccountRoleCollection {
		return vs[0].([]*SubaccountRoleCollection)[vs[1].(int)]
	}).(SubaccountRoleCollectionOutput)
}

type SubaccountRoleCollectionMapOutput struct{ *pulumi.OutputState }

func (SubaccountRoleCollectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubaccountRoleCollection)(nil)).Elem()
}

func (o SubaccountRoleCollectionMapOutput) ToSubaccountRoleCollectionMapOutput() SubaccountRoleCollectionMapOutput {
	return o
}

func (o SubaccountRoleCollectionMapOutput) ToSubaccountRoleCollectionMapOutputWithContext(ctx context.Context) SubaccountRoleCollectionMapOutput {
	return o
}

func (o SubaccountRoleCollectionMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SubaccountRoleCollection] {
	return pulumix.Output[map[string]*SubaccountRoleCollection]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountRoleCollectionMapOutput) MapIndex(k pulumi.StringInput) SubaccountRoleCollectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SubaccountRoleCollection {
		return vs[0].(map[string]*SubaccountRoleCollection)[vs[1].(string)]
	}).(SubaccountRoleCollectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountRoleCollectionInput)(nil)).Elem(), &SubaccountRoleCollection{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountRoleCollectionArrayInput)(nil)).Elem(), SubaccountRoleCollectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountRoleCollectionMapInput)(nil)).Elem(), SubaccountRoleCollectionMap{})
	pulumi.RegisterOutputType(SubaccountRoleCollectionOutput{})
	pulumi.RegisterOutputType(SubaccountRoleCollectionArrayOutput{})
	pulumi.RegisterOutputType(SubaccountRoleCollectionMapOutput{})
}
