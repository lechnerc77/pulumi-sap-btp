// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details about a specific service offering such as its ID, name, description, metadata, and the associated service brokers.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetSubaccountServiceOffering(ctx, &btp.GetSubaccountServiceOfferingArgs{
//				Id:           pulumi.StringRef("4e953cf1-7eda-4ebb-a58c-02c6ebfe45fb"),
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = btp.GetSubaccountServiceOffering(ctx, &btp.GetSubaccountServiceOfferingArgs{
//				Name:         pulumi.StringRef("auditlog-management"),
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubaccountServiceOffering(ctx *pulumi.Context, args *GetSubaccountServiceOfferingArgs, opts ...pulumi.InvokeOption) (*GetSubaccountServiceOfferingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubaccountServiceOfferingResult
	err := ctx.Invoke("btp:index/getSubaccountServiceOffering:getSubaccountServiceOffering", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubaccountServiceOffering.
type GetSubaccountServiceOfferingArgs struct {
	// The ID of the service offering.
	Id *string `pulumi:"id"`
	// The name of the service offering.
	Name *string `pulumi:"name"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
}

// A collection of values returned by getSubaccountServiceOffering.
type GetSubaccountServiceOfferingResult struct {
	// Shows whether the context for the service offering can be updated.
	AllowContextUpdates bool `pulumi:"allowContextUpdates"`
	// Shows whether the service offering is bindable.
	Bindable bool `pulumi:"bindable"`
	// Shows whether the bindings associated with the service offering can be retrieved.
	BindingsRetrievable bool `pulumi:"bindingsRetrievable"`
	// The ID of the broker that provides the service plan.
	BrokerId string `pulumi:"brokerId"`
	// The ID of the service offering as provided by the catalog.
	CatalogId string `pulumi:"catalogId"`
	// The catalog name of the service offering.
	CatalogName string `pulumi:"catalogName"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// The description of the service offering.
	Description string `pulumi:"description"`
	// The ID of the service offering.
	Id string `pulumi:"id"`
	// Shows whether the service instances associated with the service offering can be retrieved.
	InstancesRetrievable bool `pulumi:"instancesRetrievable"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified string `pulumi:"lastModified"`
	// The name of the service offering.
	Name string `pulumi:"name"`
	// Shows whether the offered plan can be updated.
	PlanUpdateable bool `pulumi:"planUpdateable"`
	// Shows whether the service offering is ready to be advertised.
	Ready bool `pulumi:"ready"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
	// The list of tags for the service offering.
	Tags []string `pulumi:"tags"`
}

func GetSubaccountServiceOfferingOutput(ctx *pulumi.Context, args GetSubaccountServiceOfferingOutputArgs, opts ...pulumi.InvokeOption) GetSubaccountServiceOfferingResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubaccountServiceOfferingResult, error) {
			args := v.(GetSubaccountServiceOfferingArgs)
			r, err := GetSubaccountServiceOffering(ctx, &args, opts...)
			var s GetSubaccountServiceOfferingResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubaccountServiceOfferingResultOutput)
}

// A collection of arguments for invoking getSubaccountServiceOffering.
type GetSubaccountServiceOfferingOutputArgs struct {
	// The ID of the service offering.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the service offering.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ID of the subaccount.
	SubaccountId pulumi.StringInput `pulumi:"subaccountId"`
}

func (GetSubaccountServiceOfferingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceOfferingArgs)(nil)).Elem()
}

// A collection of values returned by getSubaccountServiceOffering.
type GetSubaccountServiceOfferingResultOutput struct{ *pulumi.OutputState }

func (GetSubaccountServiceOfferingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServiceOfferingResult)(nil)).Elem()
}

func (o GetSubaccountServiceOfferingResultOutput) ToGetSubaccountServiceOfferingResultOutput() GetSubaccountServiceOfferingResultOutput {
	return o
}

func (o GetSubaccountServiceOfferingResultOutput) ToGetSubaccountServiceOfferingResultOutputWithContext(ctx context.Context) GetSubaccountServiceOfferingResultOutput {
	return o
}

func (o GetSubaccountServiceOfferingResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServiceOfferingResult] {
	return pulumix.Output[GetSubaccountServiceOfferingResult]{
		OutputState: o.OutputState,
	}
}

// Shows whether the context for the service offering can be updated.
func (o GetSubaccountServiceOfferingResultOutput) AllowContextUpdates() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) bool { return v.AllowContextUpdates }).(pulumi.BoolOutput)
}

// Shows whether the service offering is bindable.
func (o GetSubaccountServiceOfferingResultOutput) Bindable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) bool { return v.Bindable }).(pulumi.BoolOutput)
}

// Shows whether the bindings associated with the service offering can be retrieved.
func (o GetSubaccountServiceOfferingResultOutput) BindingsRetrievable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) bool { return v.BindingsRetrievable }).(pulumi.BoolOutput)
}

// The ID of the broker that provides the service plan.
func (o GetSubaccountServiceOfferingResultOutput) BrokerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) string { return v.BrokerId }).(pulumi.StringOutput)
}

// The ID of the service offering as provided by the catalog.
func (o GetSubaccountServiceOfferingResultOutput) CatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) string { return v.CatalogId }).(pulumi.StringOutput)
}

// The catalog name of the service offering.
func (o GetSubaccountServiceOfferingResultOutput) CatalogName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) string { return v.CatalogName }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServiceOfferingResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The description of the service offering.
func (o GetSubaccountServiceOfferingResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the service offering.
func (o GetSubaccountServiceOfferingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) string { return v.Id }).(pulumi.StringOutput)
}

// Shows whether the service instances associated with the service offering can be retrieved.
func (o GetSubaccountServiceOfferingResultOutput) InstancesRetrievable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) bool { return v.InstancesRetrievable }).(pulumi.BoolOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServiceOfferingResultOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) string { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the service offering.
func (o GetSubaccountServiceOfferingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) string { return v.Name }).(pulumi.StringOutput)
}

// Shows whether the offered plan can be updated.
func (o GetSubaccountServiceOfferingResultOutput) PlanUpdateable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) bool { return v.PlanUpdateable }).(pulumi.BoolOutput)
}

// Shows whether the service offering is ready to be advertised.
func (o GetSubaccountServiceOfferingResultOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) bool { return v.Ready }).(pulumi.BoolOutput)
}

// The ID of the subaccount.
func (o GetSubaccountServiceOfferingResultOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) string { return v.SubaccountId }).(pulumi.StringOutput)
}

// The list of tags for the service offering.
func (o GetSubaccountServiceOfferingResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSubaccountServiceOfferingResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubaccountServiceOfferingResultOutput{})
}
