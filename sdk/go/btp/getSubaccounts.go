// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets all the subaccounts in a global account, including the subaccounts in directories.
//
// __Tip:__
// You must be assigned to the admin or viewer role of the global account, directory.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetSubaccounts(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = btp.GetSubaccounts(ctx, &btp.GetSubaccountsArgs{
//				LabelsFilter: pulumi.StringRef("my-label=my-value"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubaccounts(ctx *pulumi.Context, args *GetSubaccountsArgs, opts ...pulumi.InvokeOption) (*GetSubaccountsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubaccountsResult
	err := ctx.Invoke("btp:index/getSubaccounts:getSubaccounts", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubaccounts.
type GetSubaccountsArgs struct {
	// Filters the response based on the labels query.
	LabelsFilter *string `pulumi:"labelsFilter"`
}

// A collection of values returned by getSubaccounts.
type GetSubaccountsResult struct {
	// The ID of the global account.
	//
	// Deprecated: Use the `btp_globalaccount` datasource instead
	Id string `pulumi:"id"`
	// Filters the response based on the labels query.
	LabelsFilter *string `pulumi:"labelsFilter"`
	// The subaccounts contained in the global account.
	Values []GetSubaccountsValue `pulumi:"values"`
}

func GetSubaccountsOutput(ctx *pulumi.Context, args GetSubaccountsOutputArgs, opts ...pulumi.InvokeOption) GetSubaccountsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubaccountsResult, error) {
			args := v.(GetSubaccountsArgs)
			r, err := GetSubaccounts(ctx, &args, opts...)
			var s GetSubaccountsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubaccountsResultOutput)
}

// A collection of arguments for invoking getSubaccounts.
type GetSubaccountsOutputArgs struct {
	// Filters the response based on the labels query.
	LabelsFilter pulumi.StringPtrInput `pulumi:"labelsFilter"`
}

func (GetSubaccountsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountsArgs)(nil)).Elem()
}

// A collection of values returned by getSubaccounts.
type GetSubaccountsResultOutput struct{ *pulumi.OutputState }

func (GetSubaccountsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountsResult)(nil)).Elem()
}

func (o GetSubaccountsResultOutput) ToGetSubaccountsResultOutput() GetSubaccountsResultOutput {
	return o
}

func (o GetSubaccountsResultOutput) ToGetSubaccountsResultOutputWithContext(ctx context.Context) GetSubaccountsResultOutput {
	return o
}

func (o GetSubaccountsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountsResult] {
	return pulumix.Output[GetSubaccountsResult]{
		OutputState: o.OutputState,
	}
}

// The ID of the global account.
//
// Deprecated: Use the `btp_globalaccount` datasource instead
func (o GetSubaccountsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Filters the response based on the labels query.
func (o GetSubaccountsResultOutput) LabelsFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSubaccountsResult) *string { return v.LabelsFilter }).(pulumi.StringPtrOutput)
}

// The subaccounts contained in the global account.
func (o GetSubaccountsResultOutput) Values() GetSubaccountsValueArrayOutput {
	return o.ApplyT(func(v GetSubaccountsResult) []GetSubaccountsValue { return v.Values }).(GetSubaccountsValueArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubaccountsResultOutput{})
}
