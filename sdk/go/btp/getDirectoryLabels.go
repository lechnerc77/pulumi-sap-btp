// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets all the user-defined labels that are currently assigned to a specific directory.
//
// __Tip:__
// You must be assigned to the global account admin or viewer role. These roles assignments are not needed for directories of which you are the directory admin.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/account-model>
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetDirectoryLabels(ctx, &btp.GetDirectoryLabelsArgs{
//				DirectoryId: "dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDirectoryLabels(ctx *pulumi.Context, args *GetDirectoryLabelsArgs, opts ...pulumi.InvokeOption) (*GetDirectoryLabelsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDirectoryLabelsResult
	err := ctx.Invoke("btp:index/getDirectoryLabels:getDirectoryLabels", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDirectoryLabels.
type GetDirectoryLabelsArgs struct {
	// The ID of the directory.
	DirectoryId string `pulumi:"directoryId"`
}

// A collection of values returned by getDirectoryLabels.
type GetDirectoryLabelsResult struct {
	// The ID of the directory.
	DirectoryId string `pulumi:"directoryId"`
	// The ID of the directory.
	//
	// Deprecated: Use the `directory_id` attribute instead
	Id string `pulumi:"id"`
	// Contains the label values
	Values map[string][]string `pulumi:"values"`
}

func GetDirectoryLabelsOutput(ctx *pulumi.Context, args GetDirectoryLabelsOutputArgs, opts ...pulumi.InvokeOption) GetDirectoryLabelsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDirectoryLabelsResult, error) {
			args := v.(GetDirectoryLabelsArgs)
			r, err := GetDirectoryLabels(ctx, &args, opts...)
			var s GetDirectoryLabelsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDirectoryLabelsResultOutput)
}

// A collection of arguments for invoking getDirectoryLabels.
type GetDirectoryLabelsOutputArgs struct {
	// The ID of the directory.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
}

func (GetDirectoryLabelsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryLabelsArgs)(nil)).Elem()
}

// A collection of values returned by getDirectoryLabels.
type GetDirectoryLabelsResultOutput struct{ *pulumi.OutputState }

func (GetDirectoryLabelsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryLabelsResult)(nil)).Elem()
}

func (o GetDirectoryLabelsResultOutput) ToGetDirectoryLabelsResultOutput() GetDirectoryLabelsResultOutput {
	return o
}

func (o GetDirectoryLabelsResultOutput) ToGetDirectoryLabelsResultOutputWithContext(ctx context.Context) GetDirectoryLabelsResultOutput {
	return o
}

func (o GetDirectoryLabelsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryLabelsResult] {
	return pulumix.Output[GetDirectoryLabelsResult]{
		OutputState: o.OutputState,
	}
}

// The ID of the directory.
func (o GetDirectoryLabelsResultOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryLabelsResult) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The ID of the directory.
//
// Deprecated: Use the `directory_id` attribute instead
func (o GetDirectoryLabelsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryLabelsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Contains the label values
func (o GetDirectoryLabelsResultOutput) Values() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v GetDirectoryLabelsResult) map[string][]string { return v.Values }).(pulumi.StringArrayMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDirectoryLabelsResultOutput{})
}
