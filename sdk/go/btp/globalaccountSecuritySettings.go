// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Sets the security settings of a global account.
//
// __Tip:__
// You must be administrator of the global account.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/configure-trusted-domains-for-sap-authorization-and-trust-management-service>
// <https://help.sap.com/docs/btp/sap-business-technology-platform/configure-token-policy-for-sap-authorization-and-trust-management-service>
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.NewGlobalaccountSecuritySettings(ctx, "this", &btp.GlobalaccountSecuritySettingsArgs{
//				AccessTokenValidity: pulumi.Int(3600),
//				CustomEmailDomains: pulumi.StringArray{
//					pulumi.String("yourdomain.test"),
//				},
//				DefaultIdentityProvider:           pulumi.String("sap.custom"),
//				RefreshTokenValidity:              pulumi.Int(3600),
//				TreatUsersWithSameEmailAsSameUser: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type GlobalaccountSecuritySettings struct {
	pulumi.CustomResourceState

	// The validity of the access token.
	AccessTokenValidity pulumi.IntOutput `pulumi:"accessTokenValidity"`
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains pulumi.StringArrayOutput `pulumi:"customEmailDomains"`
	// The global account's default identity provider for platform users. Used to log on to platform tools such as SAP BTP cockpit or the btp CLI.
	DefaultIdentityProvider pulumi.StringOutput `pulumi:"defaultIdentityProvider"`
	// The validity of the refresh token.
	RefreshTokenValidity pulumi.IntOutput `pulumi:"refreshTokenValidity"`
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser pulumi.BoolOutput `pulumi:"treatUsersWithSameEmailAsSameUser"`
}

// NewGlobalaccountSecuritySettings registers a new resource with the given unique name, arguments, and options.
func NewGlobalaccountSecuritySettings(ctx *pulumi.Context,
	name string, args *GlobalaccountSecuritySettingsArgs, opts ...pulumi.ResourceOption) (*GlobalaccountSecuritySettings, error) {
	if args == nil {
		args = &GlobalaccountSecuritySettingsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GlobalaccountSecuritySettings
	err := ctx.RegisterResource("btp:index/globalaccountSecuritySettings:GlobalaccountSecuritySettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalaccountSecuritySettings gets an existing GlobalaccountSecuritySettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalaccountSecuritySettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalaccountSecuritySettingsState, opts ...pulumi.ResourceOption) (*GlobalaccountSecuritySettings, error) {
	var resource GlobalaccountSecuritySettings
	err := ctx.ReadResource("btp:index/globalaccountSecuritySettings:GlobalaccountSecuritySettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalaccountSecuritySettings resources.
type globalaccountSecuritySettingsState struct {
	// The validity of the access token.
	AccessTokenValidity *int `pulumi:"accessTokenValidity"`
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains []string `pulumi:"customEmailDomains"`
	// The global account's default identity provider for platform users. Used to log on to platform tools such as SAP BTP cockpit or the btp CLI.
	DefaultIdentityProvider *string `pulumi:"defaultIdentityProvider"`
	// The validity of the refresh token.
	RefreshTokenValidity *int `pulumi:"refreshTokenValidity"`
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser *bool `pulumi:"treatUsersWithSameEmailAsSameUser"`
}

type GlobalaccountSecuritySettingsState struct {
	// The validity of the access token.
	AccessTokenValidity pulumi.IntPtrInput
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains pulumi.StringArrayInput
	// The global account's default identity provider for platform users. Used to log on to platform tools such as SAP BTP cockpit or the btp CLI.
	DefaultIdentityProvider pulumi.StringPtrInput
	// The validity of the refresh token.
	RefreshTokenValidity pulumi.IntPtrInput
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser pulumi.BoolPtrInput
}

func (GlobalaccountSecuritySettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalaccountSecuritySettingsState)(nil)).Elem()
}

type globalaccountSecuritySettingsArgs struct {
	// The validity of the access token.
	AccessTokenValidity *int `pulumi:"accessTokenValidity"`
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains []string `pulumi:"customEmailDomains"`
	// The global account's default identity provider for platform users. Used to log on to platform tools such as SAP BTP cockpit or the btp CLI.
	DefaultIdentityProvider *string `pulumi:"defaultIdentityProvider"`
	// The validity of the refresh token.
	RefreshTokenValidity *int `pulumi:"refreshTokenValidity"`
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser *bool `pulumi:"treatUsersWithSameEmailAsSameUser"`
}

// The set of arguments for constructing a GlobalaccountSecuritySettings resource.
type GlobalaccountSecuritySettingsArgs struct {
	// The validity of the access token.
	AccessTokenValidity pulumi.IntPtrInput
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains pulumi.StringArrayInput
	// The global account's default identity provider for platform users. Used to log on to platform tools such as SAP BTP cockpit or the btp CLI.
	DefaultIdentityProvider pulumi.StringPtrInput
	// The validity of the refresh token.
	RefreshTokenValidity pulumi.IntPtrInput
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser pulumi.BoolPtrInput
}

func (GlobalaccountSecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalaccountSecuritySettingsArgs)(nil)).Elem()
}

type GlobalaccountSecuritySettingsInput interface {
	pulumi.Input

	ToGlobalaccountSecuritySettingsOutput() GlobalaccountSecuritySettingsOutput
	ToGlobalaccountSecuritySettingsOutputWithContext(ctx context.Context) GlobalaccountSecuritySettingsOutput
}

func (*GlobalaccountSecuritySettings) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalaccountSecuritySettings)(nil)).Elem()
}

func (i *GlobalaccountSecuritySettings) ToGlobalaccountSecuritySettingsOutput() GlobalaccountSecuritySettingsOutput {
	return i.ToGlobalaccountSecuritySettingsOutputWithContext(context.Background())
}

func (i *GlobalaccountSecuritySettings) ToGlobalaccountSecuritySettingsOutputWithContext(ctx context.Context) GlobalaccountSecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountSecuritySettingsOutput)
}

func (i *GlobalaccountSecuritySettings) ToOutput(ctx context.Context) pulumix.Output[*GlobalaccountSecuritySettings] {
	return pulumix.Output[*GlobalaccountSecuritySettings]{
		OutputState: i.ToGlobalaccountSecuritySettingsOutputWithContext(ctx).OutputState,
	}
}

// GlobalaccountSecuritySettingsArrayInput is an input type that accepts GlobalaccountSecuritySettingsArray and GlobalaccountSecuritySettingsArrayOutput values.
// You can construct a concrete instance of `GlobalaccountSecuritySettingsArrayInput` via:
//
//	GlobalaccountSecuritySettingsArray{ GlobalaccountSecuritySettingsArgs{...} }
type GlobalaccountSecuritySettingsArrayInput interface {
	pulumi.Input

	ToGlobalaccountSecuritySettingsArrayOutput() GlobalaccountSecuritySettingsArrayOutput
	ToGlobalaccountSecuritySettingsArrayOutputWithContext(context.Context) GlobalaccountSecuritySettingsArrayOutput
}

type GlobalaccountSecuritySettingsArray []GlobalaccountSecuritySettingsInput

func (GlobalaccountSecuritySettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalaccountSecuritySettings)(nil)).Elem()
}

func (i GlobalaccountSecuritySettingsArray) ToGlobalaccountSecuritySettingsArrayOutput() GlobalaccountSecuritySettingsArrayOutput {
	return i.ToGlobalaccountSecuritySettingsArrayOutputWithContext(context.Background())
}

func (i GlobalaccountSecuritySettingsArray) ToGlobalaccountSecuritySettingsArrayOutputWithContext(ctx context.Context) GlobalaccountSecuritySettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountSecuritySettingsArrayOutput)
}

func (i GlobalaccountSecuritySettingsArray) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalaccountSecuritySettings] {
	return pulumix.Output[[]*GlobalaccountSecuritySettings]{
		OutputState: i.ToGlobalaccountSecuritySettingsArrayOutputWithContext(ctx).OutputState,
	}
}

// GlobalaccountSecuritySettingsMapInput is an input type that accepts GlobalaccountSecuritySettingsMap and GlobalaccountSecuritySettingsMapOutput values.
// You can construct a concrete instance of `GlobalaccountSecuritySettingsMapInput` via:
//
//	GlobalaccountSecuritySettingsMap{ "key": GlobalaccountSecuritySettingsArgs{...} }
type GlobalaccountSecuritySettingsMapInput interface {
	pulumi.Input

	ToGlobalaccountSecuritySettingsMapOutput() GlobalaccountSecuritySettingsMapOutput
	ToGlobalaccountSecuritySettingsMapOutputWithContext(context.Context) GlobalaccountSecuritySettingsMapOutput
}

type GlobalaccountSecuritySettingsMap map[string]GlobalaccountSecuritySettingsInput

func (GlobalaccountSecuritySettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalaccountSecuritySettings)(nil)).Elem()
}

func (i GlobalaccountSecuritySettingsMap) ToGlobalaccountSecuritySettingsMapOutput() GlobalaccountSecuritySettingsMapOutput {
	return i.ToGlobalaccountSecuritySettingsMapOutputWithContext(context.Background())
}

func (i GlobalaccountSecuritySettingsMap) ToGlobalaccountSecuritySettingsMapOutputWithContext(ctx context.Context) GlobalaccountSecuritySettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountSecuritySettingsMapOutput)
}

func (i GlobalaccountSecuritySettingsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalaccountSecuritySettings] {
	return pulumix.Output[map[string]*GlobalaccountSecuritySettings]{
		OutputState: i.ToGlobalaccountSecuritySettingsMapOutputWithContext(ctx).OutputState,
	}
}

type GlobalaccountSecuritySettingsOutput struct{ *pulumi.OutputState }

func (GlobalaccountSecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalaccountSecuritySettings)(nil)).Elem()
}

func (o GlobalaccountSecuritySettingsOutput) ToGlobalaccountSecuritySettingsOutput() GlobalaccountSecuritySettingsOutput {
	return o
}

func (o GlobalaccountSecuritySettingsOutput) ToGlobalaccountSecuritySettingsOutputWithContext(ctx context.Context) GlobalaccountSecuritySettingsOutput {
	return o
}

func (o GlobalaccountSecuritySettingsOutput) ToOutput(ctx context.Context) pulumix.Output[*GlobalaccountSecuritySettings] {
	return pulumix.Output[*GlobalaccountSecuritySettings]{
		OutputState: o.OutputState,
	}
}

// The validity of the access token.
func (o GlobalaccountSecuritySettingsOutput) AccessTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v *GlobalaccountSecuritySettings) pulumi.IntOutput { return v.AccessTokenValidity }).(pulumi.IntOutput)
}

// Set of domains that are allowed to be used for user authentication.
func (o GlobalaccountSecuritySettingsOutput) CustomEmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GlobalaccountSecuritySettings) pulumi.StringArrayOutput { return v.CustomEmailDomains }).(pulumi.StringArrayOutput)
}

// The global account's default identity provider for platform users. Used to log on to platform tools such as SAP BTP cockpit or the btp CLI.
func (o GlobalaccountSecuritySettingsOutput) DefaultIdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountSecuritySettings) pulumi.StringOutput { return v.DefaultIdentityProvider }).(pulumi.StringOutput)
}

// The validity of the refresh token.
func (o GlobalaccountSecuritySettingsOutput) RefreshTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v *GlobalaccountSecuritySettings) pulumi.IntOutput { return v.RefreshTokenValidity }).(pulumi.IntOutput)
}

// If set to true, users with the same email are treated as same users.
func (o GlobalaccountSecuritySettingsOutput) TreatUsersWithSameEmailAsSameUser() pulumi.BoolOutput {
	return o.ApplyT(func(v *GlobalaccountSecuritySettings) pulumi.BoolOutput { return v.TreatUsersWithSameEmailAsSameUser }).(pulumi.BoolOutput)
}

type GlobalaccountSecuritySettingsArrayOutput struct{ *pulumi.OutputState }

func (GlobalaccountSecuritySettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalaccountSecuritySettings)(nil)).Elem()
}

func (o GlobalaccountSecuritySettingsArrayOutput) ToGlobalaccountSecuritySettingsArrayOutput() GlobalaccountSecuritySettingsArrayOutput {
	return o
}

func (o GlobalaccountSecuritySettingsArrayOutput) ToGlobalaccountSecuritySettingsArrayOutputWithContext(ctx context.Context) GlobalaccountSecuritySettingsArrayOutput {
	return o
}

func (o GlobalaccountSecuritySettingsArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalaccountSecuritySettings] {
	return pulumix.Output[[]*GlobalaccountSecuritySettings]{
		OutputState: o.OutputState,
	}
}

func (o GlobalaccountSecuritySettingsArrayOutput) Index(i pulumi.IntInput) GlobalaccountSecuritySettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GlobalaccountSecuritySettings {
		return vs[0].([]*GlobalaccountSecuritySettings)[vs[1].(int)]
	}).(GlobalaccountSecuritySettingsOutput)
}

type GlobalaccountSecuritySettingsMapOutput struct{ *pulumi.OutputState }

func (GlobalaccountSecuritySettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalaccountSecuritySettings)(nil)).Elem()
}

func (o GlobalaccountSecuritySettingsMapOutput) ToGlobalaccountSecuritySettingsMapOutput() GlobalaccountSecuritySettingsMapOutput {
	return o
}

func (o GlobalaccountSecuritySettingsMapOutput) ToGlobalaccountSecuritySettingsMapOutputWithContext(ctx context.Context) GlobalaccountSecuritySettingsMapOutput {
	return o
}

func (o GlobalaccountSecuritySettingsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalaccountSecuritySettings] {
	return pulumix.Output[map[string]*GlobalaccountSecuritySettings]{
		OutputState: o.OutputState,
	}
}

func (o GlobalaccountSecuritySettingsMapOutput) MapIndex(k pulumi.StringInput) GlobalaccountSecuritySettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GlobalaccountSecuritySettings {
		return vs[0].(map[string]*GlobalaccountSecuritySettings)[vs[1].(string)]
	}).(GlobalaccountSecuritySettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountSecuritySettingsInput)(nil)).Elem(), &GlobalaccountSecuritySettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountSecuritySettingsArrayInput)(nil)).Elem(), GlobalaccountSecuritySettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountSecuritySettingsMapInput)(nil)).Elem(), GlobalaccountSecuritySettingsMap{})
	pulumi.RegisterOutputType(GlobalaccountSecuritySettingsOutput{})
	pulumi.RegisterOutputType(GlobalaccountSecuritySettingsArrayOutput{})
	pulumi.RegisterOutputType(GlobalaccountSecuritySettingsMapOutput{})
}
