// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets all the entitlements and quota assignments for a directory.
//
// To view all the resources that a directory and its subdirectories and subaccounts are entitled to use, the following condition must be met:
// * The directory must be a directory that is configured to manage its own entitlements.
// * You must be assigned to either the global account admin or global account viewers role.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetDirectoryEntitlements(ctx, &btp.GetDirectoryEntitlementsArgs{
//				DirectoryId: "dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDirectoryEntitlements(ctx *pulumi.Context, args *GetDirectoryEntitlementsArgs, opts ...pulumi.InvokeOption) (*GetDirectoryEntitlementsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDirectoryEntitlementsResult
	err := ctx.Invoke("btp:index/getDirectoryEntitlements:getDirectoryEntitlements", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDirectoryEntitlements.
type GetDirectoryEntitlementsArgs struct {
	// The ID of the directory.
	DirectoryId string `pulumi:"directoryId"`
}

// A collection of values returned by getDirectoryEntitlements.
type GetDirectoryEntitlementsResult struct {
	// The ID of the directory.
	DirectoryId string `pulumi:"directoryId"`
	// The ID of the directory.
	//
	// Deprecated: Use the `directory_id` attribute instead
	Id     string                                    `pulumi:"id"`
	Values map[string]GetDirectoryEntitlementsValues `pulumi:"values"`
}

func GetDirectoryEntitlementsOutput(ctx *pulumi.Context, args GetDirectoryEntitlementsOutputArgs, opts ...pulumi.InvokeOption) GetDirectoryEntitlementsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDirectoryEntitlementsResult, error) {
			args := v.(GetDirectoryEntitlementsArgs)
			r, err := GetDirectoryEntitlements(ctx, &args, opts...)
			var s GetDirectoryEntitlementsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDirectoryEntitlementsResultOutput)
}

// A collection of arguments for invoking getDirectoryEntitlements.
type GetDirectoryEntitlementsOutputArgs struct {
	// The ID of the directory.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
}

func (GetDirectoryEntitlementsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryEntitlementsArgs)(nil)).Elem()
}

// A collection of values returned by getDirectoryEntitlements.
type GetDirectoryEntitlementsResultOutput struct{ *pulumi.OutputState }

func (GetDirectoryEntitlementsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryEntitlementsResult)(nil)).Elem()
}

func (o GetDirectoryEntitlementsResultOutput) ToGetDirectoryEntitlementsResultOutput() GetDirectoryEntitlementsResultOutput {
	return o
}

func (o GetDirectoryEntitlementsResultOutput) ToGetDirectoryEntitlementsResultOutputWithContext(ctx context.Context) GetDirectoryEntitlementsResultOutput {
	return o
}

func (o GetDirectoryEntitlementsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryEntitlementsResult] {
	return pulumix.Output[GetDirectoryEntitlementsResult]{
		OutputState: o.OutputState,
	}
}

// The ID of the directory.
func (o GetDirectoryEntitlementsResultOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryEntitlementsResult) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The ID of the directory.
//
// Deprecated: Use the `directory_id` attribute instead
func (o GetDirectoryEntitlementsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryEntitlementsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDirectoryEntitlementsResultOutput) Values() GetDirectoryEntitlementsValuesMapOutput {
	return o.ApplyT(func(v GetDirectoryEntitlementsResult) map[string]GetDirectoryEntitlementsValues { return v.Values }).(GetDirectoryEntitlementsValuesMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDirectoryEntitlementsResultOutput{})
}
