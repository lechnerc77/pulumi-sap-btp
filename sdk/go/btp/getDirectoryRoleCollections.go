// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets all role collections.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetDirectoryRoleCollections(ctx, &btp.GetDirectoryRoleCollectionsArgs{
//				DirectoryId: "dd005d8b-1fee-4e6b-b6ff-cb9a197b7fe0",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDirectoryRoleCollections(ctx *pulumi.Context, args *GetDirectoryRoleCollectionsArgs, opts ...pulumi.InvokeOption) (*GetDirectoryRoleCollectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDirectoryRoleCollectionsResult
	err := ctx.Invoke("btp:index/getDirectoryRoleCollections:getDirectoryRoleCollections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDirectoryRoleCollections.
type GetDirectoryRoleCollectionsArgs struct {
	// The ID of the directory.
	DirectoryId string `pulumi:"directoryId"`
}

// A collection of values returned by getDirectoryRoleCollections.
type GetDirectoryRoleCollectionsResult struct {
	// The ID of the directory.
	DirectoryId string `pulumi:"directoryId"`
	// The ID of the directory.
	//
	// Deprecated: Use the `directory_id` attribute instead
	Id     string                             `pulumi:"id"`
	Values []GetDirectoryRoleCollectionsValue `pulumi:"values"`
}

func GetDirectoryRoleCollectionsOutput(ctx *pulumi.Context, args GetDirectoryRoleCollectionsOutputArgs, opts ...pulumi.InvokeOption) GetDirectoryRoleCollectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDirectoryRoleCollectionsResult, error) {
			args := v.(GetDirectoryRoleCollectionsArgs)
			r, err := GetDirectoryRoleCollections(ctx, &args, opts...)
			var s GetDirectoryRoleCollectionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDirectoryRoleCollectionsResultOutput)
}

// A collection of arguments for invoking getDirectoryRoleCollections.
type GetDirectoryRoleCollectionsOutputArgs struct {
	// The ID of the directory.
	DirectoryId pulumi.StringInput `pulumi:"directoryId"`
}

func (GetDirectoryRoleCollectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleCollectionsArgs)(nil)).Elem()
}

// A collection of values returned by getDirectoryRoleCollections.
type GetDirectoryRoleCollectionsResultOutput struct{ *pulumi.OutputState }

func (GetDirectoryRoleCollectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDirectoryRoleCollectionsResult)(nil)).Elem()
}

func (o GetDirectoryRoleCollectionsResultOutput) ToGetDirectoryRoleCollectionsResultOutput() GetDirectoryRoleCollectionsResultOutput {
	return o
}

func (o GetDirectoryRoleCollectionsResultOutput) ToGetDirectoryRoleCollectionsResultOutputWithContext(ctx context.Context) GetDirectoryRoleCollectionsResultOutput {
	return o
}

func (o GetDirectoryRoleCollectionsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDirectoryRoleCollectionsResult] {
	return pulumix.Output[GetDirectoryRoleCollectionsResult]{
		OutputState: o.OutputState,
	}
}

// The ID of the directory.
func (o GetDirectoryRoleCollectionsResultOutput) DirectoryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsResult) string { return v.DirectoryId }).(pulumi.StringOutput)
}

// The ID of the directory.
//
// Deprecated: Use the `directory_id` attribute instead
func (o GetDirectoryRoleCollectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDirectoryRoleCollectionsResultOutput) Values() GetDirectoryRoleCollectionsValueArrayOutput {
	return o.ApplyT(func(v GetDirectoryRoleCollectionsResult) []GetDirectoryRoleCollectionsValue { return v.Values }).(GetDirectoryRoleCollectionsValueArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDirectoryRoleCollectionsResultOutput{})
}
