// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"errors"
	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Sets the security settings of a subaccount.
//
// __Tip:__
// You must be administrator of the subaccount.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/configure-trusted-domains-for-sap-authorization-and-trust-management-service>
// <https://help.sap.com/docs/btp/sap-business-technology-platform/configure-token-policy-for-sap-authorization-and-trust-management-service>
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.NewSubaccountSecuritySettings(ctx, "subaccount", &btp.SubaccountSecuritySettingsArgs{
//				AccessTokenValidity: pulumi.Int(3600),
//				CustomEmailDomains: pulumi.StringArray{
//					pulumi.String("yourdomain.test"),
//				},
//				DefaultIdentityProvider:           pulumi.String("sap.custom"),
//				RefreshTokenValidity:              pulumi.Int(3600),
//				SubaccountId:                      pulumi.String("6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f"),
//				TreatUsersWithSameEmailAsSameUser: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type SubaccountSecuritySettings struct {
	pulumi.CustomResourceState

	// The validity of the access token.
	AccessTokenValidity pulumi.IntOutput `pulumi:"accessTokenValidity"`
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains pulumi.StringArrayOutput `pulumi:"customEmailDomains"`
	// The subaccount's default identity provider for business application users.
	DefaultIdentityProvider pulumi.StringOutput `pulumi:"defaultIdentityProvider"`
	// The validity of the refresh token.
	RefreshTokenValidity pulumi.IntOutput `pulumi:"refreshTokenValidity"`
	// The ID of the subaccount.
	SubaccountId pulumi.StringOutput `pulumi:"subaccountId"`
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser pulumi.BoolOutput `pulumi:"treatUsersWithSameEmailAsSameUser"`
}

// NewSubaccountSecuritySettings registers a new resource with the given unique name, arguments, and options.
func NewSubaccountSecuritySettings(ctx *pulumi.Context,
	name string, args *SubaccountSecuritySettingsArgs, opts ...pulumi.ResourceOption) (*SubaccountSecuritySettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubaccountId == nil {
		return nil, errors.New("invalid value for required argument 'SubaccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SubaccountSecuritySettings
	err := ctx.RegisterResource("btp:index/subaccountSecuritySettings:SubaccountSecuritySettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSubaccountSecuritySettings gets an existing SubaccountSecuritySettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSubaccountSecuritySettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SubaccountSecuritySettingsState, opts ...pulumi.ResourceOption) (*SubaccountSecuritySettings, error) {
	var resource SubaccountSecuritySettings
	err := ctx.ReadResource("btp:index/subaccountSecuritySettings:SubaccountSecuritySettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SubaccountSecuritySettings resources.
type subaccountSecuritySettingsState struct {
	// The validity of the access token.
	AccessTokenValidity *int `pulumi:"accessTokenValidity"`
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains []string `pulumi:"customEmailDomains"`
	// The subaccount's default identity provider for business application users.
	DefaultIdentityProvider *string `pulumi:"defaultIdentityProvider"`
	// The validity of the refresh token.
	RefreshTokenValidity *int `pulumi:"refreshTokenValidity"`
	// The ID of the subaccount.
	SubaccountId *string `pulumi:"subaccountId"`
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser *bool `pulumi:"treatUsersWithSameEmailAsSameUser"`
}

type SubaccountSecuritySettingsState struct {
	// The validity of the access token.
	AccessTokenValidity pulumi.IntPtrInput
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains pulumi.StringArrayInput
	// The subaccount's default identity provider for business application users.
	DefaultIdentityProvider pulumi.StringPtrInput
	// The validity of the refresh token.
	RefreshTokenValidity pulumi.IntPtrInput
	// The ID of the subaccount.
	SubaccountId pulumi.StringPtrInput
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser pulumi.BoolPtrInput
}

func (SubaccountSecuritySettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*subaccountSecuritySettingsState)(nil)).Elem()
}

type subaccountSecuritySettingsArgs struct {
	// The validity of the access token.
	AccessTokenValidity *int `pulumi:"accessTokenValidity"`
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains []string `pulumi:"customEmailDomains"`
	// The subaccount's default identity provider for business application users.
	DefaultIdentityProvider *string `pulumi:"defaultIdentityProvider"`
	// The validity of the refresh token.
	RefreshTokenValidity *int `pulumi:"refreshTokenValidity"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser *bool `pulumi:"treatUsersWithSameEmailAsSameUser"`
}

// The set of arguments for constructing a SubaccountSecuritySettings resource.
type SubaccountSecuritySettingsArgs struct {
	// The validity of the access token.
	AccessTokenValidity pulumi.IntPtrInput
	// Set of domains that are allowed to be used for user authentication.
	CustomEmailDomains pulumi.StringArrayInput
	// The subaccount's default identity provider for business application users.
	DefaultIdentityProvider pulumi.StringPtrInput
	// The validity of the refresh token.
	RefreshTokenValidity pulumi.IntPtrInput
	// The ID of the subaccount.
	SubaccountId pulumi.StringInput
	// If set to true, users with the same email are treated as same users.
	TreatUsersWithSameEmailAsSameUser pulumi.BoolPtrInput
}

func (SubaccountSecuritySettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*subaccountSecuritySettingsArgs)(nil)).Elem()
}

type SubaccountSecuritySettingsInput interface {
	pulumi.Input

	ToSubaccountSecuritySettingsOutput() SubaccountSecuritySettingsOutput
	ToSubaccountSecuritySettingsOutputWithContext(ctx context.Context) SubaccountSecuritySettingsOutput
}

func (*SubaccountSecuritySettings) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountSecuritySettings)(nil)).Elem()
}

func (i *SubaccountSecuritySettings) ToSubaccountSecuritySettingsOutput() SubaccountSecuritySettingsOutput {
	return i.ToSubaccountSecuritySettingsOutputWithContext(context.Background())
}

func (i *SubaccountSecuritySettings) ToSubaccountSecuritySettingsOutputWithContext(ctx context.Context) SubaccountSecuritySettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountSecuritySettingsOutput)
}

func (i *SubaccountSecuritySettings) ToOutput(ctx context.Context) pulumix.Output[*SubaccountSecuritySettings] {
	return pulumix.Output[*SubaccountSecuritySettings]{
		OutputState: i.ToSubaccountSecuritySettingsOutputWithContext(ctx).OutputState,
	}
}

// SubaccountSecuritySettingsArrayInput is an input type that accepts SubaccountSecuritySettingsArray and SubaccountSecuritySettingsArrayOutput values.
// You can construct a concrete instance of `SubaccountSecuritySettingsArrayInput` via:
//
//	SubaccountSecuritySettingsArray{ SubaccountSecuritySettingsArgs{...} }
type SubaccountSecuritySettingsArrayInput interface {
	pulumi.Input

	ToSubaccountSecuritySettingsArrayOutput() SubaccountSecuritySettingsArrayOutput
	ToSubaccountSecuritySettingsArrayOutputWithContext(context.Context) SubaccountSecuritySettingsArrayOutput
}

type SubaccountSecuritySettingsArray []SubaccountSecuritySettingsInput

func (SubaccountSecuritySettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubaccountSecuritySettings)(nil)).Elem()
}

func (i SubaccountSecuritySettingsArray) ToSubaccountSecuritySettingsArrayOutput() SubaccountSecuritySettingsArrayOutput {
	return i.ToSubaccountSecuritySettingsArrayOutputWithContext(context.Background())
}

func (i SubaccountSecuritySettingsArray) ToSubaccountSecuritySettingsArrayOutputWithContext(ctx context.Context) SubaccountSecuritySettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountSecuritySettingsArrayOutput)
}

func (i SubaccountSecuritySettingsArray) ToOutput(ctx context.Context) pulumix.Output[[]*SubaccountSecuritySettings] {
	return pulumix.Output[[]*SubaccountSecuritySettings]{
		OutputState: i.ToSubaccountSecuritySettingsArrayOutputWithContext(ctx).OutputState,
	}
}

// SubaccountSecuritySettingsMapInput is an input type that accepts SubaccountSecuritySettingsMap and SubaccountSecuritySettingsMapOutput values.
// You can construct a concrete instance of `SubaccountSecuritySettingsMapInput` via:
//
//	SubaccountSecuritySettingsMap{ "key": SubaccountSecuritySettingsArgs{...} }
type SubaccountSecuritySettingsMapInput interface {
	pulumi.Input

	ToSubaccountSecuritySettingsMapOutput() SubaccountSecuritySettingsMapOutput
	ToSubaccountSecuritySettingsMapOutputWithContext(context.Context) SubaccountSecuritySettingsMapOutput
}

type SubaccountSecuritySettingsMap map[string]SubaccountSecuritySettingsInput

func (SubaccountSecuritySettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubaccountSecuritySettings)(nil)).Elem()
}

func (i SubaccountSecuritySettingsMap) ToSubaccountSecuritySettingsMapOutput() SubaccountSecuritySettingsMapOutput {
	return i.ToSubaccountSecuritySettingsMapOutputWithContext(context.Background())
}

func (i SubaccountSecuritySettingsMap) ToSubaccountSecuritySettingsMapOutputWithContext(ctx context.Context) SubaccountSecuritySettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubaccountSecuritySettingsMapOutput)
}

func (i SubaccountSecuritySettingsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SubaccountSecuritySettings] {
	return pulumix.Output[map[string]*SubaccountSecuritySettings]{
		OutputState: i.ToSubaccountSecuritySettingsMapOutputWithContext(ctx).OutputState,
	}
}

type SubaccountSecuritySettingsOutput struct{ *pulumi.OutputState }

func (SubaccountSecuritySettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubaccountSecuritySettings)(nil)).Elem()
}

func (o SubaccountSecuritySettingsOutput) ToSubaccountSecuritySettingsOutput() SubaccountSecuritySettingsOutput {
	return o
}

func (o SubaccountSecuritySettingsOutput) ToSubaccountSecuritySettingsOutputWithContext(ctx context.Context) SubaccountSecuritySettingsOutput {
	return o
}

func (o SubaccountSecuritySettingsOutput) ToOutput(ctx context.Context) pulumix.Output[*SubaccountSecuritySettings] {
	return pulumix.Output[*SubaccountSecuritySettings]{
		OutputState: o.OutputState,
	}
}

// The validity of the access token.
func (o SubaccountSecuritySettingsOutput) AccessTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v *SubaccountSecuritySettings) pulumi.IntOutput { return v.AccessTokenValidity }).(pulumi.IntOutput)
}

// Set of domains that are allowed to be used for user authentication.
func (o SubaccountSecuritySettingsOutput) CustomEmailDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SubaccountSecuritySettings) pulumi.StringArrayOutput { return v.CustomEmailDomains }).(pulumi.StringArrayOutput)
}

// The subaccount's default identity provider for business application users.
func (o SubaccountSecuritySettingsOutput) DefaultIdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountSecuritySettings) pulumi.StringOutput { return v.DefaultIdentityProvider }).(pulumi.StringOutput)
}

// The validity of the refresh token.
func (o SubaccountSecuritySettingsOutput) RefreshTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v *SubaccountSecuritySettings) pulumi.IntOutput { return v.RefreshTokenValidity }).(pulumi.IntOutput)
}

// The ID of the subaccount.
func (o SubaccountSecuritySettingsOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *SubaccountSecuritySettings) pulumi.StringOutput { return v.SubaccountId }).(pulumi.StringOutput)
}

// If set to true, users with the same email are treated as same users.
func (o SubaccountSecuritySettingsOutput) TreatUsersWithSameEmailAsSameUser() pulumi.BoolOutput {
	return o.ApplyT(func(v *SubaccountSecuritySettings) pulumi.BoolOutput { return v.TreatUsersWithSameEmailAsSameUser }).(pulumi.BoolOutput)
}

type SubaccountSecuritySettingsArrayOutput struct{ *pulumi.OutputState }

func (SubaccountSecuritySettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SubaccountSecuritySettings)(nil)).Elem()
}

func (o SubaccountSecuritySettingsArrayOutput) ToSubaccountSecuritySettingsArrayOutput() SubaccountSecuritySettingsArrayOutput {
	return o
}

func (o SubaccountSecuritySettingsArrayOutput) ToSubaccountSecuritySettingsArrayOutputWithContext(ctx context.Context) SubaccountSecuritySettingsArrayOutput {
	return o
}

func (o SubaccountSecuritySettingsArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SubaccountSecuritySettings] {
	return pulumix.Output[[]*SubaccountSecuritySettings]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountSecuritySettingsArrayOutput) Index(i pulumi.IntInput) SubaccountSecuritySettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SubaccountSecuritySettings {
		return vs[0].([]*SubaccountSecuritySettings)[vs[1].(int)]
	}).(SubaccountSecuritySettingsOutput)
}

type SubaccountSecuritySettingsMapOutput struct{ *pulumi.OutputState }

func (SubaccountSecuritySettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SubaccountSecuritySettings)(nil)).Elem()
}

func (o SubaccountSecuritySettingsMapOutput) ToSubaccountSecuritySettingsMapOutput() SubaccountSecuritySettingsMapOutput {
	return o
}

func (o SubaccountSecuritySettingsMapOutput) ToSubaccountSecuritySettingsMapOutputWithContext(ctx context.Context) SubaccountSecuritySettingsMapOutput {
	return o
}

func (o SubaccountSecuritySettingsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SubaccountSecuritySettings] {
	return pulumix.Output[map[string]*SubaccountSecuritySettings]{
		OutputState: o.OutputState,
	}
}

func (o SubaccountSecuritySettingsMapOutput) MapIndex(k pulumi.StringInput) SubaccountSecuritySettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SubaccountSecuritySettings {
		return vs[0].(map[string]*SubaccountSecuritySettings)[vs[1].(string)]
	}).(SubaccountSecuritySettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountSecuritySettingsInput)(nil)).Elem(), &SubaccountSecuritySettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountSecuritySettingsArrayInput)(nil)).Elem(), SubaccountSecuritySettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubaccountSecuritySettingsMapInput)(nil)).Elem(), SubaccountSecuritySettingsMap{})
	pulumi.RegisterOutputType(SubaccountSecuritySettingsOutput{})
	pulumi.RegisterOutputType(SubaccountSecuritySettingsArrayOutput{})
	pulumi.RegisterOutputType(SubaccountSecuritySettingsMapOutput{})
}
