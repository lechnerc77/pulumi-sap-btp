// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Gets details about a specific service plan such as its name, description, and metadata.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.GetSubaccountServicePlan(ctx, &btp.GetSubaccountServicePlanArgs{
//				Id:           pulumi.StringRef("b50d1b0b-2059-4f21-a014-2ea87752eb48"),
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = btp.GetSubaccountServicePlan(ctx, &btp.GetSubaccountServicePlanArgs{
//				Name:         pulumi.StringRef("free"),
//				OfferingName: pulumi.StringRef("alert-notification"),
//				SubaccountId: "6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSubaccountServicePlan(ctx *pulumi.Context, args *GetSubaccountServicePlanArgs, opts ...pulumi.InvokeOption) (*GetSubaccountServicePlanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSubaccountServicePlanResult
	err := ctx.Invoke("btp:index/getSubaccountServicePlan:getSubaccountServicePlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubaccountServicePlan.
type GetSubaccountServicePlanArgs struct {
	// The ID of the service plan.
	Id *string `pulumi:"id"`
	// The name of the service plan.
	Name *string `pulumi:"name"`
	// The name of the service offering of the plan.
	OfferingName *string `pulumi:"offeringName"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
}

// A collection of values returned by getSubaccountServicePlan.
type GetSubaccountServicePlanResult struct {
	// Shows whether the service plan is bindable.
	Bindable bool `pulumi:"bindable"`
	// The ID of the service plan in the service broker catalog.
	CatalogId string `pulumi:"catalogId"`
	// The name of the associated service broker catalog.
	CatalogName string `pulumi:"catalogName"`
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate string `pulumi:"createdDate"`
	// The description of the service plan.
	Description string `pulumi:"description"`
	// Shows whether the service plan is free.
	Free bool `pulumi:"free"`
	// The ID of the service plan.
	Id string `pulumi:"id"`
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified string `pulumi:"lastModified"`
	// The name of the service plan.
	Name string `pulumi:"name"`
	// The name of the service offering of the plan.
	OfferingName string `pulumi:"offeringName"`
	// Shows whether the service plan is ready.
	Ready bool `pulumi:"ready"`
	// The ID of the service offering.
	ServiceofferingId string `pulumi:"serviceofferingId"`
	// The ID of the subaccount.
	SubaccountId string `pulumi:"subaccountId"`
}

func GetSubaccountServicePlanOutput(ctx *pulumi.Context, args GetSubaccountServicePlanOutputArgs, opts ...pulumi.InvokeOption) GetSubaccountServicePlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSubaccountServicePlanResult, error) {
			args := v.(GetSubaccountServicePlanArgs)
			r, err := GetSubaccountServicePlan(ctx, &args, opts...)
			var s GetSubaccountServicePlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSubaccountServicePlanResultOutput)
}

// A collection of arguments for invoking getSubaccountServicePlan.
type GetSubaccountServicePlanOutputArgs struct {
	// The ID of the service plan.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the service plan.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the service offering of the plan.
	OfferingName pulumi.StringPtrInput `pulumi:"offeringName"`
	// The ID of the subaccount.
	SubaccountId pulumi.StringInput `pulumi:"subaccountId"`
}

func (GetSubaccountServicePlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServicePlanArgs)(nil)).Elem()
}

// A collection of values returned by getSubaccountServicePlan.
type GetSubaccountServicePlanResultOutput struct{ *pulumi.OutputState }

func (GetSubaccountServicePlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSubaccountServicePlanResult)(nil)).Elem()
}

func (o GetSubaccountServicePlanResultOutput) ToGetSubaccountServicePlanResultOutput() GetSubaccountServicePlanResultOutput {
	return o
}

func (o GetSubaccountServicePlanResultOutput) ToGetSubaccountServicePlanResultOutputWithContext(ctx context.Context) GetSubaccountServicePlanResultOutput {
	return o
}

func (o GetSubaccountServicePlanResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetSubaccountServicePlanResult] {
	return pulumix.Output[GetSubaccountServicePlanResult]{
		OutputState: o.OutputState,
	}
}

// Shows whether the service plan is bindable.
func (o GetSubaccountServicePlanResultOutput) Bindable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) bool { return v.Bindable }).(pulumi.BoolOutput)
}

// The ID of the service plan in the service broker catalog.
func (o GetSubaccountServicePlanResultOutput) CatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.CatalogId }).(pulumi.StringOutput)
}

// The name of the associated service broker catalog.
func (o GetSubaccountServicePlanResultOutput) CatalogName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.CatalogName }).(pulumi.StringOutput)
}

// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServicePlanResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// The description of the service plan.
func (o GetSubaccountServicePlanResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.Description }).(pulumi.StringOutput)
}

// Shows whether the service plan is free.
func (o GetSubaccountServicePlanResultOutput) Free() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) bool { return v.Free }).(pulumi.BoolOutput)
}

// The ID of the service plan.
func (o GetSubaccountServicePlanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.Id }).(pulumi.StringOutput)
}

// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
func (o GetSubaccountServicePlanResultOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.LastModified }).(pulumi.StringOutput)
}

// The name of the service plan.
func (o GetSubaccountServicePlanResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the service offering of the plan.
func (o GetSubaccountServicePlanResultOutput) OfferingName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.OfferingName }).(pulumi.StringOutput)
}

// Shows whether the service plan is ready.
func (o GetSubaccountServicePlanResultOutput) Ready() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) bool { return v.Ready }).(pulumi.BoolOutput)
}

// The ID of the service offering.
func (o GetSubaccountServicePlanResultOutput) ServiceofferingId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.ServiceofferingId }).(pulumi.StringOutput)
}

// The ID of the subaccount.
func (o GetSubaccountServicePlanResultOutput) SubaccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSubaccountServicePlanResult) string { return v.SubaccountId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSubaccountServicePlanResultOutput{})
}
