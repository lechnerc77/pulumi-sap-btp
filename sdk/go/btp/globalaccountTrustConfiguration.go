// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package btp

import (
	"context"
	"reflect"

	"errors"
	"github.com/lechnerc77/pulumi-btp/sdk/go/btp/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Establishes trust from a global account to an Identity Authentication tenant.
//
// __Further documentation:__
// <https://help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers>
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/lechnerc77/pulumi-btp/sdk/go/btp"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := btp.NewGlobalaccountTrustConfiguration(ctx, "simple", &btp.GlobalaccountTrustConfigurationArgs{
//				IdentityProvider: pulumi.String("terraformint.accounts400.ondemand.com"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = btp.NewGlobalaccountTrustConfiguration(ctx, "fullyCustomized", &btp.GlobalaccountTrustConfigurationArgs{
//				Description:      pulumi.String("my-description"),
//				IdentityProvider: pulumi.String("terraformint.accounts400.ondemand.com"),
//				Origin:           pulumi.String("my-own-origin-platform"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// terraform
//
// ```sh
//
//	$ pulumi import btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration terraform importbtp_globalaccount_trust_configuration.<resource_name> <origin>
//
// ```
//
// ```sh
//
//	$ pulumi import btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration trust sap.custom
//
// ```
type GlobalaccountTrustConfiguration struct {
	pulumi.CustomResourceState

	// Description of the trust configuration.
	Description pulumi.StringOutput `pulumi:"description"`
	// The tenant's domain which should be used for user logon.
	Domain pulumi.StringOutput `pulumi:"domain"`
	// The name of the Identity Authentication tenant that you want to connect to the global account.
	IdentityProvider pulumi.StringOutput `pulumi:"identityProvider"`
	// The display name of the trust configuration.
	Name pulumi.StringOutput `pulumi:"name"`
	// The origin of the identity provider.
	Origin pulumi.StringOutput `pulumi:"origin"`
	// The protocol used to establish trust with the identity provider.
	Protocol pulumi.StringOutput `pulumi:"protocol"`
	// Shows whether the trust configuration can be modified.
	ReadOnly pulumi.BoolOutput `pulumi:"readOnly"`
	// Determines whether the identity provider is currently 'active' or 'inactive'.
	Status pulumi.StringOutput `pulumi:"status"`
	// The trust type.
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewGlobalaccountTrustConfiguration registers a new resource with the given unique name, arguments, and options.
func NewGlobalaccountTrustConfiguration(ctx *pulumi.Context,
	name string, args *GlobalaccountTrustConfigurationArgs, opts ...pulumi.ResourceOption) (*GlobalaccountTrustConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityProvider == nil {
		return nil, errors.New("invalid value for required argument 'IdentityProvider'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GlobalaccountTrustConfiguration
	err := ctx.RegisterResource("btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalaccountTrustConfiguration gets an existing GlobalaccountTrustConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalaccountTrustConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalaccountTrustConfigurationState, opts ...pulumi.ResourceOption) (*GlobalaccountTrustConfiguration, error) {
	var resource GlobalaccountTrustConfiguration
	err := ctx.ReadResource("btp:index/globalaccountTrustConfiguration:GlobalaccountTrustConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalaccountTrustConfiguration resources.
type globalaccountTrustConfigurationState struct {
	// Description of the trust configuration.
	Description *string `pulumi:"description"`
	// The tenant's domain which should be used for user logon.
	Domain *string `pulumi:"domain"`
	// The name of the Identity Authentication tenant that you want to connect to the global account.
	IdentityProvider *string `pulumi:"identityProvider"`
	// The display name of the trust configuration.
	Name *string `pulumi:"name"`
	// The origin of the identity provider.
	Origin *string `pulumi:"origin"`
	// The protocol used to establish trust with the identity provider.
	Protocol *string `pulumi:"protocol"`
	// Shows whether the trust configuration can be modified.
	ReadOnly *bool `pulumi:"readOnly"`
	// Determines whether the identity provider is currently 'active' or 'inactive'.
	Status *string `pulumi:"status"`
	// The trust type.
	Type *string `pulumi:"type"`
}

type GlobalaccountTrustConfigurationState struct {
	// Description of the trust configuration.
	Description pulumi.StringPtrInput
	// The tenant's domain which should be used for user logon.
	Domain pulumi.StringPtrInput
	// The name of the Identity Authentication tenant that you want to connect to the global account.
	IdentityProvider pulumi.StringPtrInput
	// The display name of the trust configuration.
	Name pulumi.StringPtrInput
	// The origin of the identity provider.
	Origin pulumi.StringPtrInput
	// The protocol used to establish trust with the identity provider.
	Protocol pulumi.StringPtrInput
	// Shows whether the trust configuration can be modified.
	ReadOnly pulumi.BoolPtrInput
	// Determines whether the identity provider is currently 'active' or 'inactive'.
	Status pulumi.StringPtrInput
	// The trust type.
	Type pulumi.StringPtrInput
}

func (GlobalaccountTrustConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalaccountTrustConfigurationState)(nil)).Elem()
}

type globalaccountTrustConfigurationArgs struct {
	// Description of the trust configuration.
	Description *string `pulumi:"description"`
	// The tenant's domain which should be used for user logon.
	Domain *string `pulumi:"domain"`
	// The name of the Identity Authentication tenant that you want to connect to the global account.
	IdentityProvider string `pulumi:"identityProvider"`
	// The display name of the trust configuration.
	Name *string `pulumi:"name"`
	// The origin of the identity provider.
	Origin *string `pulumi:"origin"`
}

// The set of arguments for constructing a GlobalaccountTrustConfiguration resource.
type GlobalaccountTrustConfigurationArgs struct {
	// Description of the trust configuration.
	Description pulumi.StringPtrInput
	// The tenant's domain which should be used for user logon.
	Domain pulumi.StringPtrInput
	// The name of the Identity Authentication tenant that you want to connect to the global account.
	IdentityProvider pulumi.StringInput
	// The display name of the trust configuration.
	Name pulumi.StringPtrInput
	// The origin of the identity provider.
	Origin pulumi.StringPtrInput
}

func (GlobalaccountTrustConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalaccountTrustConfigurationArgs)(nil)).Elem()
}

type GlobalaccountTrustConfigurationInput interface {
	pulumi.Input

	ToGlobalaccountTrustConfigurationOutput() GlobalaccountTrustConfigurationOutput
	ToGlobalaccountTrustConfigurationOutputWithContext(ctx context.Context) GlobalaccountTrustConfigurationOutput
}

func (*GlobalaccountTrustConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalaccountTrustConfiguration)(nil)).Elem()
}

func (i *GlobalaccountTrustConfiguration) ToGlobalaccountTrustConfigurationOutput() GlobalaccountTrustConfigurationOutput {
	return i.ToGlobalaccountTrustConfigurationOutputWithContext(context.Background())
}

func (i *GlobalaccountTrustConfiguration) ToGlobalaccountTrustConfigurationOutputWithContext(ctx context.Context) GlobalaccountTrustConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountTrustConfigurationOutput)
}

func (i *GlobalaccountTrustConfiguration) ToOutput(ctx context.Context) pulumix.Output[*GlobalaccountTrustConfiguration] {
	return pulumix.Output[*GlobalaccountTrustConfiguration]{
		OutputState: i.ToGlobalaccountTrustConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GlobalaccountTrustConfigurationArrayInput is an input type that accepts GlobalaccountTrustConfigurationArray and GlobalaccountTrustConfigurationArrayOutput values.
// You can construct a concrete instance of `GlobalaccountTrustConfigurationArrayInput` via:
//
//	GlobalaccountTrustConfigurationArray{ GlobalaccountTrustConfigurationArgs{...} }
type GlobalaccountTrustConfigurationArrayInput interface {
	pulumi.Input

	ToGlobalaccountTrustConfigurationArrayOutput() GlobalaccountTrustConfigurationArrayOutput
	ToGlobalaccountTrustConfigurationArrayOutputWithContext(context.Context) GlobalaccountTrustConfigurationArrayOutput
}

type GlobalaccountTrustConfigurationArray []GlobalaccountTrustConfigurationInput

func (GlobalaccountTrustConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalaccountTrustConfiguration)(nil)).Elem()
}

func (i GlobalaccountTrustConfigurationArray) ToGlobalaccountTrustConfigurationArrayOutput() GlobalaccountTrustConfigurationArrayOutput {
	return i.ToGlobalaccountTrustConfigurationArrayOutputWithContext(context.Background())
}

func (i GlobalaccountTrustConfigurationArray) ToGlobalaccountTrustConfigurationArrayOutputWithContext(ctx context.Context) GlobalaccountTrustConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountTrustConfigurationArrayOutput)
}

func (i GlobalaccountTrustConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalaccountTrustConfiguration] {
	return pulumix.Output[[]*GlobalaccountTrustConfiguration]{
		OutputState: i.ToGlobalaccountTrustConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

// GlobalaccountTrustConfigurationMapInput is an input type that accepts GlobalaccountTrustConfigurationMap and GlobalaccountTrustConfigurationMapOutput values.
// You can construct a concrete instance of `GlobalaccountTrustConfigurationMapInput` via:
//
//	GlobalaccountTrustConfigurationMap{ "key": GlobalaccountTrustConfigurationArgs{...} }
type GlobalaccountTrustConfigurationMapInput interface {
	pulumi.Input

	ToGlobalaccountTrustConfigurationMapOutput() GlobalaccountTrustConfigurationMapOutput
	ToGlobalaccountTrustConfigurationMapOutputWithContext(context.Context) GlobalaccountTrustConfigurationMapOutput
}

type GlobalaccountTrustConfigurationMap map[string]GlobalaccountTrustConfigurationInput

func (GlobalaccountTrustConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalaccountTrustConfiguration)(nil)).Elem()
}

func (i GlobalaccountTrustConfigurationMap) ToGlobalaccountTrustConfigurationMapOutput() GlobalaccountTrustConfigurationMapOutput {
	return i.ToGlobalaccountTrustConfigurationMapOutputWithContext(context.Background())
}

func (i GlobalaccountTrustConfigurationMap) ToGlobalaccountTrustConfigurationMapOutputWithContext(ctx context.Context) GlobalaccountTrustConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalaccountTrustConfigurationMapOutput)
}

func (i GlobalaccountTrustConfigurationMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalaccountTrustConfiguration] {
	return pulumix.Output[map[string]*GlobalaccountTrustConfiguration]{
		OutputState: i.ToGlobalaccountTrustConfigurationMapOutputWithContext(ctx).OutputState,
	}
}

type GlobalaccountTrustConfigurationOutput struct{ *pulumi.OutputState }

func (GlobalaccountTrustConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalaccountTrustConfiguration)(nil)).Elem()
}

func (o GlobalaccountTrustConfigurationOutput) ToGlobalaccountTrustConfigurationOutput() GlobalaccountTrustConfigurationOutput {
	return o
}

func (o GlobalaccountTrustConfigurationOutput) ToGlobalaccountTrustConfigurationOutputWithContext(ctx context.Context) GlobalaccountTrustConfigurationOutput {
	return o
}

func (o GlobalaccountTrustConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[*GlobalaccountTrustConfiguration] {
	return pulumix.Output[*GlobalaccountTrustConfiguration]{
		OutputState: o.OutputState,
	}
}

// Description of the trust configuration.
func (o GlobalaccountTrustConfigurationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountTrustConfiguration) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The tenant's domain which should be used for user logon.
func (o GlobalaccountTrustConfigurationOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountTrustConfiguration) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

// The name of the Identity Authentication tenant that you want to connect to the global account.
func (o GlobalaccountTrustConfigurationOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountTrustConfiguration) pulumi.StringOutput { return v.IdentityProvider }).(pulumi.StringOutput)
}

// The display name of the trust configuration.
func (o GlobalaccountTrustConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountTrustConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The origin of the identity provider.
func (o GlobalaccountTrustConfigurationOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountTrustConfiguration) pulumi.StringOutput { return v.Origin }).(pulumi.StringOutput)
}

// The protocol used to establish trust with the identity provider.
func (o GlobalaccountTrustConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountTrustConfiguration) pulumi.StringOutput { return v.Protocol }).(pulumi.StringOutput)
}

// Shows whether the trust configuration can be modified.
func (o GlobalaccountTrustConfigurationOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v *GlobalaccountTrustConfiguration) pulumi.BoolOutput { return v.ReadOnly }).(pulumi.BoolOutput)
}

// Determines whether the identity provider is currently 'active' or 'inactive'.
func (o GlobalaccountTrustConfigurationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountTrustConfiguration) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The trust type.
func (o GlobalaccountTrustConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalaccountTrustConfiguration) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type GlobalaccountTrustConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GlobalaccountTrustConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalaccountTrustConfiguration)(nil)).Elem()
}

func (o GlobalaccountTrustConfigurationArrayOutput) ToGlobalaccountTrustConfigurationArrayOutput() GlobalaccountTrustConfigurationArrayOutput {
	return o
}

func (o GlobalaccountTrustConfigurationArrayOutput) ToGlobalaccountTrustConfigurationArrayOutputWithContext(ctx context.Context) GlobalaccountTrustConfigurationArrayOutput {
	return o
}

func (o GlobalaccountTrustConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalaccountTrustConfiguration] {
	return pulumix.Output[[]*GlobalaccountTrustConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GlobalaccountTrustConfigurationArrayOutput) Index(i pulumi.IntInput) GlobalaccountTrustConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GlobalaccountTrustConfiguration {
		return vs[0].([]*GlobalaccountTrustConfiguration)[vs[1].(int)]
	}).(GlobalaccountTrustConfigurationOutput)
}

type GlobalaccountTrustConfigurationMapOutput struct{ *pulumi.OutputState }

func (GlobalaccountTrustConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalaccountTrustConfiguration)(nil)).Elem()
}

func (o GlobalaccountTrustConfigurationMapOutput) ToGlobalaccountTrustConfigurationMapOutput() GlobalaccountTrustConfigurationMapOutput {
	return o
}

func (o GlobalaccountTrustConfigurationMapOutput) ToGlobalaccountTrustConfigurationMapOutputWithContext(ctx context.Context) GlobalaccountTrustConfigurationMapOutput {
	return o
}

func (o GlobalaccountTrustConfigurationMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalaccountTrustConfiguration] {
	return pulumix.Output[map[string]*GlobalaccountTrustConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GlobalaccountTrustConfigurationMapOutput) MapIndex(k pulumi.StringInput) GlobalaccountTrustConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GlobalaccountTrustConfiguration {
		return vs[0].(map[string]*GlobalaccountTrustConfiguration)[vs[1].(string)]
	}).(GlobalaccountTrustConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountTrustConfigurationInput)(nil)).Elem(), &GlobalaccountTrustConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountTrustConfigurationArrayInput)(nil)).Elem(), GlobalaccountTrustConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalaccountTrustConfigurationMapInput)(nil)).Elem(), GlobalaccountTrustConfigurationMap{})
	pulumi.RegisterOutputType(GlobalaccountTrustConfigurationOutput{})
	pulumi.RegisterOutputType(GlobalaccountTrustConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GlobalaccountTrustConfigurationMapOutput{})
}
