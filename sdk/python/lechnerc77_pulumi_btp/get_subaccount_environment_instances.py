# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetSubaccountEnvironmentInstancesResult',
    'AwaitableGetSubaccountEnvironmentInstancesResult',
    'get_subaccount_environment_instances',
    'get_subaccount_environment_instances_output',
]

@pulumi.output_type
class GetSubaccountEnvironmentInstancesResult:
    """
    A collection of values returned by getSubaccountEnvironmentInstances.
    """
    def __init__(__self__, id=None, subaccount_id=None, values=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if subaccount_id and not isinstance(subaccount_id, str):
            raise TypeError("Expected argument 'subaccount_id' to be a str")
        pulumi.set(__self__, "subaccount_id", subaccount_id)
        if values and not isinstance(values, list):
            raise TypeError("Expected argument 'values' to be a list")
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the subaccount.
        """
        warnings.warn("""Use the `subaccount_id` attribute instead""", DeprecationWarning)
        pulumi.log.warn("""id is deprecated: Use the `subaccount_id` attribute instead""")

        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="subaccountId")
    def subaccount_id(self) -> str:
        """
        The ID of the subaccount.
        """
        return pulumi.get(self, "subaccount_id")

    @property
    @pulumi.getter
    def values(self) -> Sequence['outputs.GetSubaccountEnvironmentInstancesValueResult']:
        return pulumi.get(self, "values")


class AwaitableGetSubaccountEnvironmentInstancesResult(GetSubaccountEnvironmentInstancesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSubaccountEnvironmentInstancesResult(
            id=self.id,
            subaccount_id=self.subaccount_id,
            values=self.values)


def get_subaccount_environment_instances(subaccount_id: Optional[str] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSubaccountEnvironmentInstancesResult:
    """
    Gets all the environment instances in a subaccount.

    __Tip:__
    You must be assigned to the subaccount admin or viewer role.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_btp as btp

    all = btp.get_subaccount_environment_instances(subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    ```


    :param str subaccount_id: The ID of the subaccount.
    """
    __args__ = dict()
    __args__['subaccountId'] = subaccount_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('btp:index/getSubaccountEnvironmentInstances:getSubaccountEnvironmentInstances', __args__, opts=opts, typ=GetSubaccountEnvironmentInstancesResult).value

    return AwaitableGetSubaccountEnvironmentInstancesResult(
        id=pulumi.get(__ret__, 'id'),
        subaccount_id=pulumi.get(__ret__, 'subaccount_id'),
        values=pulumi.get(__ret__, 'values'))


@_utilities.lift_output_func(get_subaccount_environment_instances)
def get_subaccount_environment_instances_output(subaccount_id: Optional[pulumi.Input[str]] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSubaccountEnvironmentInstancesResult]:
    """
    Gets all the environment instances in a subaccount.

    __Tip:__
    You must be assigned to the subaccount admin or viewer role.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_btp as btp

    all = btp.get_subaccount_environment_instances(subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    ```


    :param str subaccount_id: The ID of the subaccount.
    """
    ...
