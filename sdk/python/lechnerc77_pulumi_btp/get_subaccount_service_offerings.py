# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetSubaccountServiceOfferingsResult',
    'AwaitableGetSubaccountServiceOfferingsResult',
    'get_subaccount_service_offerings',
    'get_subaccount_service_offerings_output',
]

@pulumi.output_type
class GetSubaccountServiceOfferingsResult:
    """
    A collection of values returned by getSubaccountServiceOfferings.
    """
    def __init__(__self__, environment=None, fields_filter=None, id=None, labels_filter=None, subaccount_id=None, values=None):
        if environment and not isinstance(environment, str):
            raise TypeError("Expected argument 'environment' to be a str")
        pulumi.set(__self__, "environment", environment)
        if fields_filter and not isinstance(fields_filter, str):
            raise TypeError("Expected argument 'fields_filter' to be a str")
        pulumi.set(__self__, "fields_filter", fields_filter)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if labels_filter and not isinstance(labels_filter, str):
            raise TypeError("Expected argument 'labels_filter' to be a str")
        pulumi.set(__self__, "labels_filter", labels_filter)
        if subaccount_id and not isinstance(subaccount_id, str):
            raise TypeError("Expected argument 'subaccount_id' to be a str")
        pulumi.set(__self__, "subaccount_id", subaccount_id)
        if values and not isinstance(values, list):
            raise TypeError("Expected argument 'values' to be a list")
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def environment(self) -> Optional[str]:
        """
        Lists services to be consumed in a Cloud Foundry or Kubernetes-native way. Valid values are:
        """
        return pulumi.get(self, "environment")

    @property
    @pulumi.getter(name="fieldsFilter")
    def fields_filter(self) -> Optional[str]:
        return pulumi.get(self, "fields_filter")

    @property
    @pulumi.getter
    def id(self) -> str:
        warnings.warn("""Use the `subaccount_id` attribute instead""", DeprecationWarning)
        pulumi.log.warn("""id is deprecated: Use the `subaccount_id` attribute instead""")

        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="labelsFilter")
    def labels_filter(self) -> Optional[str]:
        return pulumi.get(self, "labels_filter")

    @property
    @pulumi.getter(name="subaccountId")
    def subaccount_id(self) -> str:
        """
        The ID of the subaccount.
        """
        return pulumi.get(self, "subaccount_id")

    @property
    @pulumi.getter
    def values(self) -> Sequence['outputs.GetSubaccountServiceOfferingsValueResult']:
        return pulumi.get(self, "values")


class AwaitableGetSubaccountServiceOfferingsResult(GetSubaccountServiceOfferingsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSubaccountServiceOfferingsResult(
            environment=self.environment,
            fields_filter=self.fields_filter,
            id=self.id,
            labels_filter=self.labels_filter,
            subaccount_id=self.subaccount_id,
            values=self.values)


def get_subaccount_service_offerings(environment: Optional[str] = None,
                                     fields_filter: Optional[str] = None,
                                     labels_filter: Optional[str] = None,
                                     subaccount_id: Optional[str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSubaccountServiceOfferingsResult:
    """
    Lists the services your subaccount is entitled to use in your runtime environment.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_btp as btp

    all = btp.get_subaccount_service_offerings(subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    sapbtp = btp.get_subaccount_service_offerings(environment="sapbtp",
        subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    k8s = btp.get_subaccount_service_offerings(environment="kubernetes",
        subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    labeled = btp.get_subaccount_service_offerings(labels_filter="a_label eq 'label-value'",
        subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    ```


    :param str environment: Lists services to be consumed in a Cloud Foundry or Kubernetes-native way. Valid values are:
    :param str subaccount_id: The ID of the subaccount.
    """
    __args__ = dict()
    __args__['environment'] = environment
    __args__['fieldsFilter'] = fields_filter
    __args__['labelsFilter'] = labels_filter
    __args__['subaccountId'] = subaccount_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('btp:index/getSubaccountServiceOfferings:getSubaccountServiceOfferings', __args__, opts=opts, typ=GetSubaccountServiceOfferingsResult).value

    return AwaitableGetSubaccountServiceOfferingsResult(
        environment=pulumi.get(__ret__, 'environment'),
        fields_filter=pulumi.get(__ret__, 'fields_filter'),
        id=pulumi.get(__ret__, 'id'),
        labels_filter=pulumi.get(__ret__, 'labels_filter'),
        subaccount_id=pulumi.get(__ret__, 'subaccount_id'),
        values=pulumi.get(__ret__, 'values'))


@_utilities.lift_output_func(get_subaccount_service_offerings)
def get_subaccount_service_offerings_output(environment: Optional[pulumi.Input[Optional[str]]] = None,
                                            fields_filter: Optional[pulumi.Input[Optional[str]]] = None,
                                            labels_filter: Optional[pulumi.Input[Optional[str]]] = None,
                                            subaccount_id: Optional[pulumi.Input[str]] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSubaccountServiceOfferingsResult]:
    """
    Lists the services your subaccount is entitled to use in your runtime environment.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_btp as btp

    all = btp.get_subaccount_service_offerings(subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    sapbtp = btp.get_subaccount_service_offerings(environment="sapbtp",
        subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    k8s = btp.get_subaccount_service_offerings(environment="kubernetes",
        subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    labeled = btp.get_subaccount_service_offerings(labels_filter="a_label eq 'label-value'",
        subaccount_id="6aa64c2f-38c1-49a9-b2e8-cf9fea769b7f")
    ```


    :param str environment: Lists services to be consumed in a Cloud Foundry or Kubernetes-native way. Valid values are:
    :param str subaccount_id: The ID of the subaccount.
    """
    ...
